[{"/home/chetan/Public/Project/oaktreecrew/src/index.js":"1","/home/chetan/Public/Project/oaktreecrew/src/reportWebVitals.js":"2","/home/chetan/Public/Project/oaktreecrew/src/rootReducer.js":"3","/home/chetan/Public/Project/oaktreecrew/src/utils/setAuthorizationToken.js":"4","/home/chetan/Public/Project/oaktreecrew/src/App.js":"5","/home/chetan/Public/Project/oaktreecrew/src/actions/authActions.js":"6","/home/chetan/Public/Project/oaktreecrew/src/constants/env.js":"7","/home/chetan/Public/Project/oaktreecrew/src/reducers/applicationReducer.js":"8","/home/chetan/Public/Project/oaktreecrew/src/reducers/auth.js":"9","/home/chetan/Public/Project/oaktreecrew/src/reducers/settingReducer.js":"10","/home/chetan/Public/Project/oaktreecrew/src/components/NoRoute/NoRoute.js":"11","/home/chetan/Public/Project/oaktreecrew/src/actions/applicationActions.js":"12","/home/chetan/Public/Project/oaktreecrew/src/actions/types.js":"13","/home/chetan/Public/Project/oaktreecrew/src/components/Header/Header.js":"14","/home/chetan/Public/Project/oaktreecrew/src/containers/Dashboard/ClientSignup.js":"15","/home/chetan/Public/Project/oaktreecrew/src/containers/Login/LoginForm.js":"16","/home/chetan/Public/Project/oaktreecrew/src/containers/Dashboard/Dashboard.js":"17","/home/chetan/Public/Project/oaktreecrew/src/components/Footer/Footer.js":"18","/home/chetan/Public/Project/oaktreecrew/src/containers/Client/FreelancerDetail.js":"19","/home/chetan/Public/Project/oaktreecrew/src/containers/Dashboard/FreelancerSelect.js":"20","/home/chetan/Public/Project/oaktreecrew/src/actions/hrActions.js":"21","/home/chetan/Public/Project/oaktreecrew/src/containers/HR/AddFreelancer.js":"22","/home/chetan/Public/Project/oaktreecrew/src/components/Loader/Skelton.js":"23","/home/chetan/Public/Project/oaktreecrew/src/containers/HR/Freelancer.js":"24","/home/chetan/Public/Project/oaktreecrew/src/containers/Password/Confirm.js":"25","/home/chetan/Public/Project/oaktreecrew/src/constants/languages.js":"26","/home/chetan/Public/Project/oaktreecrew/src/constants/category.js":"27","/home/chetan/Public/Project/oaktreecrew/src/constants/skills.js":"28","/home/chetan/Public/Project/oaktreecrew/src/containers/HR/EditFreelancer.js":"29","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditUserFreelancer.js":"30","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditAboutFreelancer.js":"31","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditContactFreelancer.js":"32","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditSocialFreelancer.js":"33","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditProjectFreelancer.js":"34","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditEducationFreelancer.js":"35","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditExperienceFreelancer.js":"36","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditOverviewFreelancer.js":"37","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditSkillFreelancer.js":"38"},{"size":2554,"mtime":1610441288981,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1608806965981,"results":"41","hashOfConfig":"40"},{"size":311,"mtime":1609228090424,"results":"42","hashOfConfig":"40"},{"size":385,"mtime":1594114026307,"results":"43","hashOfConfig":"40"},{"size":5002,"mtime":1610619002416,"results":"44","hashOfConfig":"40"},{"size":11088,"mtime":1610346980071,"results":"45","hashOfConfig":"40"},{"size":131,"mtime":1610955142050,"results":"46","hashOfConfig":"40"},{"size":476,"mtime":1590486805143,"results":"47","hashOfConfig":"40"},{"size":973,"mtime":1594022912978,"results":"48","hashOfConfig":"40"},{"size":196,"mtime":1600326611613,"results":"49","hashOfConfig":"40"},{"size":726,"mtime":1590486805119,"results":"50","hashOfConfig":"40"},{"size":166,"mtime":1590486805091,"results":"51","hashOfConfig":"40"},{"size":930,"mtime":1590486805091,"results":"52","hashOfConfig":"40"},{"size":6239,"mtime":1610361426328,"results":"53","hashOfConfig":"40"},{"size":3700,"mtime":1610608755075,"results":"54","hashOfConfig":"40"},{"size":8363,"mtime":1610095037653,"results":"55","hashOfConfig":"40"},{"size":7301,"mtime":1610705209310,"results":"56","hashOfConfig":"40"},{"size":6690,"mtime":1610722574142,"results":"57","hashOfConfig":"40"},{"size":11403,"mtime":1610720982241,"results":"58","hashOfConfig":"40"},{"size":8194,"mtime":1610705989772,"results":"59","hashOfConfig":"40"},{"size":4954,"mtime":1610633512090,"results":"60","hashOfConfig":"40"},{"size":89873,"mtime":1610954340807,"results":"61","hashOfConfig":"40"},{"size":378,"mtime":1601450205193,"results":"62","hashOfConfig":"40"},{"size":91267,"mtime":1610722925284,"results":"63","hashOfConfig":"40"},{"size":6886,"mtime":1610347240747,"results":"64","hashOfConfig":"40"},{"size":4136,"mtime":1610710017667,"results":"65","hashOfConfig":"40"},{"size":403,"mtime":1610459170532,"results":"66","hashOfConfig":"40"},{"size":6399,"mtime":1610952502609,"results":"67","hashOfConfig":"40"},{"size":38939,"mtime":1610722818520,"results":"68","hashOfConfig":"40"},{"size":2697,"mtime":1610715492171,"results":"69","hashOfConfig":"40"},{"size":1385,"mtime":1610715492167,"results":"70","hashOfConfig":"40"},{"size":1821,"mtime":1610715492167,"results":"71","hashOfConfig":"40"},{"size":1997,"mtime":1610715492171,"results":"72","hashOfConfig":"40"},{"size":6520,"mtime":1610722615820,"results":"73","hashOfConfig":"40"},{"size":8592,"mtime":1610715492167,"results":"74","hashOfConfig":"40"},{"size":6594,"mtime":1610715492171,"results":"75","hashOfConfig":"40"},{"size":7963,"mtime":1610721699166,"results":"76","hashOfConfig":"40"},{"size":1492,"mtime":1610721185306,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1nao399",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"80"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"80"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"80"},"/home/chetan/Public/Project/oaktreecrew/src/index.js",[],["174","175"],"/home/chetan/Public/Project/oaktreecrew/src/reportWebVitals.js",[],"/home/chetan/Public/Project/oaktreecrew/src/rootReducer.js",[],"/home/chetan/Public/Project/oaktreecrew/src/utils/setAuthorizationToken.js",[],"/home/chetan/Public/Project/oaktreecrew/src/App.js",[],"/home/chetan/Public/Project/oaktreecrew/src/actions/authActions.js",["176","177","178"],"import axios from 'axios';\nimport jwtdecode from 'jwt-decode';\nimport { SET_CURRENT_USER, SET_USER_DATA, USER_FETCH_DATA_SUCCESS, SAVE_USER } from './types';\nimport setAuthorizationToken from '../utils/setAuthorizationToken';\nimport { applicationIsLoading } from './applicationActions';\nimport {REACT_API_URL} from '../constants/env.js'\n// import Cookies from 'universal-cookie';\n// const cookies = new Cookies();\n\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user: user\n  }\n}\n\nexport function setUserData(user) {\n  return {\n    type: SET_USER_DATA,\n    user\n  }\n}\n\nexport function userFetchDataSuccess(user) {\n  return {\n    type: USER_FETCH_DATA_SUCCESS,\n    user\n  }\n}\n\nexport function saveHunterAction(user) {\n  return {\n    type: SAVE_USER,\n    user\n  }\n}\n\nexport function setAuthToken(token) {\n  return dispatch => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('accessTokenDate');\n    localStorage.setItem('accessToken', token);\n    localStorage.setItem('accessTokenDate', (new Date()).getTime() );\n    // cookies.set('lead_tn', token, { path: '/' });\n    \n    setAuthorizationToken(token);\n    dispatch(setCurrentUser(token));\n  };\n}\n\nexport function resetPassword(data) {\n  return dispatch => {\n    dispatch(applicationIsLoading(true)) \n    return axios.post(REACT_API_URL + `/users/password`, data)\n    .then(res => {\n      dispatch(applicationIsLoading(false));\n      return res\n    }).catch((err) => {\n      dispatch(applicationIsLoading(false));\n      return err.response\n    });\n  }\n}\n\nexport function updateSalesforceCode(code) {\n  return dispatch => axios.post(REACT_API_URL + `/users/salesforce_integration`, {code})\n    .then(res => {\n      return res\n    }).catch((err) => {\n      return err.response\n    });\n}\n\nexport function updatePassword(data, id) {\n  return dispatch => axios.put(REACT_API_URL + `/users/password?uuid=${id}`, data)\n    .then(res => {\n      return res\n    }).catch((err) => {\n      return err.response\n    });\n}\n\nexport function googleLogin(google_token) {\n    return dispatch => {\n      dispatch(applicationIsLoading(true))\n      return axios.post(`${REACT_API_URL}/omniauth/sign_up`, {\"omniauth\" : google_token})\n        .then(res => {\n          dispatch(applicationIsLoading(false));\n          \n          if (res.data.status === 200) { \n            \n            const token = res.data.user.token;\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('accessTokenDate');\n            localStorage.removeItem('userDetail');\n            localStorage.removeItem('firstName');\n            localStorage.removeItem('role');\n\n            localStorage.setItem('accessToken', token);\n            localStorage.setItem('accessTokenDate', (new Date()).getTime());\n\n            localStorage.setItem('userDetail', JSON.stringify(res.data.user));\n            localStorage.setItem('firstName', res.data.user.firstname);\n            localStorage.setItem('role', res.data.user.current_role);\n            //cookie.set('accessToken', token);\n            // cookies.set('lead_tn', token, { path: '/' });\n        \n            dispatch(setCurrentUser(jwtdecode(token)));\n            setAuthorizationToken(token);\n            \n            return res;\n          }else{\n            return res;  \n          }\n          \n        });\n    }\n}\n\nexport function login(loginData) {\n  return dispatch => {\n    dispatch(applicationIsLoading(true));\n    return axios.post(REACT_API_URL + '/users/sign_in', loginData)\n      .then(res => {\n        dispatch(applicationIsLoading(false));\n        if (res.data.status === 200) { \n          const token = res.data.data.token;\n          // console.log('res.data',res.data.data)\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('accessTokenDate');\n          localStorage.removeItem('userDetail');\n          localStorage.removeItem('firstName');\n          localStorage.removeItem('role');\n\n          localStorage.setItem('accessToken', token);\n          localStorage.setItem('accessTokenDate', (new Date()).getTime());\n\n          localStorage.setItem('userDetail', JSON.stringify(res.data.data.user));\n          localStorage.setItem('firstName', res.data.data.user.first_name);\n          localStorage.setItem('role', res.data.data.user.current_role);\n          \n          dispatch(setCurrentUser(jwtdecode(token)));\n          setAuthorizationToken(token);\n          \n          return res.data;\n        }else{\n          return res.data;\n        }\n      }).catch((err) => {\n        dispatch(applicationIsLoading(false));\n        return err.response\n      });\n  } \n}\n\nexport function getConfirmation(url) {\n  return (dispatch) => {\n    dispatch(applicationIsLoading(true));\n    return axios({\n      method: \"get\",\n      url: url\n    })\n    .then((response) => {\n        if((response.status !== 200) || (response.data.status === 404)) {\n          throw Error(response.statusText);\n          return [];\n        } else {\n          return response.data\n        }\n      }\n    )\n    .then(user => {\n      dispatch(applicationIsLoading(false));\n      return user\n    })\n    .catch((error) => {\n      dispatch(applicationIsLoading(false));\n      console.log(error)\n      return error\n    })\n  }\n}\n\nexport function authorizeToken(data) {\n  return dispatch => axios.get(REACT_API_URL + `/users/password/edit?reset_password_token=${data}`)\n    .then(res => {\n      return res\n    }).catch((err) => {\n      return err.response\n    });\n}\n\nexport function users(uuid) {\n  return (dispatch) => {\n    dispatch(applicationIsLoading(true));\n    return axios({\n      method: \"get\",\n      url: REACT_API_URL + `/users/` + uuid\n    })\n    .then((response) => {\n        if((response.status !== 200) || (response.data.status === 404)) {\n          throw Error(response.statusText);\n          return [];\n        } else {\n          return response.data\n        }\n      }\n    )\n    .then(user => {\n      dispatch(applicationIsLoading(false));\n      dispatch(userFetchDataSuccess(user));\n      return user\n    })\n    .catch((error) => {\n      dispatch(applicationIsLoading(false));\n      console.log(error)\n      return error\n    })\n  }\n}\n\nexport function saveHunter(data) {\n  let dataSend = {user: data}\n  return dispatch => {\n    dispatch(applicationIsLoading(true));\n    return axios.put(REACT_API_URL + `/users/${data.uuid}`, dataSend)\n      .then(res => {\n        dispatch(saveHunterAction(res))\n        dispatch(applicationIsLoading(false));\n        if (res.status === 200) {\n          return res;\n        }\n      }).catch((err) => {\n        dispatch(applicationIsLoading(false));\n        return err.response\n      });\n  } \n}\n\n\nexport function set_session(res) {\n  return dispatch => {\n    const token = res.data.user.token;\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('accessTokenDate');\n    localStorage.removeItem('userDetail');\n    localStorage.removeItem('firstName');\n    localStorage.removeItem('PlanId');\n    localStorage.removeItem('PlanName');\n\n    localStorage.setItem('accessToken', token);\n    localStorage.setItem('accessTokenDate', (new Date()).getTime());\n\n    localStorage.setItem('userDetail', JSON.stringify(res.data.user));\n    localStorage.setItem('firstName', res.data.user.firstname);\n    localStorage.setItem('PlanId', res.data.user.plan_id);\n    localStorage.setItem('PlanName', res.data.user.plan.name);\n\n    // cookies.set('lead_tn', token, { path: '/' });\n    //cookie.set('accessToken', token);\n    dispatch(setCurrentUser(jwtdecode(token)));\n    setAuthorizationToken(token);\n\n  };\n}\n\nexport function logout() {\n  return dispatch => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('accessTokenDate');\n    localStorage.removeItem('linkedin_cookie')\n    localStorage.removeItem('userDetail');\n    localStorage.removeItem('firstName');\n    localStorage.removeItem('PlanId');\n    localStorage.removeItem('PlanName');\n    // cookies.remove('lead_tn');\n\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n\n  };\n}\n\n\nexport function searchEmail(data) {\n  return dispatch => {\n    dispatch(applicationIsLoading(true));\n    return axios.post(REACT_API_URL + `/find_email`, data)\n      .then(res => {\n        dispatch(applicationIsLoading(false));\n        if (res.status === 200) {\n          return res;\n        }\n      }).catch((err) => {\n        dispatch(applicationIsLoading(false));\n        return err.response\n      });\n  } \n}\n\nexport function inviteUser(data) {\n  let dataSend = {emails: data}\n  return dispatch => {\n    dispatch(applicationIsLoading(true));\n    return axios.post(REACT_API_URL + `/invitations`, dataSend)\n      .then(res => {\n        // dispatch(saveHunterAction(res))\n        dispatch(applicationIsLoading(false));\n        if (res.status === 200) {\n          return res;\n        }\n      }).catch((err) => {\n        dispatch(applicationIsLoading(false));\n        return err.response\n      });\n  } \n}\n\nexport function getPlanSuccess(plans) {\n  return {\n    type: \"PLAN_FETCH_DATA_SUCCESS\",\n    plans\n  }\n}\n\nexport function getPlans(url) {\n  return (dispatch) => {\n    dispatch(applicationIsLoading(true));\n    return axios({\n      method: \"get\",\n      url\n    })\n    .then((response) => {\n      dispatch(applicationIsLoading(false));\n        if((response.status !== 200) || (response.data.status === 404)) {\n          throw Error(response.statusText);\n          return [];\n        } else {\n          return response.data\n        }\n      }\n    )\n    .then(plans => {\n      dispatch(getPlanSuccess(plans));\n      return plans\n    })\n    .catch((error) => {\n      dispatch(applicationIsLoading(false));\n      console.log(error)\n      return error\n    })\n  }\n}\n\nexport function paymentSent(data) {\n  // let dataSend = {emails: data}\n  return dispatch => {\n    dispatch(applicationIsLoading(true));\n    return axios.post(REACT_API_URL + `/payment_notifications`, data)\n      .then(res => {\n        // dispatch(saveHunterAction(res))\n        dispatch(applicationIsLoading(false));\n        if (res.status === 200) {\n            localStorage.setItem('PlanId', res.data.plan.id);\n            localStorage.setItem('PlanName', res.data.plan.name);\n\n            var userDetail = JSON.parse(localStorage.userDetail)\n            userDetail.plan_id = res.data.plan.id\n            userDetail.plan = res.data.plan\n\n            localStorage.setItem('userDetail', JSON.stringify(userDetail));\n\n          return res;\n        }\n      }).catch((err) => {\n        dispatch(applicationIsLoading(false));\n        return err.response\n      });\n  } \n}\n\nexport function subcribtion(data) {\n  let dataSend = {email: data}\n  return dispatch => {\n    dispatch(applicationIsLoading(true));\n    return axios.post(REACT_API_URL + `/add_subscriber`, dataSend)\n      .then(res => {\n        // dispatch(saveHunterAction(res))\n        dispatch(applicationIsLoading(false));\n        if (res.status === 200) {\n          return res;\n        }\n      }).catch((err) => {\n        dispatch(applicationIsLoading(false));\n        return err.response\n      });\n  } \n}","/home/chetan/Public/Project/oaktreecrew/src/constants/env.js",[],"/home/chetan/Public/Project/oaktreecrew/src/reducers/applicationReducer.js",[],"/home/chetan/Public/Project/oaktreecrew/src/reducers/auth.js",[],"/home/chetan/Public/Project/oaktreecrew/src/reducers/settingReducer.js",[],"/home/chetan/Public/Project/oaktreecrew/src/components/NoRoute/NoRoute.js",[],"/home/chetan/Public/Project/oaktreecrew/src/actions/applicationActions.js",[],"/home/chetan/Public/Project/oaktreecrew/src/actions/types.js",[],"/home/chetan/Public/Project/oaktreecrew/src/components/Header/Header.js",["179","180","181","182","183"],"import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nimport logo from \"../../assets/images/logo.png\";\n\n\nclass Header extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = { \n      search: ''\n    }\n  }\n\n  logout = (e) => {\n    e.preventDefault();\n    this.props.logout();\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { auth } = this.props;\n    // console.log(\"authh\",auth)\n    \n    var route = this.props.location.pathname\n    var path = route.split('/');\n\n    var isActive1 = ''\n    if(path[1] === \"freelancer\"  || path[1] === \"addfreelancer\"){\n      isActive1 = \"active\"\n    }\n\n    // console.log('addfreelancer', isActive1)\n    return (\n        <header className=\"header-area\">\n            <div className=\"navbar-area is-sticky\">\n                <div className=\"mobile-nav\">\n                    <div className=\"container\">\n                        <div className=\"mobile-menu\">\n                            <div className=\"logo\">\n                                <a href=\"/\">\n                                    <img src={logo} alt=\"logo\" />\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"desktop-nav\">\n                    <div className=\"container\">\n                        <nav className=\"navbar navbar-expand-md navbar-light\">\n                            <a className=\"navbar-brand\" href=\"/\">\n                                <img src={logo} alt=\"logo\" />\n                            </a>\n\n                            <div className=\"collapse navbar-collapse mean-menu\" >\n                               {auth.isAuthenticated &&\n                                <React.Fragment>\n                                    <ul className=\"navbar-nav m-auto\">\n\n                                        <li className=\"nav-item\">\n                                            <a href=\"/freelancer\" className={\"nav-link \"  + isActive1}>\n                                                Freelancers\n                                            </a>\n                                        </li>\n\n                                        <li className=\"nav-item\">\n                                            <a href=\"#\" className=\"nav-link\">\n                                                Clients\n                                            </a>\n                                        </li>\n\n                                        <li className=\"nav-item\">\n                                            <a href=\"#\" className=\"nav-link\">\n                                                Message\n                                            </a>\n                                        </li>\n\n                                        <li className=\"nav-item\">\n                                            <a href=\"#\" className=\"nav-link\">\n                                                Settings\n                                            </a>\n                                        </li>\n                                    </ul>\n                                    \n                                    <div className=\"others-option\">\n                                        <div className=\"get-quote\">\n                                            <a href=\"#\" onClick={this.logout} className=\"default-btn\">\n                                                Log Out\n                                            </a>\n                                        </div>\n                                    </div>\n                                </React.Fragment>\n                               }\n                               {/* !auth.isAuthenticated &&\n                                <React.Fragment>\n                                    <ul class=\"navbar-nav m-auto\">\n                                        \n                                    </ul>\n                                    \n                                    <div class=\"others-option\">\n                                        <div class=\"get-quote\">\n                                            <a href=\"/login\" class=\"default-btn\">\n                                                Login\n                                            </a>\n                                        </div>\n                                    </div>\n                                </React.Fragment>\n                               */}\n                            </div>\n                        </nav>\n                    </div>\n                </div>\n\n                <div className=\"others-option-for-responsive\">\n                    <div className=\"container\">\n                        <div className=\"dot-menu\">\n                            <div className=\"inner\">\n                                <div className=\"circle circle-one\"></div>\n                                <div className=\"circle circle-two\"></div>\n                                <div className=\"circle circle-three\"></div>\n                            </div>\n                        </div>\n                        \n                        <div className=\"container\">\n                            <div className=\"option-inner\">\n                                <div className=\"others-option justify-content-center d-flex align-items-center\">\n                                    <div className=\"get-quote\">\n                                        <a href=\"#\" className=\"default-btn\">\n                                            Post a Job\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header>\n    )\n  }\n}\n\nHeader.contextTypes = {\n    router: PropTypes.object\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout())\n  };\n};\n\nfunction mapStateToProps(state) {\n  return{\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","/home/chetan/Public/Project/oaktreecrew/src/containers/Dashboard/ClientSignup.js",["184","185","186","187","188","189","190","191"],"import React, { useState, useEffect, setState } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\nimport { withRouter, Link } from \"react-router-dom\";\nimport Select from \"react-dropdown-select\";\n// import TIMEZONE from \"../../constants/timezones\";\n\n\n\n\nfunction ClientSignup(props) {\n    \n    const [state , setState] = useState({\n        timezone: \"\",\n        skills: \"\",\n        category: \"\",\n        freelancer_ids: [],\n\n    })\n\n    const handleSelect = (name, value) => {\n      // console.log(name,\"----\",value)\n      if(value.length === 0){\n        return false\n      } \n        setState(prevState => ({\n            ...prevState,\n            [name] : value[0].value\n        }))\n    }\n    \n    return(\n       <section className=\"job-information-area ptb-100\">\n          <div className=\"container\">\n          \n            <div className=\"section-title\">\n              <span>Our talent experts will connect with you to help you find the team you require.</span>\n              <h2>How can we reach you ?</h2>\n            </div>      \n          \n          \n            <div className=\"job-information\">\n              <form>\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Name*</label>\n                      <input className=\"form-control\" type=\"text\" name=\"title\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Company Name</label>\n                      <input className=\"form-control\" type=\"text\" name=\"Company\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Business Email</label>\n                      <input className=\"form-control\" type=\"email\" name=\"email\" />\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-lg-6 col-md-6\">\n                    <div className=\"form-group\">\n                      <label>Phone Number</label>\n                      <input className=\"form-control\" type=\"phone\" name=\"phone\" />\n                    </div>\n                  </div>              \n\n                  <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"form-group\">\n                      <label>Timezone*</label>\n                      <Select \n                          name=\"timezone\" \n                          // options={TIMEZONE}\n                          onChange={(value) => handleSelect('timezone', value)} \n                          value={state.timezone}  \n                      />\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-12\">\n                    <div className=\"form-group checkboxs\">\n                      <input type=\"checkbox\" id=\"chb2\" />\n                      <p>\n                        By clicking checkbox, you agree to our <a href=\"#\">Terms & Conditions</a> And <a href=\"#\">Privacy Policy.</a>\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <button className=\"default-btn\">\n                      Submit\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n    )\n}\n\nexport default withRouter(ClientSignup);","/home/chetan/Public/Project/oaktreecrew/src/containers/Login/LoginForm.js",["192","193"],"import React, { useState } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\nimport { login, resetPassword } from '../../actions/authActions';\n// import Loader from '../../components/Loader/Loader';\nimport { withRouter } from \"react-router-dom\";\nimport {NotificationManager} from 'react-notifications';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\n\n\nfunction LoginForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        error : \"\",\n        successMessage: null,\n        show: false,\n        sucess: false,\n        email_error: ''\n    })\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n      // console.log(\"----\",e)\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        const data={\n            \"email\":state.email,\n            \"password\":state.password,\n        }\n        dispatch(login({user: data}))\n          .then((res)=> {\n            if(res && res.status === 200) {\n               props.history.push('/freelancer');\n            }else{\n               NotificationManager.error(res.message, 'Error');  \n            }\n          })\n    }\n\n    const handleShow = () => {\n        setState(prevState => ({\n            ...prevState,\n            show: true\n        }))\n    }; \n\n    const handleSucessClose = () => {\n        setState(prevState => ({\n            ...prevState,\n            sucess: false\n        }))\n    }; \n\n    const handleClose = () => {\n        setState(prevState => ({\n            ...prevState,\n            show: false\n        }))\n    }; \n\n    const fieldValChange = (e) => {\n      setState(prevState => ({\n            ...prevState,\n            [e.target.name] : e.target.value,\n            error1: null,\n            email_error: ''\n      }))\n      // this.checkEmpty();\n    }\n    const forgotPassword = (e) => {\n        e.preventDefault();    \n        const { email } = state;\n        if (email) {\n          dispatch(resetPassword({user:{'email': email}}))\n          .then((res) => {\n            if(res.data.status === 400) {\n              setState(prevState => ({\n                  ...prevState,\n                  email_error: res.data.message\n              }))\n              NotificationManager.error(res.data.message, 'Error');\n            } else {\n              NotificationManager.success(res.data.message, 'Success');\n              setState(prevState => ({\n                  ...prevState,\n                  show: false, email: '', sucess: true\n              }))\n            }\n          }).catch((e) => {\n            setState(prevState => ({\n                ...prevState,\n                show: false\n            }))\n          })\n        } else {\n          NotificationManager.error('Please enter email.', 'Error');\n          setState(prevState => ({\n              ...prevState,\n              email_error: 'please enter email.'\n          }))\n        }\n    };\n\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\n    // console.log(\"state.email\",loader)\n    \n    return(\n        <section className=\"user-area ptb-100\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-3\">\n                \n                </div>\n              \n                <div className=\"col-lg-6\">\n                  <div className=\"user-form-content log-in-50 pt-4\">\n                    <h3>Log In to Your Account</h3>\n                  \n                    <form className=\"user-form\">\n                      <div className=\"row\">\n                        <div className=\"col-12\">\n                          <div className=\"form-group\">\n                            <label>Email</label>\n                            <input type=\"email\" \n                                   className=\"form-control\" \n                                   id=\"email\" \n                                   placeholder=\"Enter email\" \n                                   value={state.email}\n                                   onChange={handleChange}\n                            />\n                          </div>\n                        </div>\n          \n                        <div className=\"col-12\">\n                          <div className=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" \n                                     className=\"form-control\" \n                                     id=\"password\" \n                                     placeholder=\"Password\"\n                                     value={state.password}\n                                     onChange={handleChange} \n                              />\n                          </div>\n                        </div>\n          \n                        <div className=\"col-12\">\n                          <div className=\"login-action\">\n                            <span className=\"log-rem\">\n                              <input id=\"remember\" type=\"checkbox\" />\n                              <label>Keep me logged in</label>\n                            </span>\n                            \n                            <span className=\"forgot-login\">\n                              <a href=\"#\" onClick={handleShow}>Forgot your password?</a>\n                            </span>\n                          </div>\n                        </div>\n          \n                        <div className=\"col-12\">\n                          <button className=\"default-btn\" type=\"submit\" onClick={handleSubmitClick} disabled={loader}>\n                            Log In\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n\n                <div className=\"col-lg-3\">\n                \n                </div>\n\n              </div>\n              <Modal show={state.sucess} className=\"forgot-password-succes-popup\" centered>\n                <Modal.Body>\n                    {/* <img src={forgot_password_succes} alt=\"success\" className=\"forgot-password-succes-popup-image\"/> */}\n                    <h3 className=\"text-center\">Success</h3>\n                    <p className=\"text-center\">Password reset link has been sent successfully. <br />You can check your inbox.</p>\n\n                  <center> \n                    <button className=\"default-btn\" type=\"submit\" onClick={handleSucessClose}>\n                      Close\n                    </button>\n                  </center> \n\n                </Modal.Body>\n              </Modal>\n\n\n\n                  <Modal show={state.show} onHide={handleClose} className=\"Reset-Your-Password-Popup\" centered >\n                    <Modal.Body>\n                      <h3 className=\"text-center\">Reset Your Password</h3>\n                      <p className=\"text-center\">Please enter the Email address which is registered with us.<br />We will send a new password to that address.</p>\n                      \n                      <Row>\n                        <Col xs={12} md={1}>\n\n                        </Col>\n                        <Col xs={12} md={10}>\n                          { state.email_error ? (\n                          <div className=\"alert alert-danger\" role=\"alert\">\n                            {state.email_error}\n                          </div>\n                          ) : null\n                          }\n    \n                          <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter Your Email Address\" id=\"email\" value={state.email} onChange={fieldValChange} required />\n                          <span>{state.error1}</span>\n\n                        </Col>                                \n                      </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                      <button className=\"default-btn default-btn btn-two\" onClick={handleClose}>Close</button>\n                      <button className=\"default-btn default-btn\" onClick={forgotPassword} disabled={loader}>Send</button>\n                    </Modal.Footer>\n\n                    \n                  </Modal>\n            </div>\n          </section>\n    )\n}\n\nexport default withRouter(LoginForm);","/home/chetan/Public/Project/oaktreecrew/src/containers/Dashboard/Dashboard.js",["194","195","196","197","198","199"],"import React, { useState } from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\nimport Select from \"react-dropdown-select\";\nimport CATEGORY from \"../../constants/category\";\nimport SKILLS from \"../../constants/skills\";\nimport salesforce from \"../../assets/images/categories/salesforce.svg\";\nimport Ruby from \"../../assets/images/categories/ruby.svg\";\nimport ReactJS from \"../../assets/images/categories/react.svg\";\nimport IOS from \"../../assets/images/categories/ios.svg\";\nimport NodeJS from \"../../assets/images/categories/nodejs.svg\";\n\n\nfunction Dashboard(props) {\n    \n    const [state , setState] = useState({\n        skills: \"\",\n        category: \"\"\n    })\n\n    const selectCategory = (value) => {\n        setState(prevState => ({\n            ...prevState,\n            category : value\n        }))\n    }\n    const handleSelect = (name, value) => {\n      // console.log(name,\"----\",value)\n      if(value.length === 0){\n        return false\n      } \n        setState(prevState => ({\n            ...prevState,\n            [name] :  value.map(e => e.value).join(\",\")\n        }))\n    }\n    return(\n        <section className=\"live-jobs-area bg-color ptb-100\">\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                      <div className=\"section-title\">\n                          <span>What are the profiles you are looking for?</span>\n                          <h2>Browse Category</h2>\n                      </div>\n\n                      \n                          <div className=\"row\">\n                              <div className=\"col-lg-1 col-sm-12\">\n                              \n                              </div>\n                              {/*CATEGORY.map((row) => {\n                                return(<div className=\"col-lg-2 col-sm-6\">\n                                          <div className={state.category === category ? \"single-live-job active\" : \"single-live-job\"}>\n                                              <img src={row.image} alt=\"salesforce\" />\n                                              <a href=\"#\">\n                                                  {row.label}\n                                              </a>\n                                          </div>\n                                      </div>)  \n                              })*/}\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('Salesforce')}>\n                                  <div className={state.category === 'Salesforce' ? \"single-live-job active\" : \"single-live-job\"}>\n                                      <img src={salesforce} alt=\"salesforce\" />\n                                      <a href=\"#\">\n                                          Salesforce\n                                      </a>\n                                  </div>\n                              </div>\n                              \n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('ROR')}>\n                                  <div className={state.category === 'ROR' ? \"single-live-job active\" : \"single-live-job\"}>\n                                      <img src={Ruby} alt=\"Ruby\" />\n                                      <a href=\"#\">\n                                          ROR\n                                      </a>\n                                  </div>\n                              </div>\n\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('React')}>\n                                  <div className={state.category === 'React' ? \"single-live-job active\" : \"single-live-job\"}>\n                                      <img src={ReactJS} alt=\"ReactJS\" />\n                                      <a href=\"#\">\n                                          React\n                                      </a>\n                                  </div>\n                              </div>\n\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('IOS')}>\n                                  <div className={state.category === 'IOS' ? \"single-live-job active\" : \"single-live-job\"}>\n                                      <img src={IOS} alt=\"IOS\" />\n                                      <a href=\"#\">\n                                          iOS\n                                      </a>\n                                  </div>\n                              </div>\n\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('NodeJS')}>\n                                  <div className={state.category === 'NodeJS' ? \"single-live-job active\" : \"single-live-job\"}>\n                                      <img src={NodeJS} alt=\"NodeJS\" />\n                                      <a href=\"#\">\n                                          NodeJs\n                                      </a>\n                                  </div>\n                              </div>\n\n                              <div className=\"col-lg-1 col-sm-12\">\n                              \n                              </div>\n                          </div>\n                          \n                          \t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-1 col-sm-12\">\n                              \n                              </div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                              <div className=\"col-lg-10 col-md-12 \">\n                                  <div className=\"form-group\">\n                                      <Select \n                                          name=\"skills\" \n                                          multi\n                                          options={SKILLS}\n                                          onChange={(value) => handleSelect('skills', value)} \n                                          value={state.skills}\n                                      />\n                                  </div>\n                              </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-1 col-sm-12\">\n                              \n                              </div>\n                            </div>\n                            <div className=\"row\">      \n                              <div className=\"col-lg-12 col-md-12 text-center\">\n                                  <Link to={{\n                                      pathname: '/freelancers',\n                                      state: {\n                                        category: state.category,\n                                        skills: state.skills\n                                      }\n                                    }}>\n                                      <button className=\"default-btn\">\n                                          <span>Proceed</span>\n                                      </button>\n                                  </Link>\n                                  <div id=\"msgSubmit\" className=\"h3 text-center hidden\"></div>\n                                  <div className=\"clearfix\"></div>\n                              </div>\n                            </div>    \n                      \n                  </div>\n              </div>\n          </div>\n      </section>\n    )\n}\n\nexport default withRouter(Dashboard);","/home/chetan/Public/Project/oaktreecrew/src/components/Footer/Footer.js",["200","201","202","203","204","205","206","207","208","209","210","211"],"import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n// import { Button, Modal } from 'react-bootstrap';\nimport { subcribtion } from '../../actions/authActions';\nimport {NotificationManager} from 'react-notifications';\nimport logo from \"../../assets/images/logo.png\";\n\n\nclass Footer extends React.Component {\n    constructor(props, context) {\n        super(props);\n        this.state = {\n          show: false,\n          email: '',\n          error: \"\"\n        }\n    }\n    fieldValChange = (e) => {\n        this.setState({email: e.target.value})\n    } \n\n    handleClose = () => {\n        this.setState({show: false})\n    }\n\n    subcribe = () => {\n        if(this.state.email){\n            this.props.subcribtion(this.state.email)\n            .then((res) => {\n              if(res.data.status === 200) {\n                NotificationManager.success(res.data.message, 'Success');  \n                this.setState({show: false})\n                // this.props.history.push('/campaign')\n              } else {\n                NotificationManager.error(res.data.message, 'Error');  \n                this.setState({\n                  error: \"something went wrong.\"\n                })\n              }\n            })\n\n        }else{\n            NotificationManager.error(\"Please enter valid email address\", 'Error');  \n        }\n    }\n    topScroll = () =>{\n        window.scrollTo(0, 0)\n    }\n\n  render() {\n    const { authenticated, location } = this.props;\n    if((!authenticated) && location.pathname !== '/')\n        return null\n    return (\n      <React.Fragment>\n        <footer className=\"footer-area pt-100 pb-70\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-md-6\">\n                        <div className=\"single-footer-widget single-bg\">\n                            <a href=\"#\" className=\"logo\">\n                                <img src={logo} alt=\"Image\" />\n                            </a>\n\n                            <p>OakTreeCrew is a software development firm known for developing business solutions for small to large scale businesses. Headquartered in India, four enthusiastic and young minds have started it in 2016 from Indore. We are serving clients globally</p>\n\n                            <ul className=\"social-icon\">\n                                <li>\n                                    <a href=\"#\">\n                                        <i className=\"bx bxl-facebook\"></i>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <i className=\"bx bxl-instagram\"></i>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <i className=\"bx bxl-linkedin-square\"></i>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <i className=\"bx bxl-twitter\"></i>\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-4 col-md-6\">\n                        <div className=\"single-footer-widget\">\n                            <h3>Contact</h3>\n\n                            <ul className=\"address\">\n                                <li>\n                                    <i className=\"bx bx-phone-call\"></i>\n                                    <span>Phone:</span>\n                                    <a href=\"tel:+1-(514)-7939-357\">+91 0731 499 1873</a>\n                                </li>\n                                <li>\n                                    <i className=\"bx bx-envelope\"></i>\n                                    <span>Email:</span>\n                                    <a href=\"mailto:hello@oaktreecrew.com\">info@oaktreescrew.com</a>\n                                </li>\n                                <li className=\"location\">\n                                    <i className=\"bx bx-location-plus\"></i>\n                                    <span>Address:</span>\n                                    Shekhar central, 8th, floor, 802, Palasia Square, Manorama Ganj, Indore, Madhya Pradesh 452001\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-4 col-md-6\">\n                        <div className=\"single-footer-widget\">\n                            <h3>Helpful Resources</h3>\n\n                            <ul className=\"import-link\">\n                                <li>\n                                    <a href=\"#\">FAQ's</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">Contact Us</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">Site Map</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">Terms of Use</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">Privacy Centre</a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">Blog</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                \n                </div>\n            </div>\n        </footer>\n\n        <div className=\"copy-right-area\">\n            <div className=\"container\">\n                <p>\n                    © 2020 Oak Tree Crew. All Rights Reserved.\n                </p>\n            </div>\n        </div>\n        <div className=\"go-top active\" onClick={() => this.topScroll()}>\n            <i className=\"bx bx-chevrons-up\"></i>\n            <i className=\"bx bx-chevrons-up\"></i>\n        </div>\n      </React.Fragment>  \n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log('state',state)\n  return {\n    isLoading: state.applicationIsLoading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    subcribtion: (email) => dispatch(subcribtion(email))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","/home/chetan/Public/Project/oaktreecrew/src/containers/Client/FreelancerDetail.js",["212","213","214","215","216","217","218"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { withRouter, useParams } from \"react-router-dom\";\nimport { getFreelancer } from '../../actions/hrActions';\nimport _ from 'lodash';\nimport avatar from \"../../assets/images/avatar-img.jpg\";\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\n\nfunction FreelancerDetail(props) {\n    \n    const [state , setState] = useState({\n        detail: ''\n      })\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n      fetchData();\n    }, []);\n\n    const { id } = useParams();\n    // console.log(\"id\",id)\n\n    const fetchData = () => {\n      \n      // Update the document title using the browser API\n      dispatch(getFreelancer(id)).then((res)=> {\n          if(res && res.status === 200) {\n            // console.log(\"res\",res.data)\n            setState(prevState => ({\n                detail: res.data.user\n            }))\n          }\n      })\n    }\n    // console.log(\"detail\",state.detail)_.get(state.detail, 'user_image', [avatar])\n    return(\n      <React.Fragment>\n        <div className=\"page-title-area\">\n          <div className=\"container\">\n            <div className=\"page-title-content\">\n              <h2>Freelancer Details</h2>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"candidates-details-area mt-5\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                <div className=\"candidates-cv\">\n                  <div className=\"row align-items-center\">\n                    <div className=\"col-lg-2\">\n                      <div className=\"hot-jobs-img\">\n                        <img src={state.detail && state.detail.user_image ? state.detail.user_image : avatar} alt=\"Image\" />\n                      </div>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                      <div className=\"candidates-cv-content\">\n                        <h3>{_.get(state.detail, 'first_name', ['']) + ' ' +_.get(state.detail, 'last_name', [''])}</h3>\n                        <span className=\"sub-title\">{_.get(state.detail.additional_information, 'title', [''])}</span>\n                        <ul>\n                          <li><a href=\"mailto:#\">{_.get(state.detail, 'email', [''])}</a></li>\n                        </ul>\n                      </div>\n                    </div>\n\n                    <div className=\"col-lg-4\">\n                      <a href={_.get(state.detail.additional_information, 'user_resume', ['#'])} target=\"_blank\" className=\"default-btn\">Download CV</a>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"candidates-details-content\">\n                  <h3>About Me</h3>\n                    <div className=\"card mb-3\">\n                      <div className=\"card-body\">\n                        <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\n                      </div>\n                    </div>\n                  \n                  <h3>Education</h3>\n                  {\n                    state.detail && state.detail.education_informations.length > 0 ? state.detail.education_informations.map((row,i) => {\n                    return (\n                      <div className=\"card mb-3\">\n                        <div className=\"card-body\">\n                            <ul key={i}>\n                              <li className=\"arts\"><i class=\"bx bxs-graduation\"></i> {row.education_level} in {row.degree_title}</li>\n                              <li className=\"university\"><i class=\"bx bxs-book\"></i> {row.group +' '+row.institute_name} ({row.year_of_passing})</li>\n                              <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.description}</li>\n                            </ul>\n                        </div>\n                      </div>\n                        )\n                    })\n                    : \n                    (<ul></ul>)\n                  }   \n                  <h3>Work Experience</h3>\n                  {state.detail && state.detail.experience_informations.length > 0 ? state.detail.experience_informations.map((row,i) => {\n                    return (\n                          <div className=\"card mb-3\">\n                            <div className=\"card-body\">\n\n                                <ul key={i}>\n                                  <li className=\"arts\"><i class=\"bx bxs-user\"></i> {row.designation}</li>\n                                  <li className=\"university\"><i class=\"bx bxs-building\"></i> {row.company_name} ({row.employment_period_year > 0 && row.employment_period_year +\" year \"} { row.employment_period_month > 0 && row.employment_period_month+' month'}) in {row.company_location}</li>\n                                  <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.description}</li>\n                                </ul>\n                            </div>\n                          </div>\n                        )\n                    })\n                    : \n                    (<ul></ul>)\n                  } \n\n                  <h3>Projects</h3>\n                  {state.detail && state.detail.project_informations.length > 0 ? state.detail.project_informations.map((row,i) => {\n                    return (\n                            <div className=\"card mb-3\">\n                              <div className=\"card-body\">\n                                  <ul key={i}>\n                                    <li className=\"arts\"><i class=\"bx bxs-graduation\"></i> {row.title}</li>\n                                    <li className=\"university\"><i class=\"bx bxs-calendar\"></i> Period: {row.start_date} to {row.end_date} </li>\n                                    <li className=\"university\"><i class=\"bx bxs-tag\"></i> Skills: {row.technologies} </li>\n                                    <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.summary}</li>\n                                  </ul>\n                              </div>\n                            </div>\n                        )\n                    })\n                    : \n                    (<ul></ul>)\n                  } \n\n                  <h3>Personal Skills</h3>\n                  <div className=\"card mb-3\">\n                      <div className=\"card-body\">\n                      <div className=\"all-skill-bar\">\n                        {\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\n                                  <h5 className=\"progress-title-holder\">\n                                    <span className=\"progress-title\">{skill}</span>\n                                    \n                                  </h5>\n                    \n                                  <div className=\"progress-content-outter\">\n                                    <div className=\"progress-content\" ></div>\n                                    <ProgressBar variant=\"success\" now={45} />\n                                  </div>\n                              </div>)\n                            })\n                        }\n                      </div>\n                    </div>\n         \n                  </div> \n                </div>\n              </div>\n\n              <div className=\"col-lg-4\">\n                <div className=\"candidates-details-sidebar\">\n                  <div className=\"candidates-widget\">\n                    <h3>Social Profile</h3>\n\n                    <ul className=\"social-icon\">\n                      <li>\n                        <a href={_.get(state.detail.additional_information, 'github_link', ['#'])} target=\"_blank\">\n                          <i className=\"bx bxl-github\"></i>\n                        </a>\n                      </li>\n                      <li>\n                        <a href={_.get(state.detail.additional_information, 'linkedin_link', ['#'])} target=\"_blank\">\n                          <i className=\"bx bxl-linkedin-square\"></i>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div className=\"candidates-widget\">\n                    <h3>Contact Information</h3>\n                    \n                    <ul className=\"overview\">\n                      \n                      {/* <li>\n                        Email\n                        <a href=\"mailto:#\"><span>: {_.get(state.detail, 'email', [''])}</span></a>\n                      </li> */}\n                      <li>\n                        Phone\n                        <a href={\"tel:+91\"+_.get(state.detail, 'phone', [''])}><span>: {_.get(state.detail, 'phone', [''])}</span></a>\n                      </li>\n                      <li>\n                        Location\n                        <span>: {_.get(state.detail, 'address', [''])}</span>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div className=\"candidates-widget\">\n                    <h3>Job Overview</h3>\n                    \n                    <ul className=\"overview\">\n                      <li>\n                        Categories\n                        <span>: {_.get(state.detail.additional_information, 'category', [''])}</span>\n                      </li>\n                      <li>\n                        Nationality\n                        <span>: {_.get(state.detail, 'nationality', [''])}</span>\n                      </li>\n                      <li>\n                        Job Type\n                        <span>: {_.get(state.detail.additional_information, 'job_nature', [''])}</span>\n                      </li>\n                      <li>\n                        Experience\n                        <span>: {_.get(state.detail, 'total_experience', [''])} year(s)</span>\n                      </li>\n                      <li>\n                        Expected Salary\n                        <span>: {_.get(state.detail.additional_information, 'expected_salary', [''])}</span>\n                      </li>\n                      <li>\n                        Languages:\n                        <span>: {_.get(state.detail, 'languages', [''])} </span>\n                      </li>\n                      <li>\n                        Gender\n                        <span>: {_.get(state.detail, 'gender', [''])}</span>\n                      </li>\n                    </ul>\n                  </div>\n                \n                  <div className=\"candidates-widget\">\n                    <h3>Download Resume</h3>\n                    \n                    <ul className=\"overview download \">\n                      \n                      <li>\n                        <i className=\"flaticon-pdf\"></i>\n                        <a href=\"#\">PDF Formate CV</a>\n                      </li>\n                      <li>\n                        <i className=\"flaticon-pdf\"></i>\n                        <a href=\"#\">DOC Formate CV</a>\n                      </li>\n                    </ul>\n                  </div>\n                \n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n      </React.Fragment>\n    )\n}\n\nexport default withRouter(FreelancerDetail);","/home/chetan/Public/Project/oaktreecrew/src/containers/Dashboard/FreelancerSelect.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import React, { useState, useEffect, setState } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\nimport { withRouter, Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { fetchFreelancerByCategory } from '../../actions/hrActions';\nimport freelancer1 from \"../../assets/images/freelancer/freelancer-1.jpg\";\nimport freelancer2 from \"../../assets/images/freelancer/freelancer-2.jpg\";\nimport freelancer3 from \"../../assets/images/freelancer/freelancer-3.jpg\";\nimport freelancer4 from \"../../assets/images/freelancer/freelancer-4.jpg\";\nimport freelancer5 from \"../../assets/images/freelancer/freelancer-5.jpg\";\nimport freelancer6 from \"../../assets/images/freelancer/freelancer-6.jpg\";\nimport freelancer7 from \"../../assets/images/freelancer/freelancer-7.jpg\";\nimport freelancer8 from \"../../assets/images/freelancer/freelancer-8.jpg\";\n\n\n\nfunction FreelancerSelect(props) {\n  \n  // const [state , setState] = useState({\n  //     users: [],\n  //     skills: \"\",\n  //     category: \"\",\n  //     freelancer_ids: []\n  // })\n\n\n  // console.log(\"props\",props.location)  \n  const dispatch = useDispatch();\n    \n  var settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    autoplay:true,\n    accessibility:true,\n    arrows:true,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: false,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          dots: true,\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          dots: true,\n        }\n      }\n    ]    \n  };\n\n    useEffect(() => {\n      // fetchData();\n    }, []);\n\n    const fetchData = () => {\n      let data = {}\n      if(props.location.state){\n        data = {\n          categories: props.location.state.category,\n          skills: props.location.state.skills\n        } \n      }\n      // Update the document title using the browser API\n      dispatch(fetchFreelancerByCategory(data)).then((res)=> {\n          if(res && res.status === 200) {\n            console.log(\"res\",res.data)\n             setState(prevState => ({\n                ...prevState,\n                users: res.data\n            }))\n          }\n      })\n    }\n\n    const selectFreelancer = (item) => {\n        console.log(\"item\", item  )\n    }\n\n    // const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\n\n    return(\n        <section className=\"freelancer-area pt-100 pb-70\">\n          <div className=\"container\">\n            <div className=\"section-title\">\n              <span>Top Freelancer</span>\n              <h2>Hire Expert Freelancer</h2>\n            </div>\n\n\n            <Slider {...settings}>\n              {/*state.users.map((row, i) => {\n                return (<div className=\"\" key={i}>\n                        <div className=\"single-freelancer\">\n                          <img src={row.user_image ? row.user_image : freelancer1} alt=\"Image\" />\n                          <a href={\"/freelancer-details/\"+row.uuid}><h3>{row.first_name +' '+row.last_name}</h3></a>\n                          <span className=\"profession\">{row.additional_information.category}</span>\n                          <a href=\"#\" className=\"default-btn\" onClick={() => selectFreelancer(row)}>\n                            Select\n                          </a>\n                        </div>\n                      </div>)  \n              })*/}\n              \n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer1} alt=\"Image\" />\n                  <h3>James Hendrix</h3>\n                  <span className=\"profession\">ROR Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              {/*  */}\n\n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer2} alt=\"Image\" />\n                  <h3>Jean Burke</h3>\n                  <span className=\"profession\">Saleforce Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              {/*  */}\n\n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer3} alt=\"Image\" />\n                  <h3>David Guzman</h3>\n                  <span className=\"profession\">React Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              {/*  */}\n\n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer4} alt=\"Image\" />\n                  <h3>Clarence Hart</h3>\n                  <span className=\"profession\">iOS Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              {/*  */}\n\n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer5} alt=\"Image\" />\n                  <h3>Anna Smith</h3>\n                  <span className=\"profession\">iOS Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              {/*  */}\n\n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer6} alt=\"Image\" />\n                  <h3>Kulva Dew</h3>\n                  <span className=\"profession\">iOS Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              {/*  */}\n\n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer7} alt=\"Image\" />\n                  <h3>Teena Smith</h3>\n                  <span className=\"profession\">ReactJs Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              {/*  */}\n\n              <div className=\"\">\n                <div className=\"single-freelancer\">\n                  <img src={freelancer8} alt=\"Image\" />\n                  <h3>Chet Patel</h3>\n                  <span className=\"profession\">Saleforce Developr</span>\n                  <a href=\"#\" className=\"default-btn\">\n                    Select\n                  </a>\n                </div>\n              </div>\n              \n            </Slider>\n\n            <div className=\"row mt-5\">\n              <div className=\"col-lg-12 col-md-12 text-center\">\n                <Link to='/client-signup'>\n                      <button className=\"default-btn\">\n                          <span>Proceed</span>\n                      </button>\n                  </Link> \n\n\n                  {/* <Link to={{\n                            pathname: '/client-signup',\n                            state: {\n                              category: props.location.state.category,\n                              skills: props.location.state.skills,\n                              freelancer_ids: state.freelancer_ids\n                            }\n                          }}>\n                      <button className=\"default-btn\">\n                          <span>Proceed</span>\n                      </button>\n                  </Link> */}\n                  <div id=\"msgSubmit\" className=\"h3 text-center hidden\"></div>\n                  <div className=\"clearfix\"></div>\n              </div>\n            </div>          \n          </div>\n        </section>\n    )\n}\n\nexport default withRouter(FreelancerSelect);","/home/chetan/Public/Project/oaktreecrew/src/actions/hrActions.js",[],"/home/chetan/Public/Project/oaktreecrew/src/containers/HR/AddFreelancer.js",["240","241","242","243","244","245","246","247","248","249","250"],"/home/chetan/Public/Project/oaktreecrew/src/components/Loader/Skelton.js",[],"/home/chetan/Public/Project/oaktreecrew/src/containers/HR/Freelancer.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\nimport { withRouter } from \"react-router-dom\";\nimport {NotificationManager} from 'react-notifications';\nimport _ from 'lodash';\nimport ReactTable from 'react-table-v6'\n\nimport TableListingLoader from \"../../components/Loader/Skelton\"\nimport { fetchFreelancers, deleteFreelancer } from '../../actions/hrActions';\nimport profileImageThumbnail from \"../../assets/images/avatar-img.jpg\"\nimport Tabs from 'react-responsive-tabs';\nimport { Modal,Row,Col } from 'react-bootstrap';\n\n\nfunction Freelancer(props) {\n\n    const [state , setState] = useState({\n        from_data: \"\",\n        to_data:\"\",\n        total_count: \"\",\n        total_pages: \"\",\n        users: [],\n        page_number: 1,\n        per_page: 10,\n        pages  : 0,\n        filtered: [],\n        filterAll: '',\n        page: '',\n        pageSize: ''  \n      })\n\n    const [model, setModel] = useState({\n      modelShow: false,\n      modelData: ''\n    })\n\n    const handleShow = (data) => {\n        setModel(prevState => ({\n            ...prevState,\n            modelShow : true,\n            modelData : data \n        }))\n    }\n\n    const handleClose = () => {\n        setModel(prevState => ({\n            ...prevState,\n            modelShow : false,\n            modelData : ''\n        }))\n    }\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n      // fetchData();\n    }, []);\n\n    const fetchData = (page, pageSize, sorted, filtered) => {\n      console.log(page, pageSize, sorted, filtered)\n      let data = `?page_number=${page+1}&per_page=${pageSize}&role_name=freelancer`\n      setState(prevState => ({\n                ...prevState,\n                page: page,\n                pageSize: pageSize\n              }))\n      // Update the document title using the browser API\n      dispatch(fetchFreelancers(data)).then((res)=> {\n          if(res && res.status === 200) {\n            // console.log(\"res\",res.data)\n             setState(prevState => ({\n                ...prevState,\n                from_data: res.data.from_data,\n                to_data: res.data.to_data,\n                total_count: res.data.total_count,\n                total_pages: res.data.total_pages,\n                users: res.data.users\n            }))\n          }\n      })\n    }\n\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\n    // console.log(\"state.users\",loader)\n\n    const handleDelete = (uuid) => {\n      dispatch(deleteFreelancer(uuid)).then((res)=> {\n          if(res && res.status === 200) {\n            // console.log(\"res\",res)\n            NotificationManager.success(res.message, 'Delete');  \n            fetchData(state.page, state.pageSize, '', '');\n          }\n      }) \n    }\n\n    return(\n            // Start Root Div\n            <div>\n                {/* Start Page Title Area */}\n                <div className=\"page-title-area\">\n                  <div className=\"container\">\n                      <div className=\"page-title-content\">\n                          <div className=\"row\">\n                              <div className=\"col-md-6\">\n                                  <h2>Freelancers</h2>                    \n                              </div>\n                              <div className=\"col-md-6\">\n                                <a href=\"/addfreelancer\" className=\"default-btn float-right\">\n                                        Add New Freelancer\n                                </a>\n                                {/* <a className=\"default-btn filter-button\" href=\"#\" role=\"button\"  data-toggle=\"modal\" data-target=\"#freelancermorefilter\">\n                                        <i className='bx bx-dots-vertical-rounded'></i>\n                                </a> */}\n                              </div>                    \n                          </div>\n                      </div>\n                  </div>\n              </div>\n              {/* End Page Title Area */}\n              {/* Start Freelancers List Area */}\n              <section className=\"mt-5\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"\">\n                                <ul className=\"nav nav-tabs nav-justified freelancers-list-tabs\" id=\"pills-tab\" role=\"tablist\">\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link active\" id=\"pills-all-tab\" data-toggle=\"pill\" href=\"#pills-all\" role=\"tab\" aria-controls=\"pills-all\" aria-selected=\"true\"><span className=\"tabs-counter-value\">{state.total_count}</span> All Freelancers</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" id=\"pills-draft-tab\" data-toggle=\"pill\" href=\"#pills-draft\" role=\"tab\" aria-controls=\"pills-draft\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Draft</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" id=\"pills-scheduling-tab\" data-toggle=\"pill\" href=\"#pills-scheduling\" role=\"tab\" aria-controls=\"pills-scheduling\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Scheduling</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" id=\"pills-Interview-tab\" data-toggle=\"pill\" href=\"#pills-Interview\" role=\"tab\" aria-controls=\"pills-Interview\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Interview</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" id=\"pills-Rejected-tab\" data-toggle=\"pill\" href=\"#pills-Rejected\" role=\"tab\" aria-controls=\"pills-Rejected\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Rejected</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link\" id=\"pills-Job-offer-and-contract-tab\" data-toggle=\"pill\" href=\"#pills-Job-offer-and-contract\" role=\"tab\" aria-controls=\"pills-Job-offer-and-contract\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Job offer & contract</a>\n                                    </li>                                                                                                             \n                                </ul>\n                                <div className=\"tab-content\" id=\"pills-tabContent\">\n                                    <div className=\"tab-pane fade show active\" id=\"pills-all\" role=\"tabpanel\" aria-labelledby=\"pills-all-tab\">\n                                      \n                                        <ReactTable\n                                            data={state.users}\n                                            sortable={true}\n                                            multiSort={true}\n                                            resizable={true}\n                                            loading={loader}\n                                            loadingText= {'Data Loading .......'}\n                                            noDataText=\"No Data Found !!\"\n                                            // filterable\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\n                                            filtered={state.filtered}\n                                            defaultPageSize={10}\n                                            minRows= {state.users}\n                                            className=\"py-3 px-3\"\n                                            Sorted\n                                            pages={state.total_pages}\n                                            showPagination={true}\n                                            showPaginationTop={false}\n                                            showPaginationBottom={true}\n                                            pageSizeOptions={[10, 20, 50]}\n                                            // manual // For server side pagination\n                                            showPageJump={ true}\n                                            collapseOnSortingChange={ true}\n                                            columns={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader      : 'Sr.',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor    : 'id',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName   : 'grid-header',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterable  : false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterMethod: (filter, row) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn row[filter.id].includes(filter.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'first_name',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Title\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'title',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Status',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'status',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Created Date',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'created_at',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Action',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'uuid',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <div className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='bx bx-dots-horizontal-rounded'></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"} onClick={() => {handleShow(row.original)}}>Schedule Interview</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultSorted={[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'first_name',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesc: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                            onFetchData={(state, instance) => {\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-draft\" role=\"tabpanel\" aria-labelledby=\"pills-draft-tab\">\n                                        <ReactTable\n                                            data={[]}\n                                            sortable={true}\n                                            multiSort={true}\n                                            resizable={true}\n                                            loading={loader}\n                                            loadingText= {'Data Loading .......'}\n                                            noDataText=\"No Data Found !!\"\n                                            // filterable\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\n                                            filtered={state.filtered}\n                                            defaultPageSize={10}\n                                            minRows= {state.users}\n                                            className=\"py-3 px-3\"\n                                            Sorted\n                                            pages={state.total_pages}\n                                            showPagination={true}\n                                            showPaginationTop={false}\n                                            showPaginationBottom={true}\n                                            pageSizeOptions={[10, 20, 50]}\n                                            // manual // For server side pagination\n                                            showPageJump={ true}\n                                            collapseOnSortingChange={ true}\n                                            columns={[\n                                                                                            {  \n                                                                                                    Header      : 'Sr.',\n                                                                                                    accessor    : 'id',\n                                                                                                    className   : 'grid-header',\n                                                                                                    filterable  : false,\n                                                                                                    filterMethod: (filter, row) => {\n                                                                                                            return row[filter.id].includes(filter.value);\n                                                                                                    }\n                                                                                                    \n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Name\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'first_name',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Title\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'title',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Status',\n                                                                                                accessor: 'status',\n                                                                                                Cell: row => {\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Created Date',\n                                                                                                accessor: 'created_at',\n                                                                                                Cell: row => {\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Action',\n                                                                                                accessor: 'uuid',\n                                                                                                Cell: row => {\n                                                                                                    return <div className=\"\">\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                }\n                                                                                            }\n                                                                                        ]}\n                                                                                        defaultSorted={[\n                                                                                                {\n                                                                                                        id: 'first_name',\n                                                                                                        desc: false\n                                                                                                } \n                                                                                        ]}                                                                                      \n                                            onFetchData={(state, instance) => {\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\n                                            }}\n                                        />\n\n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-scheduling\" role=\"tabpanel\" aria-labelledby=\"pills-scheduling-tab\">\n                                        <ReactTable\n                                            data={[]}\n                                            sortable={true}\n                                            multiSort={true}\n                                            resizable={true}\n                                            loading={loader}\n                                            loadingText= {'Data Loading .......'}\n                                            noDataText=\"No Data Found !!\"\n                                            // filterable\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\n                                            filtered={state.filtered}\n                                            defaultPageSize={10}\n                                            minRows= {state.users}\n                                            className=\"py-3 px-3\"\n                                            Sorted\n                                            pages={state.total_pages}\n                                            showPagination={true}\n                                            showPaginationTop={false}\n                                            showPaginationBottom={true}\n                                            pageSizeOptions={[10, 20, 50]}\n                                            // manual // For server side pagination\n                                            showPageJump={ true}\n                                            collapseOnSortingChange={ true}\n                                            columns={[\n                                                                                            {  \n                                                                                                    Header      : 'Sr.',\n                                                                                                    accessor    : 'id',\n                                                                                                    className   : 'grid-header',\n                                                                                                    filterable  : false,\n                                                                                                    filterMethod: (filter, row) => {\n                                                                                                            return row[filter.id].includes(filter.value);\n                                                                                                    }\n                                                                                                    \n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Name\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'first_name',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Title\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'title',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Status',\n                                                                                                accessor: 'status',\n                                                                                                Cell: row => {\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Created Date',\n                                                                                                accessor: 'created_at',\n                                                                                                Cell: row => {\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Action',\n                                                                                                accessor: 'uuid',\n                                                                                                Cell: row => {\n                                                                                                    return <div className=\"\">\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                }\n                                                                                            }\n                                                                                        ]}\n                                                                                        defaultSorted={[\n                                                                                                {\n                                                                                                        id: 'first_name',\n                                                                                                        desc: false\n                                                                                                } \n                                                                                        ]}                                                                                      \n                                            onFetchData={(state, instance) => {\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-Interview\" role=\"tabpanel\" aria-labelledby=\"pills-Interview-tab\">\n                                        <ReactTable\n                                            data={[]}\n                                            sortable={true}\n                                            multiSort={true}\n                                            resizable={true}\n                                            loading={loader}\n                                            loadingText= {'Data Loading .......'}\n                                            noDataText=\"No Data Found !!\"\n                                            // filterable\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\n                                            filtered={state.filtered}\n                                            defaultPageSize={10}\n                                            minRows= {state.users}\n                                            className=\"py-3 px-3\"\n                                            Sorted\n                                            pages={state.total_pages}\n                                            showPagination={true}\n                                            showPaginationTop={false}\n                                            showPaginationBottom={true}\n                                            pageSizeOptions={[10, 20, 50]}\n                                            // manual // For server side pagination\n                                            showPageJump={ true}\n                                            collapseOnSortingChange={ true}\n                                            columns={[\n                                                                                            {  \n                                                                                                    Header      : 'Sr.',\n                                                                                                    accessor    : 'id',\n                                                                                                    className   : 'grid-header',\n                                                                                                    filterable  : false,\n                                                                                                    filterMethod: (filter, row) => {\n                                                                                                            return row[filter.id].includes(filter.value);\n                                                                                                    }\n                                                                                                    \n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Name\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'first_name',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Title\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'title',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Status',\n                                                                                                accessor: 'status',\n                                                                                                Cell: row => {\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Created Date',\n                                                                                                accessor: 'created_at',\n                                                                                                Cell: row => {\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Action',\n                                                                                                accessor: 'uuid',\n                                                                                                Cell: row => {\n                                                                                                    return <div className=\"\">\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"} onClick={() => handleShow(row.original)}>Schedule Interview</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                }\n                                                                                            }\n                                                                                        ]}\n                                                                                        defaultSorted={[\n                                                                                                {\n                                                                                                        id: 'first_name',\n                                                                                                        desc: false\n                                                                                                } \n                                                                                        ]}                                                                                      \n                                            onFetchData={(state, instance) => {\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\n                                            }}\n                                        />                                \n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-Rejected\" role=\"tabpanel\" aria-labelledby=\"pills-Rejected-tab\">\n                                        <ReactTable\n                                            data={[]}\n                                            sortable={true}\n                                            multiSort={true}\n                                            resizable={true}\n                                            loading={loader}\n                                            loadingText= {'Data Loading .......'}\n                                            noDataText=\"No Data Found !!\"\n                                            // filterable\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\n                                            filtered={state.filtered}\n                                            defaultPageSize={10}\n                                            minRows= {state.users}\n                                            className=\"py-3 px-3\"\n                                            Sorted\n                                            pages={state.total_pages}\n                                            showPagination={true}\n                                            showPaginationTop={false}\n                                            showPaginationBottom={true}\n                                            pageSizeOptions={[10, 20, 50]}\n                                            // manual // For server side pagination\n                                            showPageJump={ true}\n                                            collapseOnSortingChange={ true}\n                                            columns={[\n                                                                                            {  \n                                                                                                    Header      : 'Sr.',\n                                                                                                    accessor    : 'id',\n                                                                                                    className   : 'grid-header',\n                                                                                                    filterable  : false,\n                                                                                                    filterMethod: (filter, row) => {\n                                                                                                            return row[filter.id].includes(filter.value);\n                                                                                                    }\n                                                                                                    \n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Name\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'first_name',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Title\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'title',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Status',\n                                                                                                accessor: 'status',\n                                                                                                Cell: row => {\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Created Date',\n                                                                                                accessor: 'created_at',\n                                                                                                Cell: row => {\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Action',\n                                                                                                accessor: 'uuid',\n                                                                                                Cell: row => {\n                                                                                                    return <div className=\"\">\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                }\n                                                                                            }\n                                                                                        ]}\n                                                                                        defaultSorted={[\n                                                                                                {\n                                                                                                        id: 'first_name',\n                                                                                                        desc: false\n                                                                                                } \n                                                                                        ]}                                                                                      \n                                            onFetchData={(state, instance) => {\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\n                                            }}\n                                        />                                \n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-Assessment\" role=\"tabpanel\" aria-labelledby=\"pills-Assessment-tab\">\n                                        <ReactTable\n                                            data={[]}\n                                            sortable={true}\n                                            multiSort={true}\n                                            resizable={true}\n                                            loading={loader}\n                                            loadingText= {'Data Loading .......'}\n                                            noDataText=\"No Data Found !!\"\n                                            // filterable\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\n                                            filtered={state.filtered}\n                                            defaultPageSize={10}\n                                            minRows= {state.users}\n                                            className=\"py-3 px-3\"\n                                            Sorted\n                                            pages={state.total_pages}\n                                            showPagination={true}\n                                            showPaginationTop={false}\n                                            showPaginationBottom={true}\n                                            pageSizeOptions={[10, 20, 50]}\n                                            // manual // For server side pagination\n                                            showPageJump={ true}\n                                            collapseOnSortingChange={ true}\n                                            columns={[\n                                                                                            {  \n                                                                                                    Header      : 'Sr.',\n                                                                                                    accessor    : 'id',\n                                                                                                    className   : 'grid-header',\n                                                                                                    filterable  : false,\n                                                                                                    filterMethod: (filter, row) => {\n                                                                                                            return row[filter.id].includes(filter.value);\n                                                                                                    }\n                                                                                                    \n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Name\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'first_name',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Title\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'title',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Status',\n                                                                                                accessor: 'status',\n                                                                                                Cell: row => {\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Created Date',\n                                                                                                accessor: 'created_at',\n                                                                                                Cell: row => {\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Action',\n                                                                                                accessor: 'uuid',\n                                                                                                Cell: row => {\n                                                                                                    return <div className=\"\">\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                }\n                                                                                            }\n                                                                                        ]}\n                                                                                        defaultSorted={[\n                                                                                                {\n                                                                                                        id: 'first_name',\n                                                                                                        desc: false\n                                                                                                } \n                                                                                        ]}                                                                                      \n                                            onFetchData={(state, instance) => {\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\n                                            }}\n                                        />                                \n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-References\" role=\"tabpanel\" aria-labelledby=\"pills-References-tab\">\n                                        <div className=\"table-responsive\">\n                                            <table className=\"freelancers-list-table table table-striped\">\n                                                <thead>\n                                                <tr>\n                                                    <th scope=\"col\">\n                                                        <div className=\"checkboxs\">\n                                                            <input type=\"checkbox\" id=\"chb2\" />\n                                                        </div>\n                                                    </th>\n                                                    <th scope=\"col\">APPLICATION # <i className='bx bx-sort'></i></th>\n                                                    <th scope=\"col\">APPLICANT <i className='bx bx-sort'></i></th>\n                                                    <th scope=\"col\">STATUS <i className='bx bx-sort'></i></th>\n                                                    \n                                                    <th scope=\"col\">Date <i className='bx bx-sort'></i></th>\n                                                    <th scope=\"col\"></th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                <tr>\n                                                    <td colSpan=\"7\">\n                                                        <div className=\"text-center\"><h6>No Data Found</h6></div>\n                                                    </td>\n                                                </tr>                                                                                                                  \n                                                </tbody>\n                                            </table>\n                                        </div>                                \n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-Decision\" role=\"tabpanel\" aria-labelledby=\"pills-Decision-tab\">\n                                        <div className=\"table-responsive\">\n                                            <table className=\"freelancers-list-table table table-striped\">\n                                                <thead>\n                                                <tr>\n                                                    <th scope=\"col\">\n                                                        <div className=\"checkboxs\">\n                                                            <input type=\"checkbox\" id=\"chb2\" />\n                                                        </div>\n                                                    </th>\n                                                    <th scope=\"col\">APPLICATION # <i className='bx bx-sort'></i></th>\n                                                    <th scope=\"col\">APPLICANT <i className='bx bx-sort'></i></th>\n                                                    <th scope=\"col\">STATUS <i className='bx bx-sort'></i></th>\n                                                    \n                                                    <th scope=\"col\">Date <i className='bx bx-sort'></i></th>\n                                                    <th scope=\"col\"></th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                <tr>\n                                                    <td colSpan=\"7\">\n                                                        <div className=\"text-center\"><h6>No Data Found</h6></div>\n                                                    </td>\n                                                </tr>                                                                                                                  \n                                                </tbody>\n                                            </table>\n                                        </div>                                \n                                    </div>\n                                    <div className=\"tab-pane fade\" id=\"pills-Job-offer-and-contract\" role=\"tabpanel\" aria-labelledby=\"pills-Job-offer-and-contract-tab\">\n                                        <ReactTable\n                                            data={[]}\n                                            sortable={true}\n                                            multiSort={true}\n                                            resizable={true}\n                                            loading={loader}\n                                            loadingText= {'Data Loading .......'}\n                                            noDataText=\"No Data Found !!\"\n                                            // filterable\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\n                                            filtered={state.filtered}\n                                            defaultPageSize={10}\n                                            minRows= {state.users}\n                                            className=\"py-3 px-3\"\n                                            Sorted\n                                            pages={state.total_pages}\n                                            showPagination={true}\n                                            showPaginationTop={false}\n                                            showPaginationBottom={true}\n                                            pageSizeOptions={[10, 20, 50]}\n                                            // manual // For server side pagination\n                                            showPageJump={ true}\n                                            collapseOnSortingChange={ true}\n                                            columns={[\n                                                                                            {  \n                                                                                                    Header      : 'Sr.',\n                                                                                                    accessor    : 'id',\n                                                                                                    className   : 'grid-header',\n                                                                                                    filterable  : false,\n                                                                                                    filterMethod: (filter, row) => {\n                                                                                                            return row[filter.id].includes(filter.value);\n                                                                                                    }\n                                                                                                    \n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Name\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'first_name',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: () => (\n                                                                                                    <span>\n                                                                                                        <i className=\"fa-tasks\" /> Title\n                                                                                                    </span>\n                                                                                                ),\n                                                                                                accessor: 'title',\n                                                                                                Cell: row => {\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Status',\n                                                                                                accessor: 'status',\n                                                                                                Cell: row => {\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Created Date',\n                                                                                                accessor: 'created_at',\n                                                                                                Cell: row => {\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                Header: 'Action',\n                                                                                                accessor: 'uuid',\n                                                                                                Cell: row => {\n                                                                                                    return <div className=\"\">\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\n                                                                                                                        </div>\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\n                                                                                                                        </div>\n                                                                                                                    </div>\n                                                                                                }\n                                                                                            }\n                                                                                        ]}\n                                                                                        defaultSorted={[\n                                                                                                {\n                                                                                                        id: 'first_name',\n                                                                                                        desc: false\n                                                                                                } \n                                                                                        ]}                                                                                      \n                                            onFetchData={(state, instance) => {\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\n                                            }}\n                                        />                                \n                                    </div>                                                                                                                                            \n                                </div> \n                            </div>\n\n                        </div>\n                    </div>\n                </div>    \n\n                <Modal show={model.modelShow} onHide={() => handleClose()} className=\"\" centered >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Schedule Interview</Modal.Title>\n                    </Modal.Header>\t\t\t\n                    <Modal.Body>\n                        <form className=\"\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-lg-6 col-md-6\">\n                                <h6>Interview For</h6>\n                                <div className=\"form-group\">\n                                    <select>\n                                    <option value=\"1\">Microsoft</option>\n                                    <option value=\"2\">Symantec</option>\n                                    <option value=\"3\">SAP</option>\n                                    <option value=\"4\">IBM</option>\n                                    <option value=\"5\">SEO</option>\n                                    </select>\n                                </div>                            \n                                </div>\n                                <div className=\"col-lg-6 col-md-6\">\n                                <h6>Category</h6>\n                                <div className=\"form-group\">\n                                    <select>\n                                        <option value=\"1\">UX/UI Designer</option>\n                                        <option value=\"2\">Web Developer</option>\n                                        <option value=\"3\">Web Designer</option>\n                                        <option value=\"4\">Software Developer</option>\n                                        <option value=\"5\">SEO</option>\n                                    </select>\n                                </div>\n                                </div>\n                            </div>\n                            <div className=\"row mb-2\">\n                                <div className=\"col-lg-6 col-md-6\">\n                                    <h6>Interviewer</h6>\n                                    <div className=\"form-group\">\n                                        <select className=\"height\">\n                                            <option value=\"1\">Poonam Sharma</option>\n                                            <option value=\"2\">Shaifali Jariwala</option>\n                                            <option value=\"2\">Alka Shakhala</option>\n                                            <option value=\"2\">Puja Shrivastava</option>\n                                            <option value=\"2\">Neelam Dabar</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-6 col-md-6\">\n                                    <h6>Interview day</h6>\n                                    <form className=\"resume-info\">\n                                    <div className=\"form-group\">\n                                        <div className=\"input-group date\" id=\"\">\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"12/11/2020\" />\n                                        </div>\t\n                                    </div>\n                                    </form>\n                                </div>\n                            </div>\n                            <div className=\"row mb-2\">\n                                <div className=\"col-lg-6 col-md-6\">\n                                    <h6>From hours</h6>\n                                    <form className=\"resume-info\">\n                                    <div className=\"form-group\">\n                                        <div className=\"input-group date\" id=\"\">\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"12:30\" />\n                                        </div>\t\n                                    </div>\n                                    </form>\n                                </div>\n                                <div className=\"col-lg-6 col-md-6\">\n                                    <h6>To hours</h6>\n                                    <form className=\"resume-info\">\n                                    <div className=\"form-group\">\n                                        <div className=\"input-group date\" id=\"\">\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"14:30\" />\n                                        </div>\t\n                                    </div>\n                                    </form>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-6\">\n                                <h6>Email</h6>\n                                <form className=\"resume-info\">\n                                <div className=\"form-group\">\n                                    <div className=\"input-group date\" id=\"\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Email Id\" disabled />\n                                    </div>\t\n                                </div>\n                                </form>                          \n                            </div>\n                            <div className=\"col-lg-6 col-md-6\">\n                                <h6>Phone</h6>\n                                <form className=\"resume-info\">\n                                <div className=\"form-group\">\n                                    <div className=\"input-group date\" id=\"\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Contact Number\" disabled />\n                                    </div>\t\n                                </div>\n                                </form>                          \n                            </div>                          \n                            \n                            </div>  \n\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                    <h6>Note</h6>                          \n                                    <div className=\"form-group\">\n                                    <textarea name=\"message\" className=\"form-control\" rows=\"4\"></textarea>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <button className=\"default-btn default-btn btn-two\" onClick={() => handleClose()}>Close</button>\n                    <button className=\"default-btn default-btn\">Save</button>\n                    </Modal.Footer>\n\n                </Modal>\n\n\n\n\n\n\n\n\n\n              </section>\n              {/* End Freelancers List Area */}\n            </div>\n            // End Root Div\n    )\n}\n\nexport default withRouter(Freelancer);","/home/chetan/Public/Project/oaktreecrew/src/containers/Password/Confirm.js",[],"/home/chetan/Public/Project/oaktreecrew/src/constants/languages.js",[],"/home/chetan/Public/Project/oaktreecrew/src/constants/category.js",[],"/home/chetan/Public/Project/oaktreecrew/src/constants/skills.js",[],"/home/chetan/Public/Project/oaktreecrew/src/containers/HR/EditFreelancer.js",["276","277","278","279","280","281","282","283"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { withRouter, useParams } from \"react-router-dom\";\nimport {NotificationManager} from 'react-notifications';\nimport { getFreelancer, updateFreelancer, removeFromFreelancer } from '../../actions/hrActions';\nimport _ from 'lodash';\nimport avatar from \"../../assets/images/avatar-img.jpg\";\nimport EditUserFreelancer from \"../EditForm/EditUserFreelancer\"\nimport EditAboutFreelancer from \"../EditForm/EditAboutFreelancer\"\nimport EditContactFreelancer from \"../EditForm/EditContactFreelancer\"\nimport EditSocialFreelancer from \"../EditForm/EditSocialFreelancer\"\n\n\nimport EditEducationFreelancer from \"../EditForm/EditEducationFreelancer\"\nimport EditExperienceFreelancer from \"../EditForm/EditExperienceFreelancer\"\nimport EditProjectFreelancer from \"../EditForm/EditProjectFreelancer\"\nimport EditOverviewFreelancer from \"../EditForm/EditOverviewFreelancer\"\nimport EditSkillFreelancer from \"../EditForm/EditSkillFreelancer\"\n\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\n\n\nfunction EditFreelancer(props) {\n    \n    const [model, setModel] = useState({\n      userShow: false,\n      aboutShow: false,\n      contactShow: false,\n      socialShow: false,\n      overviewShow: false,\n      educationShow: false,\n      experienceShow: false,\n      projectShow: false,\n      skillShow: false,\n    })\n\n    const handleShow = (name) => {\n        setModel(prevState => ({\n            ...prevState,\n            [name] : true\n        }))\n    }\n\n    const handleClose = (name) => {\n        setModel(prevState => ({\n            ...prevState,\n            [name] : false\n        }))\n    }\n\n    const [state , setState] = useState({\n        detail: '',\n        avatar: \"\",\n        email:\"\",\n        first_name: \"\",\n        last_name: \"\",\n        phone: \"\",\n        dob: \"\",\n        nationality: \"\",\n        gender: \"\",\n        martial_status: \"\",\n        address: \"\",\n        languages: \"\",\n        total_experience: \"\",\n        role_ids:[2],\n        skip_password_validation: true,\n        country: '',\n        state: '',\n        city: '',\n        pincode: '',\n        additional_information_attributes: {\n            title: \"\",\n            about_me:\"\", \n            presented_salary:\"\",\n            expected_salary:\"\", \n            category:\"\",\n            skills: '',\n            job_nature:\"\", \n            job_level: \"\",\n            attachment: \"\",\n            github_link: \"\",\n            linkedin_link: \"\",\n        },\n        education_informations_attributes:[],\n        experience_informations_attributes: [],\n        project_informations_attributes:[],\n        stateArg: [],\n        cityArg: []\n    })\n\n    const [education, setEducation] = useState(\n        {\n            education_level: \"\", \n            degree_title: \"\", \n            group: \"\", \n            institute_name: \"\", \n            result: \"\", \n            marks: \"\",\n            year_of_passing: \"\", \n            duration: \"\",\n            description: \"\",\n            new: true\n        }\n    )\n\n    const [experience, setExperience] = useState(\n        {\n            company_name:\"\", \n            designation: \"\", \n            company_location: \"\",\n            employment_period: \"\",\n            description: \"\",\n            new: true\n        }\n    )\n\n    const [project, setProject] = useState(\n        {\n            title: \"\", \n            start_date: \"2021-01-01\", \n            end_date: \"2021-01-01\", \n            technologies: \"\", \n            summary: \"\",\n            project_link: \"\",\n            new: true\n        }\n    )\n\n    const dispatch = useDispatch();\n    \n    const { id } = useParams();\n    // console.log(\"id\",id)\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        if(id){\n          // Update the document title using the browser API\n          dispatch(getFreelancer(id)).then((res)=> {\n              if(res && res.status === 200) {\n                // console.log(\"res\",res.data)\n                let data = res.data.user    \n                setState(prevState => ({\n                    detail: res.data.user,\n                    avatar: \"\",\n                    email: data.email,\n                    first_name: data.first_name,\n                    last_name: data.last_name,\n                    phone: data.phone,\n                    dob: data.dob,\n                    nationality: data.nationality,\n                    gender: data.gender,\n                    martial_status: data.martial_status,\n                    address: data.address,\n                    languages: data.languages,\n                    total_experience: data.total_experience,\n                    country: data.country,\n                    state: data.state,\n                    city: data.city,\n                    pincode: data.pincode,\n                    additional_information_attributes: {\n                        title: data.additional_information.title,\n                        about_me: data.additional_information.about_me, \n                        presented_salary: data.additional_information.presented_salary,\n                        expected_salary: data.additional_information.expected_salary, \n                        category: data.additional_information.category,\n                        skills: data.additional_information.skills,\n                        job_nature: data.additional_information.job_nature, \n                        job_level: data.additional_information.job_level,\n                        attachment: data.additional_information.attachment,\n                        github_link: data.additional_information.github_link,\n                        linkedin_link: data.additional_information.linkedin_link,\n                    },\n                    experience_informations_attributes: data.experience_informations,\n                    education_informations_attributes: data.education_informations,\n                    project_informations_attributes: data.project_informations\n                }))\n\n                // setEducation(data.education_informations)\n                // setExperience(data.experience_informations)\n                // setProject(data.project_informations)\n              }\n          })\n        }\n    }\n\n    const handleUserUpdate = () => {\n        let data = { \n                    email: state.email,\n                    first_name: state.first_name,\n                    last_name: state.last_name,\n                    // skip_password_validation: true\n                }\n        var form_data = new FormData();\n        for ( var key in data ) {\n            form_data.append(`user[${key}]`, data[key])          \n        }\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\n        form_data.append(\"user[additional_information_attributes[title]]\",state.additional_information_attributes.title)\n\n        updateApi(form_data, id, 'userShow');\n    }\n    const handleAboutUpdate = () => {\n\n        var form_data = new FormData();\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\n        form_data.append(\"user[additional_information_attributes[about_me]]\",state.additional_information_attributes.about_me)\n\n        updateApi(form_data, id, 'aboutShow');\n    }\n    const handleSocialUpdate = () => {\n\n        var form_data = new FormData();\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\n        form_data.append(\"user[additional_information_attributes[github_link]]\",state.additional_information_attributes.github_link)\n        form_data.append(\"user[additional_information_attributes[linkedin_link]]\",state.additional_information_attributes.linkedin_link)\n\n        updateApi(form_data, id, 'socialShow');\n    }\n    const handleContactUpdate = () => {\n        let data = { \n                    phone: state.phone,\n                    address: state.address,\n                }\n        var form_data = new FormData();\n        for ( var key in data ) {\n            form_data.append(`user[${key}]`, data[key])          \n        }\n        updateApi(form_data, id, 'contactShow');\n        \n    }\n    const handleOverViewUpdate = () => {\n        let data = { \n                    nationality: state.nationality,\n                    gender: state.gender,\n                    languages: state.languages,\n                    total_experience: state.total_experience,\n                }\n        var form_data = new FormData();\n        for ( var key in data ) {\n            form_data.append(`user[${key}]`, data[key])          \n        }\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\n        form_data.append(\"user[additional_information_attributes[expected_salary]]\",state.additional_information_attributes.expected_salary)\n        form_data.append(\"user[additional_information_attributes[category]]\",state.additional_information_attributes.category)\n        // form_data.append(\"user[additional_information_attributes[skills]]\",state.additional_information_attributes.skills)\n        form_data.append(\"user[additional_information_attributes[job_nature]]\",state.additional_information_attributes.job_nature)\n        // form_data.append(\"user[additional_information_attributes[job_level]]\",state.additional_information_attributes.job_level)\n        \n\n        updateApi(form_data, id, 'overviewShow');\n        \n    }\n    const handleSkillUpdate = () => {\n        var form_data = new FormData();        \n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\n        form_data.append(\"user[additional_information_attributes[skills]]\",state.additional_information_attributes.skills)\n        \n\n        updateApi(form_data, id, 'skillShow');\n        \n    }\n    \n    const updateApi = (form_data, id, modelName) => {\n        dispatch(updateFreelancer(form_data, id)).then((res)=> {\n            // console.log(\"res\",res)\n            if(res && res.data.status === 200) {\n               fetchData(); \n               NotificationManager.success(\"Successfully update\", 'Success');\n               handleClose(modelName);\n            }else{\n               NotificationManager.error(res.data.messages, 'Error');  \n            }\n        })\n    }\n    const handleChange = (e) => {\n      // console.log(\"----\",e.target)\n        const {name , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [name] : value\n        }))    \n    }\n\n    const handleAdditional = (e) => {\n      // console.log(\"----\",e.target)\n        const {name , value} = e.target   \n        setState({...state,  \n            additional_information_attributes: {\n                ...state.additional_information_attributes,\n                [name] : value\n            }\n        })\n    }\n\n    const handleSelectLanguage = (name, value) => {\n      console.log(name,\"----\",value) \n        if(value.length === 0){\n            return false\n        }\n        setState(prevState => ({\n            ...prevState,\n            // [name] : value.map(e => e.value).join(\",\")\n        }))\n    }\n\n    const handleSelect = (name, value) => {\n      // console.log(name,\"----\",value)\n      if(value.length === 0){\n        return false\n      } \n        setState(prevState => ({\n            ...prevState,\n            [name] : value.value\n        }))\n    }    \n\n    const handleSelectAdditional = (name, value) => {\n      // console.log(name,\"----\",value) \n        if(value.length === 0){\n            return false\n        }\n      if(name === 'skills'){\n        setState({...state,  \n            additional_information_attributes: {\n                ...state.additional_information_attributes,\n                [name] : value.map(e => e.value).join(\",\")\n            }\n        })\n      }else{\n\n        setState({...state,  \n            additional_information_attributes: {\n                ...state.additional_information_attributes,\n                [name] : value.value\n            }\n        })\n\n      }\n    }\n\n    const saveEducation = (add, row) => {\n        handleShow('educationShow')\n        if(!add){\n            setEducation(row)\n        }else{\n            setEducation({\n                education_level: \"\", \n                degree_title: \"\", \n                group: \"\", \n                institute_name: \"\", \n                result: \"\", \n                marks: \"\",\n                year_of_passing: \"\", \n                duration: \"\",\n                description: \"\",\n                new: true\n            })\n        }\n    }\n\n    const handleEducation = (e) => {\n        const {name , value} = e.target   \n        setEducation(prevState => ({\n            ...prevState,\n            [name] : value\n        })) \n    }\n    const handleSelectEducation = (name, value) => {\n      // console.log(name,\"----\",value) \n        setEducation(prevState => ({\n            ...prevState,\n            [name] : value.value\n        })) \n    }\n    const handleEducationSave = (add) => {\n\n        var form_data = new FormData();\n        form_data.append(`user[education_informations_attributes[0][education_level]]`, education.education_level)\n        form_data.append(`user[education_informations_attributes[0][degree_title]]`, education.degree_title)\n        form_data.append(`user[education_informations_attributes[0][group]]`, education.group)\n        form_data.append(`user[education_informations_attributes[0][institute_name]]`, education.institute_name)\n        form_data.append(`user[education_informations_attributes[0][result]]`, education.result)\n        form_data.append(`user[education_informations_attributes[0][marks]]`, education.marks)\n        form_data.append(`user[education_informations_attributes[0][year_of_passing]]`, education.year_of_passing)\n        form_data.append(`user[education_informations_attributes[0][duration]]`, education.duration)\n        form_data.append(`user[education_informations_attributes[0][description]]`, education.description)\n\n        \n        if(add){\n            updateApi(form_data, id, 'educationShow');\n            // console.log(\"handleProjectSaveNew\",add)\n        }else{\n            form_data.append(`user[education_informations_attributes[0][id]]`, education.id)\n            updateApi(form_data, id, 'educationShow');\n            // console.log(\"handleProjectSaveold\")\n        }\n    }\n\n    const saveExperience = (add, row) => {\n        handleShow('experienceShow')\n        if(!add){\n            setExperience(row)\n        }else{\n            setExperience({\n                company_name:\"\", \n                designation: \"\", \n                company_location: \"\",\n                employment_period: \"\",\n                description: \"\",\n                new: true\n            })\n        }\n    }\n\n    const handleExperience = (e) => {\n        const {name , value} = e.target   \n        setExperience(prevState => ({\n            ...prevState,\n            [name] : value\n        })) \n    }\n    const handleSelectExperience = (name, value) => {\n      // console.log(name,\"----\",value)\n        // const {name , value} = e.target   \n        setExperience(prevState => ({\n            ...prevState,\n            [name] : value.value\n        }))  \n    }\n    const handleExperienceSave = (add) => {\n\n        var form_data = new FormData();\n        form_data.append(`user[experience_informations_attributes[0][company_name]]`, experience.company_name)\n        form_data.append(`user[experience_informations_attributes[0][designation]]`, experience.designation)\n        form_data.append(`user[experience_informations_attributes[0][company_location]]`, experience.company_location)\n        form_data.append(`user[experience_informations_attributes[0][employment_period_year]]`, experience.employment_period_year)\n        form_data.append(`user[experience_informations_attributes[0][employment_period_month]]`, experience.employment_period_month)\n        form_data.append(`user[experience_informations_attributes[0][description]]`, experience.description)\n        \n        if(add){\n            updateApi(form_data, id, 'experienceShow');\n            // console.log(\"handleProjectSaveNew\",add)\n        }else{\n            form_data.append(`user[experience_informations_attributes[0][id]]`, experience.id)\n            updateApi(form_data, id, 'experienceShow');\n            // console.log(\"handleProjectSaveold\")\n        }\n    }\n\n    const saveProject = (add, row) => {\n        handleShow('projectShow')\n        if(!add){\n            setProject(row)\n        }else{\n            setProject({\n                title: \"\", \n                start_date: \"2021-01-01\", \n                end_date: \"2021-01-01\", \n                technologies: \"\", \n                summary: \"\",\n                project_link: \"\",\n                new: true\n            })\n        }\n    }\n\n    const handleProject = (e) => {\n        const {name , value} = e.target   \n        setProject(prevState => ({\n            ...prevState,\n            [name] : value\n        })) \n    }\n    const handleSelectProject = (name, value) => {\n        setProject(prevState => ({\n            ...prevState,\n            [name] : value.value\n        }))\n    }\n\n    const handleProjectDateChange = (name, date) => {\n        setProject(prevState => ({\n            ...prevState,\n            [name] : date\n        }))\n    }\n    const handleProjectSave = (add) => {\n\n        var form_data = new FormData();\n        form_data.append(`user[project_informations_attributes[0][title]]`, project.title)\n        form_data.append(`user[project_informations_attributes[0][project_link]]`, project.project_link)\n        form_data.append(`user[project_informations_attributes[0][summary]]`, project.summary)\n        form_data.append(`user[project_informations_attributes[0][start_date]]`, project.start_date)\n        form_data.append(`user[project_informations_attributes[0][end_date]]`, project.end_date)\n        form_data.append(`user[project_informations_attributes[0][technologies]]`, project.technologies)\n        if(add){\n            updateApi(form_data, id, 'projectShow');\n            // console.log(\"handleProjectSaveNew\",add)\n        }else{\n            form_data.append(`user[project_informations_attributes[0][id]]`, project.id)\n            updateApi(form_data, id, 'projectShow');\n            // console.log(\"handleProjectSaveold\")\n        }\n    }\n\n    const removeEducation = (uuid) => {\n      let url = `/api/v1/users/${id}/education_informations/${uuid}`\n      dispatch(removeFromFreelancer(url)).then((res)=> {\n          if(res && res.status === 200) {\n            // console.log(\"res\",res)\n            fetchData();\n            NotificationManager.success(res.message, 'Delete');  \n            // fetchData(state.page, state.pageSize, '', '');\n          }\n      })\n    }\n\n    const removeExperience = (uuid) => {\n      let url = `/api/v1/users/${id}/experience_informations/${uuid}`\n      dispatch(removeFromFreelancer(url)).then((res)=> {\n          if(res && res.status === 200) {\n            // console.log(\"res\",res)\n            fetchData();\n            NotificationManager.success(res.message, 'Delete');  \n            // fetchData(state.page, state.pageSize, '', '');\n          }\n      })\n    }\n\n    const removeProject = (uuid) => {\n      let url = `/api/v1/users/${id}/project_informations/${uuid}`\n      dispatch(removeFromFreelancer(url)).then((res)=> {\n          if(res && res.status === 200) {\n            // console.log(\"res\",res)\n            fetchData();\n            NotificationManager.success(res.message, 'Delete');  \n            // fetchData(state.page, state.pageSize, '', '');\n          }\n      })\n    }\n\n    const onSelectSkill = (selectedList, selectedItem) => {\n        // console.log(selectedList, selectedItem)\n        setState({...state,  \n            additional_information_attributes: {\n                ...state.additional_information_attributes,\n                skills : selectedList.map(e => e.value).join(\",\")\n            }\n        })\n    }\n    const onRemoveSkill = (selectedList, removedItem) => {\n        // console.log(selectedList, removedItem)\n        setState({...state,  \n            additional_information_attributes: {\n                ...state.additional_information_attributes,\n                skills : selectedList.map(e => e.value).join(\",\")\n            }\n        })\n    }\n    const onSelectLanguage = (selectedList, selectedItem) => {\n        // console.log(selectedList, selectedItem)\n        setState(prevState => ({\n            ...prevState,\n            languages : selectedList.map(e => e.value).join(\",\")\n        }))\n    }\n    const onRemoveLanguage = (selectedList, removedItem) => {\n        // console.log(selectedList, removedItem)\n        setState(prevState => ({\n            ...prevState,\n            languages : selectedList.map(e => e.value).join(\",\")\n        }))\n    }\n\n    const onSelectProject = (selectedList, selectedItem) => {\n        // console.log(selectedList, selectedItem)\n        setProject(prevState => ({\n            ...prevState,\n            technologies : selectedList.map(e => e.value).join(\",\")\n        }))\n    }\n    const onRemoveProject = (selectedList, removedItem) => {\n        // console.log(selectedList, removedItem)\n        setProject(prevState => ({\n            ...prevState,\n            technologies : selectedList.map(e => e.value).join(\",\")\n        }))\n    }\n\n    // console.log(\"detail\",state.additional_information_attributes.skills)\n    return(\n      <React.Fragment>\n        <div className=\"page-title-area\">\n          <div className=\"container\">\n            <div className=\"page-title-content\">\n              <h2>Edit Freelancer Details</h2>\n            </div>\n          </div>\n        </div>\n\n        <EditUserFreelancer \n            show = {model.userShow}\n            state = {state}\n            handleClose = {handleClose}\n            handleChange = {handleChange}\n            handleAdditional = {handleAdditional}\n            handleUserUpdate = {handleUserUpdate}\n        />\n\n        <EditAboutFreelancer \n            show = {model.aboutShow}\n            state = {state}\n            handleClose = {handleClose}\n            handleAdditional = {handleAdditional}\n            handleAboutUpdate = {handleAboutUpdate}\n        />\n\n        <EditContactFreelancer \n            show = {model.contactShow}\n            state = {state}\n            handleClose = {handleClose}\n            handleChange = {handleChange}\n            handleContactUpdate = {handleContactUpdate}\n        />\n\n        <EditSocialFreelancer \n            show = {model.socialShow}\n            state = {state}\n            handleClose = {handleClose}\n            handleAdditional = {handleAdditional}\n            handleSocialUpdate = {handleSocialUpdate}\n        />\n\n        <EditOverviewFreelancer \n            show = {model.overviewShow}\n            state = {state}\n            handleClose = {handleClose}\n            handleChange = {handleChange}\n            handleSelect = {handleSelect}\n            handleAdditional = {handleAdditional}\n            handleSelectAdditional = {handleSelectAdditional}\n            onSelectLanguage = {onSelectLanguage}\n            onRemoveLanguage = {onRemoveLanguage}\n            handleOverViewUpdate = {handleOverViewUpdate}\n        />\n\n        <EditEducationFreelancer \n            show = {model.educationShow}\n            state = {education}\n            handleClose = {handleClose}\n            handleEducation = {handleEducation}\n            handleSelectEducation = {handleSelectEducation}\n            handleEducationSave = {handleEducationSave}\n        />\n\n        <EditExperienceFreelancer \n            show = {model.experienceShow}\n            state = {experience}\n            handleClose = {handleClose}\n            handleExperience = {handleExperience}\n            handleSelectExperience = {handleSelectExperience}\n            handleExperienceSave = {handleExperienceSave}\n        />\n\n        <EditProjectFreelancer \n            show = {model.projectShow}\n            state = {project}\n            handleClose = {handleClose}\n            handleProject = {handleProject}\n            handleSelectProject = {handleSelectProject}\n            handleProjectDateChange = {handleProjectDateChange}\n            onSelectProject = {onSelectProject}\n            onRemoveProject = {onRemoveProject}\n            handleProjectSave = {handleProjectSave}\n        />\n\n        <EditSkillFreelancer \n            show = {model.skillShow}\n            state = {state}\n            handleClose = {handleClose}\n            onSelectSkill = {onSelectSkill}\n            onRemoveSkill = {onRemoveSkill}\n            handleSkillUpdate = {handleSkillUpdate}\n        />\n        <section className=\"candidates-details-area mt-5\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8\">\n                  <div className=\"candidates-details-sidebar\">\n                    <div className=\"candidates-widget\">\n                        <div className=\"edit-profile-image-and-title\">\n                          {/* <div className=\"card\"> */}\n                            {/* <div class=\"card-header\"> */}\n                            <h3>&nbsp;<i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('userShow')}></i></h3>\n                              \n                            {/* </div>   */}\n                            <div className=\"overview\">\n                              <div className=\"row align-items-center\">\n                                <div className=\"col-lg-2\">\n                                  <div className=\"hot-jobs-img\">\n                                    <img src={state.user_image ? state.user_image : avatar} alt=\"Image\" />\n                                  </div>\n                                </div>\n\n                                <div className=\"col-lg-6\">\n                                  <div className=\"candidates-cv-content\">\n                                    <h4>{_.get(state.detail, 'first_name', [''])+ ' '+ _.get(state.detail, 'last_name', [''])}</h4>\n                                    <span className=\"sub-title\">{_.get(state.detail.additional_information, 'title', [''])}</span>\n                                    <ul>\n                                      <li><a href=\"mailto:#\">{_.get(state.detail, 'email', [''])}</a></li>\n                                    </ul>\n                                  </div>\n                                </div>\n\n                                <div className=\"col-lg-4\">\n                                  <a href={_.get(state.detail.additional_information, 'user_resume', ['#'])} target=\"_blank\" className=\"default-btn\">Download CV</a>\n                                </div>\n                              </div>\n                            </div>\n                          {/* </div>   */}\n                        </div>\n                    </div>    \n                  </div>\n\n\n                  <div className=\"candidates-details-sidebar\">\n                    <div className=\"candidates-widget\">\n                        <h3>About Me <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('aboutShow')}></i></h3>\n                        <div className=\"overview\">\n                          <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\n\n                        </div>\n\n                      </div>\n                  </div>    \n\n\n                <div className=\"candidates-details-content candidates-details-content-edit-form\">\n                    {/* <h3>About Me <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('aboutShow')}></i></h3>\n                    <div className=\"card mb-3\">\n                      <div className=\"card-body\">\n                        <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\n                      </div>\n                    </div> */}\n                  \n                  <h3>Education <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveEducation(true, false)}></i></h3>\n                  {\n                    state.detail && state.detail.education_informations.length > 0 ? state.detail.education_informations.map((row,i) => {\n                    return (\n                      <div className=\"card mb-3\" key={i}>\n                        <div class=\"card-header\">\n                          <i className=\"bx bx-pencil\" onClick={() => saveEducation(false,row)}></i> <i className=\"bx bx-trash\" onClick={() => removeEducation(row.id)}></i>\n                        </div>\n\n\n\n                          <div className=\"card-body\">\n\n                            <ul key={i}>\n                              <li className=\"arts\"><i className=\"bx bxs-graduation\"></i> {row.education_level} in {row.degree_title}</li>\n                              <li className=\"university\"><i className=\"bx bxs-book\"></i> {row.group +' '+row.institute_name} ({row.year_of_passing})</li>\n                              <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.description}</li>\n                            </ul>\n                          </div>\n                      </div>\n                        )\n                    })\n                    : \n                    (<ul></ul>)\n                  }   \n                  <h3>Work Experience <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveExperience(true,false)}></i></h3>\n                  {state.detail && state.detail.experience_informations.length > 0 ? state.detail.experience_informations.map((row,i) => {\n                    return (\n                          <div className=\"card mb-3\" key={i}>\n                            <div class=\"card-header\">\n                              <i className=\"bx bx-pencil\" onClick={() => saveExperience(false,row)}></i> <i className=\"bx bx-trash\" onClick={() => removeExperience(row.id)}></i>\n                            </div>  \n                            <div className=\"card-body\">\n\n                                <ul key={i}>\n                                  <li className=\"arts\"><i className=\"bx bxs-user\"></i> {row.designation}</li>\n                                  <li className=\"university\"><i className=\"bx bxs-building\"></i> {row.company_name} ({row.employment_period_year > 0 && row.employment_period_year +\" year \"} { row.employment_period_month > 0 && row.employment_period_month+' month'}) in {row.company_location}</li>\n                                  <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.description}</li>\n                                </ul>\n                            </div>\n                          </div>\n                        )\n                    })\n                    : \n                    (<ul></ul>)\n                  } \n\n                  <h3>Projects <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveProject(true, false)}></i></h3>\n                  {state.detail && state.detail.project_informations.length > 0 ? state.detail.project_informations.map((row,i) => {\n                    return (\n                            <div className=\"card mb-3\" key={i}>\n                              <div class=\"card-header\">\n                                <i className=\"bx bx-pencil\" onClick={() => saveProject(false, row)}></i> <i className=\"bx bx-trash\" onClick={() => removeProject(row.id)}></i>\n                              </div>\n                              <div className=\"card-body\">\n                                  <ul key={i}>\n                                    <li className=\"arts\"><i className=\"bx bxs-graduation\"></i> {row.title}</li>\n                                    <li className=\"university\"><i className=\"bx bxs-calendar\"></i> Period: {row.start_date} to {row.end_date} </li>\n                                    <li className=\"university\"><i className=\"bx bxs-tag\"></i> Skills: {row.technologies} </li>\n                                    <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.summary}</li>\n                                  </ul>\n                              </div>\n                            </div>\n                        )\n                    })\n                    : \n                    (<ul></ul>)\n                  } \n\n                  {/* <h3>Personal Skills <i className=\"bx bx-pencil edit-icon-btn\"></i></h3>\n                  <div className=\"card mb-3\">\n                      <div className=\"card-body\">\n                      <div className=\"all-skill-bar\">\n                        {\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\n                                  <h4 className=\"progress-title-holder\">\n                                    <span className=\"progress-title\">{skill}</span>\n                                    \n                                  </h4>\n                    \n                                  <div className=\"progress-content-outter\">\n                                    <div className=\"progress-content\" ></div>\n                                  </div>\n                              </div>)\n                            })\n                        }\n                      </div>\n                    </div>\n         \n                  </div>  */}\n                </div>\n                \n                <div className=\"candidates-details-sidebar mt-4\">\n                  <div className=\"candidates-widget\">\n                    <h3>Personal Skills <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('skillShow')}></i></h3>\n                    <div className=\"overview\">\n                      <div className=\"all-skill-bar\">\n                        {\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\n                                  <h5 className=\"progress-title-holder\">\n                                    <span className=\"progress-title\">{skill}</span>\n                                    \n                                  </h5>\n                    \n                                  <div className=\"progress-content-outter\">\n                                    <div className=\"progress-content\" ></div>\n                                    <ProgressBar variant=\"success\" now={45} />\n                                  </div>\n                              </div>)\n                            })\n                        }\n                      </div>\n                    </div>\n                  </div>\n                </div>      \n\n\n\n\n\n              </div>\n\n              <div className=\"col-lg-4\">\n                <div className=\"candidates-details-sidebar\">\n                  <div className=\"candidates-widget\">\n                    <h3>Social Profile <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('socialShow')}></i></h3>\n\n                    <ul className=\"social-icon\">\n                      <li>\n                        <a href={_.get(state.detail.additional_information, 'github_link', ['#'])} target=\"_blank\">\n                          <i className=\"bx bxl-github\"></i>\n                        </a>\n                      </li>\n                      <li>\n                        <a href={_.get(state.detail.additional_information, 'linkedin_link', ['#'])} target=\"_blank\">\n                          <i className=\"bx bxl-linkedin-square\"></i>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div className=\"candidates-widget\">\n                    <h3>Contact Information <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('contactShow')}></i></h3>\n                    \n                    <ul className=\"overview\">\n                      \n                      {/* <li>\n                        Email\n                        <a href=\"mailto:#\"><span>: {_.get(state.detail, 'email', [''])}</span></a>\n                      </li> */}\n                      <li>\n                        Phone\n                        <a href={\"tel:+91\"+state.phone}><span>: {state.phone}</span></a>\n                      </li>\n                      <li>\n                        Location\n                        <span>: {state.address}</span>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div className=\"candidates-widget\">\n                    <h3>Job Overview <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('overviewShow')}></i></h3>\n                    \n                    <ul className=\"overview\">\n                      <li>\n                        Categories\n                        <span>: {_.get(state.detail.additional_information, 'category', [''])}</span>\n                      </li>\n                      <li>\n                        Nationality\n                        <span>: {state.nationality}</span>\n                      </li>\n                      <li>\n                        Job Type\n                        <span>: {_.get(state.detail.additional_information, 'job_nature', [''])}</span>\n                      </li>\n                      <li>\n                        Experience\n                        <span>: {state.total_experience} year(s)</span>\n                      </li>\n                      <li>\n                        Expected Salary\n                        <span>: {_.get(state.detail.additional_information, 'expected_salary', [''])}</span>\n                      </li>\n                      <li>\n                        Languages:\n                        <span>: {state.languages} </span>\n                      </li>\n                      <li>\n                        Gender\n                        <span>: {state.gender}</span>\n                      </li>\n                    </ul>\n                  </div>\n                \n                  <div className=\"candidates-widget\">\n                    <h3>Download Resume <i className=\"bx bx-trash delete-icon-btn\"></i></h3>\n                    \n                    <ul className=\"overview download \">\n                      \n                      <li>\n                        <i className=\"flaticon-pdf\"></i>\n                        <a href=\"#\">PDF Formate CV</a>\n                      </li>\n                      <li>\n                        <i className=\"flaticon-pdf\"></i>\n                        <a href=\"#\">DOC Formate CV</a>\n                      </li>\n                    </ul>\n                  </div>\n                \n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n      </React.Fragment>\n    )\n}\n\nexport default withRouter(EditFreelancer);","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditUserFreelancer.js",["284","285"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\n\nfunction EditUserFreelancer(props) {\n\t// console.log(\"props\",props)\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('userShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t    <Modal.Body>\n\t\t      \n\t\t      <Row>\n\t\t        <Col xs={12} md={6}>\n\t\t        \t<div className=\"form-group\">\n\t\t\t            <label>First Name</label>\n\t\t\t        \t<input \n\t                        className=\"form-control\" \n\t                        type=\"text\" \n\t                        name=\"first_name\"\n\t                        value={props.state.first_name}\n\t                        onChange={props.handleChange} \n\t                        required\n\t                    />\n                    </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n\t\t        \t<div className=\"form-group\">\n\t\t\t            <label>Last Name</label>\n\t                    <input \n\t                        className=\"form-control\" \n\t                        type=\"text\" \n\t                        name=\"last_name\"\n\t                        value={props.state.last_name}\n\t                        onChange={props.handleChange} \n\t                        required\n\t                    />\n\t                </div>    \n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Email</label>\n\t\t\t            <input \n\t                        className=\"form-control\" \n\t                        type=\"email\" \n\t                        name=\"email\"\n\t                        value={props.state.email}\n\t                        onChange={props.handleChange} \n\t                        required\n\t                    />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Title</label>\n\t\t\t            <input \n\t\t\t                className=\"form-control\" \n\t\t\t                type=\"text\" \n\t\t\t                name=\"title\"\n\t\t\t                value={props.state.additional_information_attributes.title}\n\t\t\t                onChange={props.handleAdditional} \n\t\t\t                required\n\t\t\t            />\n\t\t\t        </div>\n\t\t        </Col>                                \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('userShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleUserUpdate()}>Save</button>\n\t\t    </Modal.Footer>\n\n\t\t</Modal>\n\t)\n}\n\nexport default EditUserFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditAboutFreelancer.js",["286","287"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\n\nfunction EditAboutFreelancer(props) {\n\t// console.log(\"props\",props)\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('aboutShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\n\t\t\t</Modal.Header>\t\t\t\n\t\t    <Modal.Body>\n\t\t      <Row>\n\t\t        <Col xs={12} md={12}>\n\t\t        \t<div className=\"form-group\">\n\t\t\t            <label>About</label>\n\t                    <textarea \n                            className=\"form-control\" \n                            rows=\"4\"\n                            name=\"about_me\" \n                            onChange={props.handleAdditional}\n                            required\n                            value = {props.state.additional_information_attributes.about_me}\n                        >\n                        </textarea>\n                    </div>\n\t\t        </Col>                              \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('aboutShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleAboutUpdate()}>Save</button>\n\t\t    </Modal.Footer>\n\n\t\t</Modal>\n\t)\n}\n\nexport default EditAboutFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditContactFreelancer.js",["288","289"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\n\nfunction EditContactFreelancer(props) {\n\t// console.log(\"props\",props)\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('contactShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t    <Modal.Body>\n\t\t      \n\t\t      <Row>\n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Contact</label>\n\t\t\t            <input \n\t                        className=\"form-control\" \n\t                        type=\"text\" \n\t                        name=\"phone\"\n\t                        value={props.state.phone}\n\t                        onChange={props.handleChange} \n\t                        required\n\t                    />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Address</label>\n\t\t\t            <textarea \n                            className=\"form-control\" \n                            rows=\"4\"\n                            name=\"address\" \n                            onChange={props.handleChange}\n                            required\n                            value={props.state.address}\n                        >\n                        </textarea>\n\t\t\t        </div>\n\t\t        </Col>                                \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('contactShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleContactUpdate()}>Save</button>\n\t\t    </Modal.Footer>\n\n\t\t</Modal>\n\t)\n}\n\nexport default EditContactFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditSocialFreelancer.js",["290","291"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\n\nfunction EditSocialFreelancer(props) {\n\t// console.log(\"props\",props)\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('socialShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t    <Modal.Body>\n\t\t      \n\t\t      <Row>\n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n                    \t<label>Github Link</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"github_link\"\n                            value={props.state.additional_information_attributes.github_link}\n                            onChange={props.handleAdditional} \n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Linkedin Link</label>\n\t\t\t            <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"linkedin_link\"\n                            value={props.state.additional_information_attributes.linkedin_link}\n                            onChange={props.handleAdditional} \n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>                                \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('socialShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleSocialUpdate()}>Save</button>\n\t\t    </Modal.Footer>\n\n\t\t</Modal>\n\t)\n}\n\nexport default EditSocialFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditProjectFreelancer.js",["292","293","294","295"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\nimport Select from 'react-select-me';\nimport 'react-select-me/lib/ReactSelectMe.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Multiselect } from 'multiselect-react-dropdown';\n\n\nfunction EditProjectFreelancer(props) {\n\t// console.log(\"props\",props)\n    const technology_options = [\n                              { value: '', label: 'Select' },\n                              { value: 'Salesforce', label: 'Salesforce' },\n                              { value: 'ROR', label: 'ROR' },\n                              { value: 'React', label: 'React' },\n                              { value: 'IOS', label: 'IOS' },\n                              { value: 'NodeJS', label: 'NodeJS' },\n                              { value: 'HTML', label: 'HTML' },\n                              { value: 'CSS', label: 'CSS' },\n                              { value: 'JavaScript', label: 'JavaScript' },\n                              { value: 'Rails', label: 'Rails' },\n                              { value: 'ERP', label: 'ERP' },\n                              { value: 'Postgres', label: 'Postgres' },\n                              { value: 'Swift', label: 'Swift' },\n                              { value: 'Objective C', label: 'Objective C' },\n                              { value: 'Express', label: 'Express' },\n                              { value: 'Redux', label: 'Redux' },\n                              { value: 'Flux', label: 'Flux' }, \n                            ]\n    var selectedValues = []\n    var technologies = props.state.technologies.split(',')\n    technologies.length > 0 && technologies.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\n\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('projectShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\n\t\t\t</Modal.Header>             \n\t\t    <Modal.Body>\n\t\t      <Row>\n\t\t        <Col xs={12} md={6}>\n\t\t        \t<div className=\"form-group\">\n\t\t\t            <label>Title</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"title\" \n                            onChange={(e) => props.handleProject(e)} \n                            required\n                            value={props.state.title}\n                        />\n                    </div>\n\t\t        </Col>\n\t\t        \n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>URL</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"project_link\" \n                            onChange={(e) => props.handleProject(e)} \n                            value={props.state.project_link}\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n                <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n                        <label>Summary</label>\n                        <textarea \n                            className=\"form-control\" \n                            rows=\"4\"\n                            name=\"summary\" \n                            onChange={(e) => props.handleProject(e)}\n                            required\n                            value={props.state.summary}\n                        >\n                        </textarea>\n                    </div>\n                </Col>\n                \n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Technologies</label>\n                        <Multiselect\n                          options={technology_options}\n                          displayValue=\"value\"\n                          onSelect={props.onSelectProject} \n                          onRemove={props.onRemoveProject} \n                          selectedValues={selectedValues}\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Start Date</label>\n                        <div className=\"input-group date\" id=\"datetimepicker\">\n                            <DatePicker\n                            selected={new Date(props.state.start_date || '')}\n                            onChange={(date) => props.handleProjectDateChange('start_date', date)}\n                            className=\"form-control mn_input post-job-boxes\"\n                            dateFormat=\"yyyy-MM-dd\"\n                            showMonthDropdown\n                            showYearDropdown\n                            dropdownMode=\"select\"\n                            required\n                            />\n                            <span className=\"input-group-addon\"></span>\n                            <i className=\"bx bx-calendar\"></i>\n                        </div>\n\t\t\t        </div>\n\t\t        </Col>\n                <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n                        <label>End Date</label>\n                        <div className=\"input-group date\" id=\"datetimepicker\">\n                            <DatePicker\n                            selected={new Date(props.state.end_date  || '')}\n                            onChange={(date) => props.handleProjectDateChange('end_date', date)}\n                            className=\"form-control mn_input post-job-boxes\"\n                            dateFormat=\"yyyy-MM-dd\"\n                            showMonthDropdown\n                            showYearDropdown\n                            dropdownMode=\"select\"\n                            required\n                            />\n                            <span className=\"input-group-addon\"></span>\n                            <i className=\"bx bx-calendar\"></i>\n                        </div>\n                    </div>\n                </Col>                            \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('projectShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleProjectSave(props.state.new)}>Save</button>\n\t\t    </Modal.Footer>\n    \n\t\t</Modal>\n\t)\n}\n\nexport default EditProjectFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditEducationFreelancer.js",["296","297"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\nimport Select from 'react-select-me';\nimport 'react-select-me/lib/ReactSelectMe.css';\n\n\nfunction EditEducationFreelancer(props) {\n\t// consoEducationog(\"props\",props)\n\tconst education_level_options =  [\n                              { value: '', label: 'Select' },\n                              { value: 'Engineer', label: 'Engineer' },\n                              { value: 'Master', label: 'Master' },\n                              { value: 'Associate', label: 'Associate' },\n                              { value: 'Graduate', label: 'Graduate' },\n                              { value: 'Post Graduate', label: 'Post Graduate' },\n                            ]\n    const degree_title_options =  [\n                              { value: '', label: 'Select' },\n                              { value: 'BE(CSE)', label: 'BE(CSE)' },\n                              { value: 'BE(IT)', label: 'BE(IT)' },\n                              { value: 'ME', label: 'ME' },\n                              { value: 'BCA', label: 'BCA' },\n                              { value: 'MCA', label: 'MCA' },\n                              { value: 'BSC(Computer)', label: 'BSC(Computer)' },\n                              { value: 'MSC(Computer)', label: 'MSC(Computer)' },\n                            ]\n    const result_options =  [\n                              { value: '', label: 'Select' },\n                              { value: 'First', label: 'First Class' },\n                              { value: 'Second', label: 'Second Class' },\n                              { value: 'Third', label: 'Third Class' }\n                            ]\n    const year_of_passing_options =  [\n                              { value: '', label: 'Select' },\n                              { value: '2001', label: '2001' },\n                              { value: '2002', label: '2002' },\n                              { value: '2003', label: '2003' },\n                              { value: '2004', label: '2004' },\n                              { value: '2005', label: '2005' },\n                              { value: '2006', label: '2006' },\n                              { value: '2007', label: '2007' },\n                              { value: '2008', label: '2008' },\n                              { value: '2009', label: '2009' },\n                              { value: '2010', label: '2010' },\n                              { value: '2011', label: '2011' },\n                              { value: '2012', label: '2012' },\n                              { value: '2013', label: '2013' },\n                              { value: '2014', label: '2014' },\n                              { value: '2015', label: '2015' },\n                              { value: '2016', label: '2016' },\n                              { value: '2017', label: '2017' },\n                              { value: '2018', label: '2018' },\n                              { value: '2019', label: '2019' },\n                              { value: '2020', label: '2020' }\n                            ]\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('educationShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\n\t\t\t</Modal.Header>            \n\t\t    <Modal.Body>\n\t\t      <Row>\n\t\t        <Col xs={12} md={6}>\n\t\t        \t<div className=\"form-group\">\n\t\t\t            <label>Level of Education</label>\n                        <Select \n                            name=\"education_level\" \n                            options={education_level_options}\n                            onChange={(value) => props.handleSelectEducation('education_level', value)} \n                            value={props.state.education_level}\n                            required\n                        />\n                    </div>\n\t\t        </Col>\n\t\t        \n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Exam / Degree Title</label>\n                        <Select \n                            name=\"degree_title\" \n                            options={degree_title_options}\n                            onChange={(value) => props.handleSelectEducation('degree_title', value)} \n                            value={props.state.degree_title}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Result</label>\n                        <Select \n                            name=\"result\" \n                            options={result_options}\n                            onChange={(value) => props.handleSelectEducation('result', value)} \n                            value={props.state.result}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Year of Passing</label>\n                        <Select \n                            name=\"year_of_passing\" \n                            options={year_of_passing_options}\n                            onChange={(value) => props.handleSelectEducation('year_of_passing', value)} \n                            value={props.state.year_of_passing}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Major/Group</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"group\" \n                            onChange={(e) => props.handleEducation(e)} \n                            required\n                            value={props.state.group}\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Institute Name</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"institute_name\" \n                            onChange={(e) => props.handleEducation(e)}\n                            required\n                            value={props.state.institute_name}\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        \n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Marks(%)</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"marks\" \n                            onChange={(e) => props.handleEducation(e)}\n                            required\n                            value={props.state.marks}\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Duration (Years)</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"duration\" \n                            onChange={(e) => props.handleEducation(e)}\n                            required\n                            value={props.state.duration}\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Description</label>\n                        <textarea \n                            className=\"form-control\" \n                            rows=\"4\"\n                            name=\"description\" \n                            onChange={(e) => props.handleEducation(e)}\n                            required\n                            value={props.state.description}\n                        >\n                        </textarea>\n\t\t\t        </div>\n\t\t        </Col>                                \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('educationShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleEducationSave(props.state.new)}>Save</button>\n\t\t    </Modal.Footer>\n\n\t\t</Modal>\n\t)\n}\n\nexport default EditEducationFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditExperienceFreelancer.js",["298","299"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\nimport Select from 'react-select-me';\nimport 'react-select-me/lib/ReactSelectMe.css';\n\n\nfunction EditExperienceFreelancer(props) {\n\t// console.log(\"props\",props)\n    const employment_period_year_options =  [\n                              { value: '', label: 'Select' },\n                              { value: '0', label: '0' },\n                              { value: '1', label: '1' },\n                              { value: '2', label: '2' },\n                              { value: '3', label: '3' },\n                              { value: '4', label: '4' },\n                              { value: '5', label: '5' },\n                              { value: '6', label: '6' },\n                              { value: '7', label: '7' },\n                              { value: '8', label: '8' },\n                              { value: '9', label: '9' },\n                              { value: '10', label: '10' },\n                              { value: '11', label: '11' },\n                              { value: '12', label: '12' },\n                              { value: '13', label: '13' },\n                              { value: '14', label: '14' },\n                              { value: '15', label: '15' },\n                              { value: '16', label: '16' },\n                              { value: '17', label: '17' },\n                              { value: '18', label: '18' },\n                              { value: '19', label: '19' },\n                              { value: '20', label: '20' }\n                            ]\n    const employment_period_month_options =  [\n                              { value: '', label: 'Select' },\n                              { value: '0', label: '0' },\n                              { value: '1', label: '1' },\n                              { value: '2', label: '2' },\n                              { value: '3', label: '3' },\n                              { value: '4', label: '4' },\n                              { value: '5', label: '5' },\n                              { value: '6', label: '6' },\n                              { value: '7', label: '7' },\n                              { value: '8', label: '8' },\n                              { value: '9', label: '9' },\n                              { value: '10', label: '10' },\n                              { value: '11', label: '11' },\n                              { value: '12', label: '12' }\n                            ]\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('experienceShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\n\t\t\t</Modal.Header>             \n\t\t    <Modal.Body>\n\t\t      <Row>\n\t\t        <Col xs={12} md={6}>\n\t\t        \t<div className=\"form-group\">\n\t\t\t            <label>Company Name</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"company_name\" \n                            onChange={(e) => props.handleExperience(e)} \n                            required\n                            value={props.state.company_name}\n                        />\n                    </div>\n\t\t        </Col>\n\t\t        \n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Designation</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"designation\" \n                            onChange={(e) => props.handleExperience(e)} \n                            required\n                            value={props.state.designation}\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n                <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n                        <label>Company Location</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"company_location\" \n                            onChange={(e) => props.handleExperience(e)} \n                            required\n                            value={props.state.company_location}\n                        />\n                    </div>\n                </Col>\n                <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n                        <label>Description</label>\n                        <textarea \n                            className=\"form-control\" \n                            rows=\"4\"\n                            name=\"description\" \n                            onChange={(e) => props.handleExperience(e)}\n                            required\n                            value={props.state.description}\n                        >\n                        </textarea>\n                    </div>\n                </Col>\n\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Employment Period Year</label>\n                        <Select \n                            name=\"employment_period_year\" \n                            options={employment_period_year_options}\n                            onChange={(value) => props.handleSelectExperience('employment_period_year', value)} \n                            value={props.state.employment_period_year}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Month</label>\n                        <Select \n                            name=\"employment_period_month\" \n                            options={employment_period_month_options}\n                            onChange={(value) => props.handleSelectExperience('employment_period_month', value)} \n                            value={props.state.employment_period_month}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n                      \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('experienceShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleExperienceSave(props.state.new)}>Save</button>\n\t\t    </Modal.Footer>\n    \n\t\t</Modal>\n\t)\n}\n\nexport default EditExperienceFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditOverviewFreelancer.js",["300","301","302"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\n// import Select from \"react-dropdown-select\";\nimport Select from 'react-select-me';\nimport 'react-select-me/lib/ReactSelectMe.css';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport LANGUAGES from \"../../constants/languages\";\nimport CATEGORY from \"../../constants/category\";\n// import SKILLS from \"../../constants/skills\";\n\n\n\nfunction EditOverviewFreelancer(props) {\n\t// console.log(\"props\",props)\n\tconst gender_options =  [\n                              { value: '', label: 'Select' },\n                              { value: 'Male', label: 'Male' },\n                              { value: 'Female', label: 'Female' }\n                            ]\n\n\tconst nationality_options =  [\n                              { value: '', label: 'Select' },\n                              { value: 'Austria', label: 'Austria' },\n                              { value: 'Canada', label: 'Canada' },\n                              { value: 'India', label: 'India' },\n                              { value: 'United Kingdom', label: 'United Kingdom' },\n                              { value: 'United State', label: 'United State' },\n                            ]\n    var selectedValues = []\n    var languages = props.state.languages.split(',')\n    languages.length > 0 && languages.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('overviewShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\n\t\t\t</Modal.Header>            \n\t\t    <Modal.Body>\n\t\t      <Row>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n                    \t<label>Category</label>\n                        <Select \n                            name=\"category\" \n                            options={CATEGORY}\n                            onChange={(value) => props.handleSelectAdditional('category', value)} \n                            value={props.state.additional_information_attributes.category}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Nationality</label>\n                        <Select \n                            name=\"nationality\" \n                            options={nationality_options}\n                            onChange={(value) => props.handleSelect('nationality', value)} \n                            value={props.state.nationality}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        \n\t\t        <Col xs={12} md={12}>\n                    <div className=\"row mb-4 mt-4\">\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\n                            <label className=\"single-check\">\n                                Full Time \n                                <input \n                                    type=\"radio\" \n                                    checked={props.state.additional_information_attributes.job_nature === \"Full Time\"} \n                                    name=\"job_nature\" \n                                    value=\"Full Time\" required/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                        </Col>\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\n                            <label className=\"single-check\">\n                                Part Time   \n                                <input \n                                    type=\"radio\" \n                                    checked={props.state.additional_information_attributes.job_nature === \"Part Time\"} \n                                    name=\"job_nature\" \n                                    value=\"Part Time\" required/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                        </Col>\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\n                            <label className=\"single-check\">\n                                Contract\n                                <input \n                                    type=\"radio\" \n                                    checked={props.state.additional_information_attributes.job_nature === \"Contract\"} \n                                    name=\"job_nature\" \n                                    value=\"Contract\" required/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                        </Col>\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\n                            <label className=\"single-check\">\n                                Office\n                                <input \n                                    type=\"radio\" \n                                    checked={props.state.additional_information_attributes.job_nature === \"Office\"} \n                                    name=\"job_nature\" \n                                    value=\"Office\" required/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                        </Col>\n                    </div>\n                </Col> \n\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Gender</label>\n                        <Select \n                            name=\"gender\" \n                            options={gender_options}\n                            onChange={(value) => props.handleSelect('gender', value)} \n                            value={props.state.gender}\n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col> \n\t\t        \n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Total Experience</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"total_experience\"\n                            value={props.state.total_experience}\n                            onChange={props.handleChange} \n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\t\t        <Col xs={12} md={6}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Expected Salary</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"expected_salary\"\n                            value={props.state.additional_information_attributes.expected_salary}\n                            onChange={props.handleAdditional} \n                            required\n                        />\n\t\t\t        </div>\n\t\t        </Col>\n\n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n\t\t\t            <label>Language</label>  \n                        <Multiselect\n                          options={LANGUAGES}\n                          displayValue=\"value\"\n                          onSelect={props.onSelectLanguage} \n                          onRemove={props.onRemoveLanguage} \n                          selectedValues={selectedValues}\n                        /> \n\t\t\t        </div>\n\t\t        </Col>\n                      \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('overviewShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleOverViewUpdate()}>Save</button>\n\t\t    </Modal.Footer>\n\n\t\t</Modal>\n\t)\n}\n\nexport default EditOverviewFreelancer;","/home/chetan/Public/Project/oaktreecrew/src/containers/EditForm/EditSkillFreelancer.js",["303","304","305"],"import React, { useState } from 'react';\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport SKILLS from \"../../constants/skills\";\n\n\nfunction EditSkillFreelancer(props) {\n\t// console.log(\"props\",props)\n\tvar selectedValues = []\n\tvar skills = props.state.additional_information_attributes.skills.split(',')\n\tskills.length > 0 && skills.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\n\n\treturn(\n\t\t<Modal show={props.show} onHide={() => props.handleClose('skillShow')} className=\"Reset-Your-Password-Popup\" centered >\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\n\t\t\t</Modal.Header>\t\t\t\t\n\t\t    <Modal.Body>\n\t\t      <Row>\n\t\t        <Col xs={12} md={12}>\n                    <div className=\"form-group\">\n                    \t<label>Skills</label>\n                        <Multiselect\n\t\t\t\t\t\t  options={SKILLS}\n\t\t\t\t\t\t  displayValue=\"value\"\n\t\t\t\t\t\t  onSelect={props.onSelectSkill} \n\t\t\t\t\t\t  onRemove={props.onRemoveSkill} \n\t\t\t\t\t\t  selectedValues={selectedValues}\n\t\t\t\t\t\t/>\n\t\t\t        </div>\n\t\t        </Col>                                \n\t\t      </Row>\n\t\t    </Modal.Body>\n\t\t    <Modal.Footer>\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('skillShow')}>Close</button>\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleSkillUpdate()}>Save</button>\n\t\t    </Modal.Footer>\n\n\t\t</Modal>\n\t)\n}\n\nexport default EditSkillFreelancer;",{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":166,"column":11,"nodeType":"312","messageId":"313","endLine":166,"endColumn":21},{"ruleId":"310","severity":1,"message":"311","line":203,"column":11,"nodeType":"312","messageId":"313","endLine":203,"endColumn":21},{"ruleId":"310","severity":1,"message":"311","line":337,"column":11,"nodeType":"312","messageId":"313","endLine":337,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":72,"column":45,"nodeType":"316","endLine":72,"endColumn":78},{"ruleId":"314","severity":1,"message":"315","line":78,"column":45,"nodeType":"316","endLine":78,"endColumn":78},{"ruleId":"314","severity":1,"message":"315","line":84,"column":45,"nodeType":"316","endLine":84,"endColumn":78},{"ruleId":"314","severity":1,"message":"315","line":92,"column":45,"nodeType":"316","endLine":92,"endColumn":103},{"ruleId":"314","severity":1,"message":"315","line":133,"column":41,"nodeType":"316","endLine":133,"endColumn":77},{"ruleId":"317","severity":1,"message":"318","line":1,"column":27,"nodeType":"319","messageId":"320","endLine":1,"endColumn":36},{"ruleId":"317","severity":1,"message":"321","line":1,"column":38,"nodeType":"319","messageId":"320","endLine":1,"endColumn":46},{"ruleId":"317","severity":1,"message":"322","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":21},{"ruleId":"317","severity":1,"message":"323","line":2,"column":23,"nodeType":"319","messageId":"320","endLine":2,"endColumn":35},{"ruleId":"317","severity":1,"message":"324","line":2,"column":37,"nodeType":"319","messageId":"320","endLine":2,"endColumn":48},{"ruleId":"317","severity":1,"message":"325","line":3,"column":22,"nodeType":"319","messageId":"320","endLine":3,"endColumn":26},{"ruleId":"314","severity":1,"message":"315","line":93,"column":64,"nodeType":"316","endLine":93,"endColumn":76},{"ruleId":"314","severity":1,"message":"315","line":93,"column":103,"nodeType":"316","endLine":93,"endColumn":115},{"ruleId":"317","severity":1,"message":"326","line":7,"column":10,"nodeType":"319","messageId":"320","endLine":7,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":163,"column":31,"nodeType":"316","endLine":163,"endColumn":64},{"ruleId":"317","severity":1,"message":"327","line":4,"column":8,"nodeType":"319","messageId":"320","endLine":4,"endColumn":16},{"ruleId":"314","severity":1,"message":"315","line":64,"column":39,"nodeType":"316","endLine":64,"endColumn":51},{"ruleId":"314","severity":1,"message":"315","line":73,"column":39,"nodeType":"316","endLine":73,"endColumn":51},{"ruleId":"314","severity":1,"message":"315","line":82,"column":39,"nodeType":"316","endLine":82,"endColumn":51},{"ruleId":"314","severity":1,"message":"315","line":91,"column":39,"nodeType":"316","endLine":91,"endColumn":51},{"ruleId":"314","severity":1,"message":"315","line":100,"column":39,"nodeType":"316","endLine":100,"endColumn":51},{"ruleId":"314","severity":1,"message":"315","line":62,"column":29,"nodeType":"316","endLine":62,"endColumn":58},{"ruleId":"328","severity":1,"message":"329","line":63,"column":33,"nodeType":"316","endLine":63,"endColumn":63},{"ruleId":"314","severity":1,"message":"315","line":70,"column":37,"nodeType":"316","endLine":70,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":75,"column":37,"nodeType":"316","endLine":75,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":80,"column":37,"nodeType":"316","endLine":80,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":85,"column":37,"nodeType":"316","endLine":85,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":123,"column":37,"nodeType":"316","endLine":123,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":126,"column":37,"nodeType":"316","endLine":126,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":129,"column":37,"nodeType":"316","endLine":129,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":132,"column":37,"nodeType":"316","endLine":132,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":135,"column":37,"nodeType":"316","endLine":135,"endColumn":49},{"ruleId":"314","severity":1,"message":"315","line":138,"column":37,"nodeType":"316","endLine":138,"endColumn":49},{"ruleId":"330","severity":1,"message":"331","line":19,"column":8,"nodeType":"332","endLine":19,"endColumn":10,"suggestions":"333"},{"ruleId":"328","severity":1,"message":"329","line":55,"column":25,"nodeType":"316","endLine":55,"endColumn":125},{"ruleId":"334","severity":1,"message":"335","line":70,"column":23,"nodeType":"316","endLine":70,"endColumn":138},{"ruleId":"334","severity":1,"message":"335","line":172,"column":25,"nodeType":"316","endLine":172,"endColumn":116},{"ruleId":"334","severity":1,"message":"335","line":177,"column":25,"nodeType":"316","endLine":177,"endColumn":118},{"ruleId":"314","severity":1,"message":"315","line":246,"column":25,"nodeType":"316","endLine":246,"endColumn":37},{"ruleId":"314","severity":1,"message":"315","line":250,"column":25,"nodeType":"316","endLine":250,"endColumn":37},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"322","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":21},{"ruleId":"317","severity":1,"message":"323","line":2,"column":23,"nodeType":"319","messageId":"320","endLine":2,"endColumn":35},{"ruleId":"317","severity":1,"message":"337","line":72,"column":11,"nodeType":"319","messageId":"320","endLine":72,"endColumn":20},{"ruleId":"317","severity":1,"message":"338","line":92,"column":11,"nodeType":"319","messageId":"320","endLine":92,"endColumn":27},{"ruleId":"328","severity":1,"message":"329","line":123,"column":19,"nodeType":"316","endLine":123,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":126,"column":19,"nodeType":"316","endLine":126,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":135,"column":19,"nodeType":"316","endLine":135,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":138,"column":19,"nodeType":"316","endLine":138,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":147,"column":19,"nodeType":"316","endLine":147,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":150,"column":19,"nodeType":"316","endLine":150,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":159,"column":19,"nodeType":"316","endLine":159,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":162,"column":19,"nodeType":"316","endLine":162,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":171,"column":19,"nodeType":"316","endLine":171,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":174,"column":19,"nodeType":"316","endLine":174,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":183,"column":19,"nodeType":"316","endLine":183,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":186,"column":19,"nodeType":"316","endLine":186,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":195,"column":19,"nodeType":"316","endLine":195,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":198,"column":19,"nodeType":"316","endLine":198,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":207,"column":19,"nodeType":"316","endLine":207,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":210,"column":19,"nodeType":"316","endLine":210,"endColumn":55},{"ruleId":"317","severity":1,"message":"318","line":1,"column":27,"nodeType":"319","messageId":"320","endLine":1,"endColumn":36},{"ruleId":"317","severity":1,"message":"339","line":3,"column":22,"nodeType":"319","messageId":"320","endLine":3,"endColumn":31},{"ruleId":"317","severity":1,"message":"340","line":9,"column":26,"nodeType":"319","messageId":"320","endLine":9,"endColumn":39},{"ruleId":"317","severity":1,"message":"341","line":189,"column":23,"nodeType":"319","messageId":"320","endLine":189,"endColumn":28},{"ruleId":"317","severity":1,"message":"341","line":244,"column":23,"nodeType":"319","messageId":"320","endLine":244,"endColumn":28},{"ruleId":"314","severity":1,"message":"342","line":1131,"column":69,"nodeType":"316","endLine":1131,"endColumn":172},{"ruleId":"314","severity":1,"message":"342","line":1275,"column":41,"nodeType":"316","endLine":1275,"endColumn":120},{"ruleId":"314","severity":1,"message":"342","line":1296,"column":61,"nodeType":"316","endLine":1296,"endColumn":165},{"ruleId":"314","severity":1,"message":"342","line":1399,"column":41,"nodeType":"316","endLine":1399,"endColumn":121},{"ruleId":"314","severity":1,"message":"342","line":1419,"column":65,"nodeType":"316","endLine":1419,"endColumn":166},{"ruleId":"314","severity":1,"message":"342","line":1536,"column":41,"nodeType":"316","endLine":1536,"endColumn":118},{"ruleId":"317","severity":1,"message":"343","line":8,"column":8,"nodeType":"319","messageId":"320","endLine":8,"endColumn":26},{"ruleId":"317","severity":1,"message":"344","line":11,"column":8,"nodeType":"319","messageId":"320","endLine":11,"endColumn":12},{"ruleId":"317","severity":1,"message":"345","line":32,"column":12,"nodeType":"319","messageId":"320","endLine":32,"endColumn":17},{"ruleId":"317","severity":1,"message":"346","line":45,"column":11,"nodeType":"319","messageId":"320","endLine":45,"endColumn":22},{"ruleId":"347","severity":1,"message":"348","line":191,"column":83,"nodeType":"316","endLine":191,"endColumn":217},{"ruleId":"314","severity":1,"message":"315","line":228,"column":125,"nodeType":"316","endLine":228,"endColumn":208},{"ruleId":"314","severity":1,"message":"342","line":231,"column":32,"nodeType":"316","endLine":231,"endColumn":109},{"ruleId":"347","severity":1,"message":"348","line":291,"column":158,"nodeType":"316","endLine":291,"endColumn":292},{"ruleId":"314","severity":1,"message":"315","line":328,"column":125,"nodeType":"316","endLine":328,"endColumn":165},{"ruleId":"314","severity":1,"message":"342","line":331,"column":125,"nodeType":"316","endLine":331,"endColumn":202},{"ruleId":"347","severity":1,"message":"348","line":392,"column":158,"nodeType":"316","endLine":392,"endColumn":292},{"ruleId":"314","severity":1,"message":"315","line":429,"column":125,"nodeType":"316","endLine":429,"endColumn":165},{"ruleId":"314","severity":1,"message":"342","line":432,"column":125,"nodeType":"316","endLine":432,"endColumn":202},{"ruleId":"347","severity":1,"message":"348","line":492,"column":158,"nodeType":"316","endLine":492,"endColumn":292},{"ruleId":"314","severity":1,"message":"315","line":529,"column":125,"nodeType":"316","endLine":529,"endColumn":165},{"ruleId":"314","severity":1,"message":"342","line":532,"column":125,"nodeType":"316","endLine":532,"endColumn":202},{"ruleId":"347","severity":1,"message":"348","line":592,"column":158,"nodeType":"316","endLine":592,"endColumn":292},{"ruleId":"314","severity":1,"message":"315","line":629,"column":125,"nodeType":"316","endLine":629,"endColumn":165},{"ruleId":"314","severity":1,"message":"342","line":632,"column":125,"nodeType":"316","endLine":632,"endColumn":202},{"ruleId":"347","severity":1,"message":"348","line":692,"column":158,"nodeType":"316","endLine":692,"endColumn":292},{"ruleId":"314","severity":1,"message":"315","line":729,"column":125,"nodeType":"316","endLine":729,"endColumn":165},{"ruleId":"314","severity":1,"message":"342","line":732,"column":125,"nodeType":"316","endLine":732,"endColumn":202},{"ruleId":"347","severity":1,"message":"348","line":848,"column":158,"nodeType":"316","endLine":848,"endColumn":292},{"ruleId":"314","severity":1,"message":"315","line":885,"column":125,"nodeType":"316","endLine":885,"endColumn":165},{"ruleId":"314","severity":1,"message":"342","line":888,"column":125,"nodeType":"316","endLine":888,"endColumn":202},{"ruleId":"330","severity":1,"message":"331","line":137,"column":8,"nodeType":"332","endLine":137,"endColumn":10,"suggestions":"349"},{"ruleId":"317","severity":1,"message":"350","line":299,"column":11,"nodeType":"319","messageId":"320","endLine":299,"endColumn":31},{"ruleId":"328","severity":1,"message":"329","line":705,"column":37,"nodeType":"316","endLine":705,"endColumn":107},{"ruleId":"334","severity":1,"message":"335","line":720,"column":35,"nodeType":"316","endLine":720,"endColumn":150},{"ruleId":"334","severity":1,"message":"335","line":881,"column":25,"nodeType":"316","endLine":881,"endColumn":116},{"ruleId":"334","severity":1,"message":"335","line":886,"column":25,"nodeType":"316","endLine":886,"endColumn":118},{"ruleId":"314","severity":1,"message":"315","line":955,"column":25,"nodeType":"316","endLine":955,"endColumn":37},{"ruleId":"314","severity":1,"message":"315","line":959,"column":25,"nodeType":"316","endLine":959,"endColumn":37},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"317","severity":1,"message":"351","line":3,"column":8,"nodeType":"319","messageId":"320","endLine":3,"endColumn":14},{"ruleId":"352","severity":1,"message":"353","line":33,"column":54,"nodeType":"354","messageId":"355","endLine":33,"endColumn":56},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"352","severity":1,"message":"353","line":31,"column":48,"nodeType":"354","messageId":"355","endLine":31,"endColumn":50},{"ruleId":"317","severity":1,"message":"336","line":1,"column":17,"nodeType":"319","messageId":"320","endLine":1,"endColumn":25},{"ruleId":"317","severity":1,"message":"326","line":2,"column":10,"nodeType":"319","messageId":"320","endLine":2,"endColumn":16},{"ruleId":"352","severity":1,"message":"353","line":11,"column":39,"nodeType":"354","messageId":"355","endLine":11,"endColumn":41},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setState' is defined but never used.","'useSelector' is defined but never used.","'shallowEqual' is defined but never used.","'useDispatch' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'CATEGORY' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["358"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'useState' is defined but never used.","'fetchData' is assigned a value but never used.","'selectFreelancer' is assigned a value but never used.","'useParams' is defined but never used.","'getFreelancer' is defined but never used.","'value' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TableListingLoader' is defined but never used.","'Tabs' is defined but never used.","'model' is assigned a value but never used.","'handleClose' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["359"],"'handleSelectLanguage' is assigned a value but never used.","'Select' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"360","fix":"361"},{"desc":"360","fix":"362"},"Update the dependencies array to be: [fetchData]",{"range":"363","text":"364"},{"range":"365","text":"364"},[545,547],"[fetchData]",[3738,3740]]