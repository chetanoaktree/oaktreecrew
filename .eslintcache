[{"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\index.js":"1","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\rootReducer.js":"3","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\App.js":"4","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\authActions.js":"5","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\utils\\setAuthorizationToken.js":"6","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\env.js":"7","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\auth.js":"8","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\applicationReducer.js":"9","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\settingReducer.js":"10","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\types.js":"11","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\applicationActions.js":"12","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Header\\Header.js":"13","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Footer\\Footer.js":"14","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Password\\Confirm.js":"15","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Login\\LoginForm.js":"16","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\NoRoute\\NoRoute.js":"17","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\EditFreelancer.js":"18","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\FreelancerSelect.js":"19","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\AddFreelancer.js":"20","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Client\\FreelancerDetail.js":"21","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Freelancer.js":"22","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\Dashboard.js":"23","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\ClientSignup.js":"24","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\hrActions.js":"25","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\category.js":"26","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\skills.js":"27","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\languages.js":"28","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditAboutFreelancer.js":"29","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditEducationFreelancer.js":"30","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditUserFreelancer.js":"31","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditContactFreelancer.js":"32","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSocialFreelancer.js":"33","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditProjectFreelancer.js":"34","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditExperienceFreelancer.js":"35","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSkillFreelancer.js":"36","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditOverviewFreelancer.js":"37","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Loader\\Skelton.js":"38","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\timezones.js":"39","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Leads.js":"40"},{"size":2637,"mtime":1611124572487,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1611124572487,"results":"43","hashOfConfig":"42"},{"size":323,"mtime":1611124572487,"results":"44","hashOfConfig":"42"},{"size":5312,"mtime":1611128673018,"results":"45","hashOfConfig":"42"},{"size":11485,"mtime":1611124572387,"results":"46","hashOfConfig":"42"},{"size":399,"mtime":1611124572487,"results":"47","hashOfConfig":"42"},{"size":132,"mtime":1611124572472,"results":"48","hashOfConfig":"42"},{"size":1022,"mtime":1611124572487,"results":"49","hashOfConfig":"42"},{"size":498,"mtime":1611124572487,"results":"50","hashOfConfig":"42"},{"size":208,"mtime":1611124572487,"results":"51","hashOfConfig":"42"},{"size":946,"mtime":1611124572387,"results":"52","hashOfConfig":"42"},{"size":173,"mtime":1611124572387,"results":"53","hashOfConfig":"42"},{"size":5981,"mtime":1611142191405,"results":"54","hashOfConfig":"42"},{"size":6866,"mtime":1611124572456,"results":"55","hashOfConfig":"42"},{"size":7088,"mtime":1611124572472,"results":"56","hashOfConfig":"42"},{"size":8597,"mtime":1611124572472,"results":"57","hashOfConfig":"42"},{"size":755,"mtime":1611124572456,"results":"58","hashOfConfig":"42"},{"size":39912,"mtime":1611124572472,"results":"59","hashOfConfig":"42"},{"size":7498,"mtime":1611127935620,"results":"60","hashOfConfig":"42"},{"size":92234,"mtime":1611141988423,"results":"61","hashOfConfig":"42"},{"size":11667,"mtime":1611124572472,"results":"62","hashOfConfig":"42"},{"size":92321,"mtime":1611130482517,"results":"63","hashOfConfig":"42"},{"size":7995,"mtime":1611139268555,"results":"64","hashOfConfig":"42"},{"size":5974,"mtime":1611128479636,"results":"65","hashOfConfig":"42"},{"size":6265,"mtime":1611129497365,"results":"66","hashOfConfig":"42"},{"size":411,"mtime":1611124572456,"results":"67","hashOfConfig":"42"},{"size":8629,"mtime":1611141617832,"results":"68","hashOfConfig":"42"},{"size":4227,"mtime":1611124572472,"results":"69","hashOfConfig":"42"},{"size":1422,"mtime":1611124572472,"results":"70","hashOfConfig":"42"},{"size":8782,"mtime":1611124572472,"results":"71","hashOfConfig":"42"},{"size":2772,"mtime":1611124572472,"results":"72","hashOfConfig":"42"},{"size":1871,"mtime":1611124572472,"results":"73","hashOfConfig":"42"},{"size":2046,"mtime":1611124572472,"results":"74","hashOfConfig":"42"},{"size":6600,"mtime":1611124572472,"results":"75","hashOfConfig":"42"},{"size":6740,"mtime":1611124572472,"results":"76","hashOfConfig":"42"},{"size":1534,"mtime":1611124572472,"results":"77","hashOfConfig":"42"},{"size":8139,"mtime":1611124572472,"results":"78","hashOfConfig":"42"},{"size":394,"mtime":1611124572456,"results":"79","hashOfConfig":"42"},{"size":10629,"mtime":1611125962245,"results":"80","hashOfConfig":"42"},{"size":88745,"mtime":1611142569845,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"16z2p90",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\index.js",[],["179","180"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\rootReducer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\App.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\authActions.js",["181","182","183"],"import axios from 'axios';\r\nimport jwtdecode from 'jwt-decode';\r\nimport { SET_CURRENT_USER, SET_USER_DATA, USER_FETCH_DATA_SUCCESS, SAVE_USER } from './types';\r\nimport setAuthorizationToken from '../utils/setAuthorizationToken';\r\nimport { applicationIsLoading } from './applicationActions';\r\nimport {REACT_API_URL} from '../constants/env.js'\r\n// import Cookies from 'universal-cookie';\r\n// const cookies = new Cookies();\r\n\r\nexport function setCurrentUser(user) {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    user: user\r\n  }\r\n}\r\n\r\nexport function setUserData(user) {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    user\r\n  }\r\n}\r\n\r\nexport function userFetchDataSuccess(user) {\r\n  return {\r\n    type: USER_FETCH_DATA_SUCCESS,\r\n    user\r\n  }\r\n}\r\n\r\nexport function saveHunterAction(user) {\r\n  return {\r\n    type: SAVE_USER,\r\n    user\r\n  }\r\n}\r\n\r\nexport function setAuthToken(token) {\r\n  return dispatch => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessTokenDate');\r\n    localStorage.setItem('accessToken', token);\r\n    localStorage.setItem('accessTokenDate', (new Date()).getTime() );\r\n    // cookies.set('lead_tn', token, { path: '/' });\r\n    \r\n    setAuthorizationToken(token);\r\n    dispatch(setCurrentUser(token));\r\n  };\r\n}\r\n\r\nexport function resetPassword(data) {\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true)) \r\n    return axios.post(REACT_API_URL + `/users/password`, data)\r\n    .then(res => {\r\n      dispatch(applicationIsLoading(false));\r\n      return res\r\n    }).catch((err) => {\r\n      dispatch(applicationIsLoading(false));\r\n      return err.response\r\n    });\r\n  }\r\n}\r\n\r\nexport function updateSalesforceCode(code) {\r\n  return dispatch => axios.post(REACT_API_URL + `/users/salesforce_integration`, {code})\r\n    .then(res => {\r\n      return res\r\n    }).catch((err) => {\r\n      return err.response\r\n    });\r\n}\r\n\r\nexport function updatePassword(data, id) {\r\n  return dispatch => axios.put(REACT_API_URL + `/users/password?uuid=${id}`, data)\r\n    .then(res => {\r\n      return res\r\n    }).catch((err) => {\r\n      return err.response\r\n    });\r\n}\r\n\r\nexport function googleLogin(google_token) {\r\n    return dispatch => {\r\n      dispatch(applicationIsLoading(true))\r\n      return axios.post(`${REACT_API_URL}/omniauth/sign_up`, {\"omniauth\" : google_token})\r\n        .then(res => {\r\n          dispatch(applicationIsLoading(false));\r\n          \r\n          if (res.data.status === 200) { \r\n            \r\n            const token = res.data.user.token;\r\n            localStorage.removeItem('accessToken');\r\n            localStorage.removeItem('accessTokenDate');\r\n            localStorage.removeItem('userDetail');\r\n            localStorage.removeItem('firstName');\r\n            localStorage.removeItem('role');\r\n\r\n            localStorage.setItem('accessToken', token);\r\n            localStorage.setItem('accessTokenDate', (new Date()).getTime());\r\n\r\n            localStorage.setItem('userDetail', JSON.stringify(res.data.user));\r\n            localStorage.setItem('firstName', res.data.user.firstname);\r\n            localStorage.setItem('role', res.data.user.current_role);\r\n            //cookie.set('accessToken', token);\r\n            // cookies.set('lead_tn', token, { path: '/' });\r\n        \r\n            dispatch(setCurrentUser(jwtdecode(token)));\r\n            setAuthorizationToken(token);\r\n            \r\n            return res;\r\n          }else{\r\n            return res;  \r\n          }\r\n          \r\n        });\r\n    }\r\n}\r\n\r\nexport function login(loginData) {\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + '/users/sign_in', loginData)\r\n      .then(res => {\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.data.status === 200) { \r\n          const token = res.data.data.token;\r\n          // console.log('res.data',res.data.data)\r\n          localStorage.removeItem('accessToken');\r\n          localStorage.removeItem('accessTokenDate');\r\n          localStorage.removeItem('userDetail');\r\n          localStorage.removeItem('firstName');\r\n          localStorage.removeItem('role');\r\n\r\n          localStorage.setItem('accessToken', token);\r\n          localStorage.setItem('accessTokenDate', (new Date()).getTime());\r\n\r\n          localStorage.setItem('userDetail', JSON.stringify(res.data.data.user));\r\n          localStorage.setItem('firstName', res.data.data.user.first_name);\r\n          localStorage.setItem('role', res.data.data.user.current_role);\r\n          \r\n          dispatch(setCurrentUser(jwtdecode(token)));\r\n          setAuthorizationToken(token);\r\n          \r\n          return res.data;\r\n        }else{\r\n          return res.data;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function getConfirmation(url) {\r\n  return (dispatch) => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios({\r\n      method: \"get\",\r\n      url: url\r\n    })\r\n    .then((response) => {\r\n        if((response.status !== 200) || (response.data.status === 404)) {\r\n          throw Error(response.statusText);\r\n          return [];\r\n        } else {\r\n          return response.data\r\n        }\r\n      }\r\n    )\r\n    .then(user => {\r\n      dispatch(applicationIsLoading(false));\r\n      return user\r\n    })\r\n    .catch((error) => {\r\n      dispatch(applicationIsLoading(false));\r\n      console.log(error)\r\n      return error\r\n    })\r\n  }\r\n}\r\n\r\nexport function authorizeToken(data) {\r\n  return dispatch => axios.get(REACT_API_URL + `/users/password/edit?reset_password_token=${data}`)\r\n    .then(res => {\r\n      return res\r\n    }).catch((err) => {\r\n      return err.response\r\n    });\r\n}\r\n\r\nexport function users(uuid) {\r\n  return (dispatch) => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios({\r\n      method: \"get\",\r\n      url: REACT_API_URL + `/users/` + uuid\r\n    })\r\n    .then((response) => {\r\n        if((response.status !== 200) || (response.data.status === 404)) {\r\n          throw Error(response.statusText);\r\n          return [];\r\n        } else {\r\n          return response.data\r\n        }\r\n      }\r\n    )\r\n    .then(user => {\r\n      dispatch(applicationIsLoading(false));\r\n      dispatch(userFetchDataSuccess(user));\r\n      return user\r\n    })\r\n    .catch((error) => {\r\n      dispatch(applicationIsLoading(false));\r\n      console.log(error)\r\n      return error\r\n    })\r\n  }\r\n}\r\n\r\nexport function saveHunter(data) {\r\n  let dataSend = {user: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.put(REACT_API_URL + `/users/${data.uuid}`, dataSend)\r\n      .then(res => {\r\n        dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\n\r\nexport function set_session(res) {\r\n  return dispatch => {\r\n    const token = res.data.user.token;\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessTokenDate');\r\n    localStorage.removeItem('userDetail');\r\n    localStorage.removeItem('firstName');\r\n    localStorage.removeItem('PlanId');\r\n    localStorage.removeItem('PlanName');\r\n\r\n    localStorage.setItem('accessToken', token);\r\n    localStorage.setItem('accessTokenDate', (new Date()).getTime());\r\n\r\n    localStorage.setItem('userDetail', JSON.stringify(res.data.user));\r\n    localStorage.setItem('firstName', res.data.user.firstname);\r\n    localStorage.setItem('PlanId', res.data.user.plan_id);\r\n    localStorage.setItem('PlanName', res.data.user.plan.name);\r\n\r\n    // cookies.set('lead_tn', token, { path: '/' });\r\n    //cookie.set('accessToken', token);\r\n    dispatch(setCurrentUser(jwtdecode(token)));\r\n    setAuthorizationToken(token);\r\n\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessTokenDate');\r\n    localStorage.removeItem('linkedin_cookie')\r\n    localStorage.removeItem('userDetail');\r\n    localStorage.removeItem('firstName');\r\n    localStorage.removeItem('PlanId');\r\n    localStorage.removeItem('PlanName');\r\n    // cookies.remove('lead_tn');\r\n\r\n    setAuthorizationToken(false);\r\n    dispatch(setCurrentUser({}));\r\n\r\n  };\r\n}\r\n\r\n\r\nexport function searchEmail(data) {\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/find_email`, data)\r\n      .then(res => {\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function inviteUser(data) {\r\n  let dataSend = {emails: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/invitations`, dataSend)\r\n      .then(res => {\r\n        // dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function getPlanSuccess(plans) {\r\n  return {\r\n    type: \"PLAN_FETCH_DATA_SUCCESS\",\r\n    plans\r\n  }\r\n}\r\n\r\nexport function getPlans(url) {\r\n  return (dispatch) => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios({\r\n      method: \"get\",\r\n      url\r\n    })\r\n    .then((response) => {\r\n      dispatch(applicationIsLoading(false));\r\n        if((response.status !== 200) || (response.data.status === 404)) {\r\n          throw Error(response.statusText);\r\n          return [];\r\n        } else {\r\n          return response.data\r\n        }\r\n      }\r\n    )\r\n    .then(plans => {\r\n      dispatch(getPlanSuccess(plans));\r\n      return plans\r\n    })\r\n    .catch((error) => {\r\n      dispatch(applicationIsLoading(false));\r\n      console.log(error)\r\n      return error\r\n    })\r\n  }\r\n}\r\n\r\nexport function paymentSent(data) {\r\n  // let dataSend = {emails: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/payment_notifications`, data)\r\n      .then(res => {\r\n        // dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n            localStorage.setItem('PlanId', res.data.plan.id);\r\n            localStorage.setItem('PlanName', res.data.plan.name);\r\n\r\n            var userDetail = JSON.parse(localStorage.userDetail)\r\n            userDetail.plan_id = res.data.plan.id\r\n            userDetail.plan = res.data.plan\r\n\r\n            localStorage.setItem('userDetail', JSON.stringify(userDetail));\r\n\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function subcribtion(data) {\r\n  let dataSend = {email: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/add_subscriber`, dataSend)\r\n      .then(res => {\r\n        // dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\utils\\setAuthorizationToken.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\env.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\auth.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\applicationReducer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\settingReducer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\types.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\applicationActions.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Header\\Header.js",["184","185"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Footer\\Footer.js",["186","187","188","189","190","191","192","193","194","195","196","197"],"import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// import { Button, Modal } from 'react-bootstrap';\r\nimport { subcribtion } from '../../actions/authActions';\r\nimport {NotificationManager} from 'react-notifications';\r\nimport logo from \"../../assets/images/logo.png\";\r\n\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props, context) {\r\n        super(props);\r\n        this.state = {\r\n          show: false,\r\n          email: '',\r\n          error: \"\"\r\n        }\r\n    }\r\n    fieldValChange = (e) => {\r\n        this.setState({email: e.target.value})\r\n    } \r\n\r\n    handleClose = () => {\r\n        this.setState({show: false})\r\n    }\r\n\r\n    subcribe = () => {\r\n        if(this.state.email){\r\n            this.props.subcribtion(this.state.email)\r\n            .then((res) => {\r\n              if(res.data.status === 200) {\r\n                NotificationManager.success(res.data.message, 'Success');  \r\n                this.setState({show: false})\r\n                // this.props.history.push('/campaign')\r\n              } else {\r\n                NotificationManager.error(res.data.message, 'Error');  \r\n                this.setState({\r\n                  error: \"something went wrong.\"\r\n                })\r\n              }\r\n            })\r\n\r\n        }else{\r\n            NotificationManager.error(\"Please enter valid email address\", 'Error');  \r\n        }\r\n    }\r\n    topScroll = () =>{\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n  render() {\r\n    const { authenticated, location } = this.props;\r\n    if((!authenticated) && location.pathname !== '/')\r\n        return null\r\n    return (\r\n      <React.Fragment>\r\n        <footer className=\"footer-area pt-100 pb-70\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-6\">\r\n                        <div className=\"single-footer-widget single-bg\">\r\n                            <a href=\"#\" className=\"logo\">\r\n                                <img src={logo} alt=\"Image\" />\r\n                            </a>\r\n\r\n                            <p>OakTreeCrew is a software development firm known for developing business solutions for small to large scale businesses. Headquartered in India, four enthusiastic and young minds have started it in 2016 from Indore. We are serving clients globally</p>\r\n\r\n                            <ul className=\"social-icon\">\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-facebook\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-instagram\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-linkedin-square\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-twitter\"></i>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-md-6\">\r\n                        <div className=\"single-footer-widget\">\r\n                            <h3>Contact</h3>\r\n\r\n                            <ul className=\"address\">\r\n                                <li>\r\n                                    <i className=\"bx bx-phone-call\"></i>\r\n                                    <span>Phone:</span>\r\n                                    <a href=\"tel:+1-(514)-7939-357\">+91 0731 499 1873</a>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"bx bx-envelope\"></i>\r\n                                    <span>Email:</span>\r\n                                    <a href=\"mailto:hello@oaktreecrew.com\">info@oaktreescrew.com</a>\r\n                                </li>\r\n                                <li className=\"location\">\r\n                                    <i className=\"bx bx-location-plus\"></i>\r\n                                    <span>Address:</span>\r\n                                    Shekhar central, 8th, floor, 802, Palasia Square, Manorama Ganj, Indore, Madhya Pradesh 452001\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-md-6\">\r\n                        <div className=\"single-footer-widget\">\r\n                            <h3>Helpful Resources</h3>\r\n\r\n                            <ul className=\"import-link\">\r\n                                <li>\r\n                                    <a href=\"#\">FAQ's</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Contact Us</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Site Map</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Terms of Use</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Privacy Centre</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Blog</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n        <div className=\"copy-right-area\">\r\n            <div className=\"container\">\r\n                <p>\r\n                    © 2020 Oak Tree Crew. All Rights Reserved.\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div className=\"go-top active\" onClick={() => this.topScroll()}>\r\n            <i className=\"bx bx-chevrons-up\"></i>\r\n            <i className=\"bx bx-chevrons-up\"></i>\r\n        </div>\r\n      </React.Fragment>  \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log('state',state)\r\n  return {\r\n    isLoading: state.applicationIsLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    subcribtion: (email) => dispatch(subcribtion(email))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Password\\Confirm.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Login\\LoginForm.js",["198","199"],"import React, { useState } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { login, resetPassword } from '../../actions/authActions';\r\n// import Loader from '../../components/Loader/Loader';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {NotificationManager} from 'react-notifications';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\n\r\n\r\nfunction LoginForm(props) {\r\n    const [state , setState] = useState({\r\n        email : \"\",\r\n        password : \"\",\r\n        error : \"\",\r\n        successMessage: null,\r\n        show: false,\r\n        sucess: false,\r\n        email_error: ''\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n      // console.log(\"----\",e)\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        const data={\r\n            \"email\":state.email,\r\n            \"password\":state.password,\r\n        }\r\n        dispatch(login({user: data}))\r\n          .then((res)=> {\r\n            if(res && res.status === 200) {\r\n               props.history.push('/freelancer');\r\n            }else{\r\n               NotificationManager.error(res.message, 'Error');  \r\n            }\r\n          })\r\n    }\r\n\r\n    const handleShow = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            show: true\r\n        }))\r\n    }; \r\n\r\n    const handleSucessClose = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            sucess: false\r\n        }))\r\n    }; \r\n\r\n    const handleClose = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            show: false\r\n        }))\r\n    }; \r\n\r\n    const fieldValChange = (e) => {\r\n      setState(prevState => ({\r\n            ...prevState,\r\n            [e.target.name] : e.target.value,\r\n            error1: null,\r\n            email_error: ''\r\n      }))\r\n      // this.checkEmpty();\r\n    }\r\n    const forgotPassword = (e) => {\r\n        e.preventDefault();    \r\n        const { email } = state;\r\n        if (email) {\r\n          dispatch(resetPassword({user:{'email': email}}))\r\n          .then((res) => {\r\n            if(res.data.status === 400) {\r\n              setState(prevState => ({\r\n                  ...prevState,\r\n                  email_error: res.data.message\r\n              }))\r\n              NotificationManager.error(res.data.message, 'Error');\r\n            } else {\r\n              NotificationManager.success(res.data.message, 'Success');\r\n              setState(prevState => ({\r\n                  ...prevState,\r\n                  show: false, email: '', sucess: true\r\n              }))\r\n            }\r\n          }).catch((e) => {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                show: false\r\n            }))\r\n          })\r\n        } else {\r\n          NotificationManager.error('Please enter email.', 'Error');\r\n          setState(prevState => ({\r\n              ...prevState,\r\n              email_error: 'please enter email.'\r\n          }))\r\n        }\r\n    };\r\n\r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n    // console.log(\"state.email\",loader)\r\n    \r\n    return(\r\n        <section className=\"user-area ptb-100\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-3\">\r\n                \r\n                </div>\r\n              \r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"user-form-content log-in-50 pt-4\">\r\n                    <h3>Log In to Your Account</h3>\r\n                  \r\n                    <form className=\"user-form\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input type=\"email\" \r\n                                   className=\"form-control\" \r\n                                   id=\"email\" \r\n                                   placeholder=\"Enter email\" \r\n                                   value={state.email}\r\n                                   onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n          \r\n                        <div className=\"col-12\">\r\n                          <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" \r\n                                     className=\"form-control\" \r\n                                     id=\"password\" \r\n                                     placeholder=\"Password\"\r\n                                     value={state.password}\r\n                                     onChange={handleChange} \r\n                              />\r\n                          </div>\r\n                        </div>\r\n          \r\n                        <div className=\"col-12\">\r\n                          <div className=\"login-action\">\r\n                            <span className=\"log-rem\">\r\n                              <input id=\"remember\" type=\"checkbox\" />\r\n                              <label>Keep me logged in</label>\r\n                            </span>\r\n                            \r\n                            <span className=\"forgot-login\">\r\n                              <a href=\"#\" onClick={handleShow}>Forgot your password?</a>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n          \r\n                        <div className=\"col-12\">\r\n                          <button className=\"default-btn\" type=\"submit\" onClick={handleSubmitClick} disabled={loader}>\r\n                            Log In\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-3\">\r\n                \r\n                </div>\r\n\r\n              </div>\r\n              <Modal show={state.sucess} className=\"forgot-password-succes-popup\" centered>\r\n                <Modal.Body>\r\n                    {/* <img src={forgot_password_succes} alt=\"success\" className=\"forgot-password-succes-popup-image\"/> */}\r\n                    <h3 className=\"text-center\">Success</h3>\r\n                    <p className=\"text-center\">Password reset link has been sent successfully. <br />You can check your inbox.</p>\r\n\r\n                  <center> \r\n                    <button className=\"default-btn\" type=\"submit\" onClick={handleSucessClose}>\r\n                      Close\r\n                    </button>\r\n                  </center> \r\n\r\n                </Modal.Body>\r\n              </Modal>\r\n\r\n\r\n\r\n                  <Modal show={state.show} onHide={handleClose} className=\"Reset-Your-Password-Popup\" centered >\r\n                    <Modal.Body>\r\n                      <h3 className=\"text-center\">Reset Your Password</h3>\r\n                      <p className=\"text-center\">Please enter the Email address which is registered with us.<br />We will send a new password to that address.</p>\r\n                      \r\n                      <Row>\r\n                        <Col xs={12} md={1}>\r\n\r\n                        </Col>\r\n                        <Col xs={12} md={10}>\r\n                          { state.email_error ? (\r\n                          <div className=\"alert alert-danger\" role=\"alert\">\r\n                            {state.email_error}\r\n                          </div>\r\n                          ) : null\r\n                          }\r\n    \r\n                          <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter Your Email Address\" id=\"email\" value={state.email} onChange={fieldValChange} required />\r\n                          <span>{state.error1}</span>\r\n\r\n                        </Col>                                \r\n                      </Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                      <button className=\"default-btn default-btn btn-two\" onClick={handleClose}>Close</button>\r\n                      <button className=\"default-btn default-btn\" onClick={forgotPassword} disabled={loader}>Send</button>\r\n                    </Modal.Footer>\r\n\r\n                    \r\n                  </Modal>\r\n            </div>\r\n          </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\NoRoute\\NoRoute.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\EditFreelancer.js",["200","201","202","203","204","205","206","207"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport {NotificationManager} from 'react-notifications';\r\nimport { getFreelancer, updateFreelancer, removeFromFreelancer } from '../../actions/hrActions';\r\nimport _ from 'lodash';\r\nimport avatar from \"../../assets/images/avatar-img.jpg\";\r\nimport EditUserFreelancer from \"../EditForm/EditUserFreelancer\"\r\nimport EditAboutFreelancer from \"../EditForm/EditAboutFreelancer\"\r\nimport EditContactFreelancer from \"../EditForm/EditContactFreelancer\"\r\nimport EditSocialFreelancer from \"../EditForm/EditSocialFreelancer\"\r\n\r\n\r\nimport EditEducationFreelancer from \"../EditForm/EditEducationFreelancer\"\r\nimport EditExperienceFreelancer from \"../EditForm/EditExperienceFreelancer\"\r\nimport EditProjectFreelancer from \"../EditForm/EditProjectFreelancer\"\r\nimport EditOverviewFreelancer from \"../EditForm/EditOverviewFreelancer\"\r\nimport EditSkillFreelancer from \"../EditForm/EditSkillFreelancer\"\r\n\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\n\r\n\r\nfunction EditFreelancer(props) {\r\n    \r\n    const [model, setModel] = useState({\r\n      userShow: false,\r\n      aboutShow: false,\r\n      contactShow: false,\r\n      socialShow: false,\r\n      overviewShow: false,\r\n      educationShow: false,\r\n      experienceShow: false,\r\n      projectShow: false,\r\n      skillShow: false,\r\n    })\r\n\r\n    const handleShow = (name) => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            [name] : true\r\n        }))\r\n    }\r\n\r\n    const handleClose = (name) => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            [name] : false\r\n        }))\r\n    }\r\n\r\n    const [state , setState] = useState({\r\n        detail: '',\r\n        avatar: \"\",\r\n        email:\"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        phone: \"\",\r\n        dob: \"\",\r\n        nationality: \"\",\r\n        gender: \"\",\r\n        martial_status: \"\",\r\n        address: \"\",\r\n        languages: \"\",\r\n        total_experience: \"\",\r\n        role_ids:[2],\r\n        skip_password_validation: true,\r\n        country: '',\r\n        state: '',\r\n        city: '',\r\n        pincode: '',\r\n        additional_information_attributes: {\r\n            title: \"\",\r\n            about_me:\"\", \r\n            presented_salary:\"\",\r\n            expected_salary:\"\", \r\n            category:\"\",\r\n            skills: '',\r\n            job_nature:\"\", \r\n            job_level: \"\",\r\n            attachment: \"\",\r\n            github_link: \"\",\r\n            linkedin_link: \"\",\r\n        },\r\n        education_informations_attributes:[],\r\n        experience_informations_attributes: [],\r\n        project_informations_attributes:[],\r\n        stateArg: [],\r\n        cityArg: []\r\n    })\r\n\r\n    const [education, setEducation] = useState(\r\n        {\r\n            education_level: \"\", \r\n            degree_title: \"\", \r\n            group: \"\", \r\n            institute_name: \"\", \r\n            result: \"\", \r\n            marks: \"\",\r\n            year_of_passing: \"\", \r\n            duration: \"\",\r\n            description: \"\",\r\n            new: true\r\n        }\r\n    )\r\n\r\n    const [experience, setExperience] = useState(\r\n        {\r\n            company_name:\"\", \r\n            designation: \"\", \r\n            company_location: \"\",\r\n            employment_period: \"\",\r\n            description: \"\",\r\n            new: true\r\n        }\r\n    )\r\n\r\n    const [project, setProject] = useState(\r\n        {\r\n            title: \"\", \r\n            start_date: \"2021-01-01\", \r\n            end_date: \"2021-01-01\", \r\n            technologies: \"\", \r\n            summary: \"\",\r\n            project_link: \"\",\r\n            new: true\r\n        }\r\n    )\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { id } = useParams();\r\n    // console.log(\"id\",id)\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        if(id){\r\n          // Update the document title using the browser API\r\n          dispatch(getFreelancer(id)).then((res)=> {\r\n              if(res && res.status === 200) {\r\n                // console.log(\"res\",res.data)\r\n                let data = res.data.user    \r\n                setState(prevState => ({\r\n                    detail: res.data.user,\r\n                    avatar: \"\",\r\n                    email: data.email,\r\n                    first_name: data.first_name,\r\n                    last_name: data.last_name,\r\n                    phone: data.phone,\r\n                    dob: data.dob,\r\n                    nationality: data.nationality,\r\n                    gender: data.gender,\r\n                    martial_status: data.martial_status,\r\n                    address: data.address,\r\n                    languages: data.languages,\r\n                    total_experience: data.total_experience,\r\n                    country: data.country,\r\n                    state: data.state,\r\n                    city: data.city,\r\n                    pincode: data.pincode,\r\n                    additional_information_attributes: {\r\n                        title: data.additional_information.title,\r\n                        about_me: data.additional_information.about_me, \r\n                        presented_salary: data.additional_information.presented_salary,\r\n                        expected_salary: data.additional_information.expected_salary, \r\n                        category: data.additional_information.category,\r\n                        skills: data.additional_information.skills,\r\n                        job_nature: data.additional_information.job_nature, \r\n                        job_level: data.additional_information.job_level,\r\n                        attachment: data.additional_information.attachment,\r\n                        github_link: data.additional_information.github_link,\r\n                        linkedin_link: data.additional_information.linkedin_link,\r\n                    },\r\n                    experience_informations_attributes: data.experience_informations,\r\n                    education_informations_attributes: data.education_informations,\r\n                    project_informations_attributes: data.project_informations\r\n                }))\r\n\r\n                // setEducation(data.education_informations)\r\n                // setExperience(data.experience_informations)\r\n                // setProject(data.project_informations)\r\n              }\r\n          })\r\n        }\r\n    }\r\n\r\n    const handleUserUpdate = () => {\r\n        let data = { \r\n                    email: state.email,\r\n                    first_name: state.first_name,\r\n                    last_name: state.last_name,\r\n                    // skip_password_validation: true\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[title]]\",state.additional_information_attributes.title)\r\n\r\n        updateApi(form_data, id, 'userShow');\r\n    }\r\n    const handleAboutUpdate = () => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[about_me]]\",state.additional_information_attributes.about_me)\r\n\r\n        updateApi(form_data, id, 'aboutShow');\r\n    }\r\n    const handleSocialUpdate = () => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[github_link]]\",state.additional_information_attributes.github_link)\r\n        form_data.append(\"user[additional_information_attributes[linkedin_link]]\",state.additional_information_attributes.linkedin_link)\r\n\r\n        updateApi(form_data, id, 'socialShow');\r\n    }\r\n    const handleContactUpdate = () => {\r\n        let data = { \r\n                    phone: state.phone,\r\n                    address: state.address,\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        updateApi(form_data, id, 'contactShow');\r\n        \r\n    }\r\n    const handleOverViewUpdate = () => {\r\n        let data = { \r\n                    nationality: state.nationality,\r\n                    gender: state.gender,\r\n                    languages: state.languages,\r\n                    total_experience: state.total_experience,\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[expected_salary]]\",state.additional_information_attributes.expected_salary)\r\n        form_data.append(\"user[additional_information_attributes[category]]\",state.additional_information_attributes.category)\r\n        // form_data.append(\"user[additional_information_attributes[skills]]\",state.additional_information_attributes.skills)\r\n        form_data.append(\"user[additional_information_attributes[job_nature]]\",state.additional_information_attributes.job_nature)\r\n        // form_data.append(\"user[additional_information_attributes[job_level]]\",state.additional_information_attributes.job_level)\r\n        \r\n\r\n        updateApi(form_data, id, 'overviewShow');\r\n        \r\n    }\r\n    const handleSkillUpdate = () => {\r\n        var form_data = new FormData();        \r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[skills]]\",state.additional_information_attributes.skills)\r\n        \r\n\r\n        updateApi(form_data, id, 'skillShow');\r\n        \r\n    }\r\n    \r\n    const updateApi = (form_data, id, modelName) => {\r\n        dispatch(updateFreelancer(form_data, id)).then((res)=> {\r\n            // console.log(\"res\",res)\r\n            if(res && res.data.status === 200) {\r\n               fetchData(); \r\n               NotificationManager.success(\"Successfully update\", 'Success');\r\n               handleClose(modelName);\r\n            }else{\r\n               NotificationManager.error(res.data.messages, 'Error');  \r\n            }\r\n        })\r\n    }\r\n    const handleChange = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        }))    \r\n    }\r\n\r\n    const handleAdditional = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSelectLanguage = (name, value) => {\r\n      console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            // [name] : value.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    const handleSelect = (name, value) => {\r\n      // console.log(name,\"----\",value)\r\n      if(value.length === 0){\r\n        return false\r\n      } \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        }))\r\n    }    \r\n\r\n    const handleSelectAdditional = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n      if(name === 'skills'){\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n      }else{\r\n\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value.value\r\n            }\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    const saveEducation = (add, row) => {\r\n        handleShow('educationShow')\r\n        if(!add){\r\n            setEducation(row)\r\n        }else{\r\n            setEducation({\r\n                education_level: \"\", \r\n                degree_title: \"\", \r\n                group: \"\", \r\n                institute_name: \"\", \r\n                result: \"\", \r\n                marks: \"\",\r\n                year_of_passing: \"\", \r\n                duration: \"\",\r\n                description: \"\",\r\n                new: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleEducation = (e) => {\r\n        const {name , value} = e.target   \r\n        setEducation(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        })) \r\n    }\r\n    const handleSelectEducation = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        setEducation(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        })) \r\n    }\r\n    const handleEducationSave = (add) => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(`user[education_informations_attributes[0][education_level]]`, education.education_level)\r\n        form_data.append(`user[education_informations_attributes[0][degree_title]]`, education.degree_title)\r\n        form_data.append(`user[education_informations_attributes[0][group]]`, education.group)\r\n        form_data.append(`user[education_informations_attributes[0][institute_name]]`, education.institute_name)\r\n        form_data.append(`user[education_informations_attributes[0][result]]`, education.result)\r\n        form_data.append(`user[education_informations_attributes[0][marks]]`, education.marks)\r\n        form_data.append(`user[education_informations_attributes[0][year_of_passing]]`, education.year_of_passing)\r\n        form_data.append(`user[education_informations_attributes[0][duration]]`, education.duration)\r\n        form_data.append(`user[education_informations_attributes[0][description]]`, education.description)\r\n\r\n        \r\n        if(add){\r\n            updateApi(form_data, id, 'educationShow');\r\n            // console.log(\"handleProjectSaveNew\",add)\r\n        }else{\r\n            form_data.append(`user[education_informations_attributes[0][id]]`, education.id)\r\n            updateApi(form_data, id, 'educationShow');\r\n            // console.log(\"handleProjectSaveold\")\r\n        }\r\n    }\r\n\r\n    const saveExperience = (add, row) => {\r\n        handleShow('experienceShow')\r\n        if(!add){\r\n            setExperience(row)\r\n        }else{\r\n            setExperience({\r\n                company_name:\"\", \r\n                designation: \"\", \r\n                company_location: \"\",\r\n                employment_period: \"\",\r\n                description: \"\",\r\n                new: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleExperience = (e) => {\r\n        const {name , value} = e.target   \r\n        setExperience(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        })) \r\n    }\r\n    const handleSelectExperience = (name, value) => {\r\n      // console.log(name,\"----\",value)\r\n        // const {name , value} = e.target   \r\n        setExperience(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        }))  \r\n    }\r\n    const handleExperienceSave = (add) => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(`user[experience_informations_attributes[0][company_name]]`, experience.company_name)\r\n        form_data.append(`user[experience_informations_attributes[0][designation]]`, experience.designation)\r\n        form_data.append(`user[experience_informations_attributes[0][company_location]]`, experience.company_location)\r\n        form_data.append(`user[experience_informations_attributes[0][employment_period_year]]`, experience.employment_period_year)\r\n        form_data.append(`user[experience_informations_attributes[0][employment_period_month]]`, experience.employment_period_month)\r\n        form_data.append(`user[experience_informations_attributes[0][description]]`, experience.description)\r\n        \r\n        if(add){\r\n            updateApi(form_data, id, 'experienceShow');\r\n            // console.log(\"handleProjectSaveNew\",add)\r\n        }else{\r\n            form_data.append(`user[experience_informations_attributes[0][id]]`, experience.id)\r\n            updateApi(form_data, id, 'experienceShow');\r\n            // console.log(\"handleProjectSaveold\")\r\n        }\r\n    }\r\n\r\n    const saveProject = (add, row) => {\r\n        handleShow('projectShow')\r\n        if(!add){\r\n            setProject(row)\r\n        }else{\r\n            setProject({\r\n                title: \"\", \r\n                start_date: \"2021-01-01\", \r\n                end_date: \"2021-01-01\", \r\n                technologies: \"\", \r\n                summary: \"\",\r\n                project_link: \"\",\r\n                new: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleProject = (e) => {\r\n        const {name , value} = e.target   \r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        })) \r\n    }\r\n    const handleSelectProject = (name, value) => {\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        }))\r\n    }\r\n\r\n    const handleProjectDateChange = (name, date) => {\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            [name] : date\r\n        }))\r\n    }\r\n    const handleProjectSave = (add) => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(`user[project_informations_attributes[0][title]]`, project.title)\r\n        form_data.append(`user[project_informations_attributes[0][project_link]]`, project.project_link)\r\n        form_data.append(`user[project_informations_attributes[0][summary]]`, project.summary)\r\n        form_data.append(`user[project_informations_attributes[0][start_date]]`, project.start_date)\r\n        form_data.append(`user[project_informations_attributes[0][end_date]]`, project.end_date)\r\n        form_data.append(`user[project_informations_attributes[0][technologies]]`, project.technologies)\r\n        if(add){\r\n            updateApi(form_data, id, 'projectShow');\r\n            // console.log(\"handleProjectSaveNew\",add)\r\n        }else{\r\n            form_data.append(`user[project_informations_attributes[0][id]]`, project.id)\r\n            updateApi(form_data, id, 'projectShow');\r\n            // console.log(\"handleProjectSaveold\")\r\n        }\r\n    }\r\n\r\n    const removeEducation = (uuid) => {\r\n      let url = `/api/v1/users/${id}/education_informations/${uuid}`\r\n      dispatch(removeFromFreelancer(url)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            fetchData();\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            // fetchData(state.page, state.pageSize, '', '');\r\n          }\r\n      })\r\n    }\r\n\r\n    const removeExperience = (uuid) => {\r\n      let url = `/api/v1/users/${id}/experience_informations/${uuid}`\r\n      dispatch(removeFromFreelancer(url)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            fetchData();\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            // fetchData(state.page, state.pageSize, '', '');\r\n          }\r\n      })\r\n    }\r\n\r\n    const removeProject = (uuid) => {\r\n      let url = `/api/v1/users/${id}/project_informations/${uuid}`\r\n      dispatch(removeFromFreelancer(url)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            fetchData();\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            // fetchData(state.page, state.pageSize, '', '');\r\n          }\r\n      })\r\n    }\r\n\r\n    const onSelectSkill = (selectedList, selectedItem) => {\r\n        // console.log(selectedList, selectedItem)\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                skills : selectedList.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n    }\r\n    const onRemoveSkill = (selectedList, removedItem) => {\r\n        // console.log(selectedList, removedItem)\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                skills : selectedList.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n    }\r\n    const onSelectLanguage = (selectedList, selectedItem) => {\r\n        // console.log(selectedList, selectedItem)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            languages : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n    const onRemoveLanguage = (selectedList, removedItem) => {\r\n        // console.log(selectedList, removedItem)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            languages : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    const onSelectProject = (selectedList, selectedItem) => {\r\n        // console.log(selectedList, selectedItem)\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            technologies : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n    const onRemoveProject = (selectedList, removedItem) => {\r\n        // console.log(selectedList, removedItem)\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            technologies : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    // console.log(\"detail\",state.additional_information_attributes.skills)\r\n    return(\r\n      <React.Fragment>\r\n        <div className=\"page-title-area\">\r\n          <div className=\"container\">\r\n            <div className=\"page-title-content\">\r\n              <h2>Edit Freelancer Details</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <EditUserFreelancer \r\n            show = {model.userShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleChange = {handleChange}\r\n            handleAdditional = {handleAdditional}\r\n            handleUserUpdate = {handleUserUpdate}\r\n        />\r\n\r\n        <EditAboutFreelancer \r\n            show = {model.aboutShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleAdditional = {handleAdditional}\r\n            handleAboutUpdate = {handleAboutUpdate}\r\n        />\r\n\r\n        <EditContactFreelancer \r\n            show = {model.contactShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleChange = {handleChange}\r\n            handleContactUpdate = {handleContactUpdate}\r\n        />\r\n\r\n        <EditSocialFreelancer \r\n            show = {model.socialShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleAdditional = {handleAdditional}\r\n            handleSocialUpdate = {handleSocialUpdate}\r\n        />\r\n\r\n        <EditOverviewFreelancer \r\n            show = {model.overviewShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleChange = {handleChange}\r\n            handleSelect = {handleSelect}\r\n            handleAdditional = {handleAdditional}\r\n            handleSelectAdditional = {handleSelectAdditional}\r\n            onSelectLanguage = {onSelectLanguage}\r\n            onRemoveLanguage = {onRemoveLanguage}\r\n            handleOverViewUpdate = {handleOverViewUpdate}\r\n        />\r\n\r\n        <EditEducationFreelancer \r\n            show = {model.educationShow}\r\n            state = {education}\r\n            handleClose = {handleClose}\r\n            handleEducation = {handleEducation}\r\n            handleSelectEducation = {handleSelectEducation}\r\n            handleEducationSave = {handleEducationSave}\r\n        />\r\n\r\n        <EditExperienceFreelancer \r\n            show = {model.experienceShow}\r\n            state = {experience}\r\n            handleClose = {handleClose}\r\n            handleExperience = {handleExperience}\r\n            handleSelectExperience = {handleSelectExperience}\r\n            handleExperienceSave = {handleExperienceSave}\r\n        />\r\n\r\n        <EditProjectFreelancer \r\n            show = {model.projectShow}\r\n            state = {project}\r\n            handleClose = {handleClose}\r\n            handleProject = {handleProject}\r\n            handleSelectProject = {handleSelectProject}\r\n            handleProjectDateChange = {handleProjectDateChange}\r\n            onSelectProject = {onSelectProject}\r\n            onRemoveProject = {onRemoveProject}\r\n            handleProjectSave = {handleProjectSave}\r\n        />\r\n\r\n        <EditSkillFreelancer \r\n            show = {model.skillShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            onSelectSkill = {onSelectSkill}\r\n            onRemoveSkill = {onRemoveSkill}\r\n            handleSkillUpdate = {handleSkillUpdate}\r\n        />\r\n        <section className=\"candidates-details-area mt-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                  <div className=\"candidates-details-sidebar\">\r\n                    <div className=\"candidates-widget\">\r\n                        <div className=\"edit-profile-image-and-title\">\r\n                          {/* <div className=\"card\"> */}\r\n                            {/* <div class=\"card-header\"> */}\r\n                            <h3>&nbsp;<i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('userShow')}></i></h3>\r\n                              \r\n                            {/* </div>   */}\r\n                            <div className=\"overview\">\r\n                              <div className=\"row align-items-center\">\r\n                                <div className=\"col-lg-2\">\r\n                                  <div className=\"hot-jobs-img\">\r\n                                    <img src={state.user_image ? state.user_image : avatar} alt=\"Image\" />\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6\">\r\n                                  <div className=\"candidates-cv-content\">\r\n                                    <h4>{_.get(state.detail, 'first_name', [''])+ ' '+ _.get(state.detail, 'last_name', [''])}</h4>\r\n                                    <span className=\"sub-title\">{_.get(state.detail.additional_information, 'title', [''])}</span>\r\n                                    <ul>\r\n                                      <li><a href=\"mailto:#\">{_.get(state.detail, 'email', [''])}</a></li>\r\n                                    </ul>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-4\">\r\n                                  <a href={_.get(state.detail.additional_information, 'user_resume', ['#'])} target=\"_blank\" className=\"default-btn\">Download CV</a>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          {/* </div>   */}\r\n                        </div>\r\n                    </div>    \r\n                  </div>\r\n\r\n\r\n                  <div className=\"candidates-details-sidebar\">\r\n                    <div className=\"candidates-widget\">\r\n                        <h3>About Me <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('aboutShow')}></i></h3>\r\n                        <div className=\"overview\">\r\n                          <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                  </div>    \r\n\r\n\r\n                <div className=\"candidates-details-content candidates-details-content-edit-form\">\r\n                    {/* <h3>About Me <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('aboutShow')}></i></h3>\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                        <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\r\n                      </div>\r\n                    </div> */}\r\n                  \r\n                  <h3>Education <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveEducation(true, false)}></i></h3>\r\n                  {\r\n                    state.detail && state.detail.education_informations.length > 0 ? state.detail.education_informations.map((row,i) => {\r\n                    return (\r\n                      <div className=\"card mb-3\" key={i}>\r\n                        <div class=\"card-header\">\r\n                          <i className=\"bx bx-pencil\" onClick={() => saveEducation(false,row)}></i> <i className=\"bx bx-trash\" onClick={() => removeEducation(row.id)}></i>\r\n                        </div>\r\n\r\n\r\n\r\n                          <div className=\"card-body\">\r\n\r\n                            <ul key={i}>\r\n                              <li className=\"arts\"><i className=\"bx bxs-graduation\"></i> {row.education_level} in {row.degree_title}</li>\r\n                              <li className=\"university\"><i className=\"bx bxs-book\"></i> {row.group +' '+row.institute_name} ({row.year_of_passing})</li>\r\n                              <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                            </ul>\r\n                          </div>\r\n                      </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  }   \r\n                  <h3>Work Experience <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveExperience(true,false)}></i></h3>\r\n                  {state.detail && state.detail.experience_informations.length > 0 ? state.detail.experience_informations.map((row,i) => {\r\n                    return (\r\n                          <div className=\"card mb-3\" key={i}>\r\n                            <div class=\"card-header\">\r\n                              <i className=\"bx bx-pencil\" onClick={() => saveExperience(false,row)}></i> <i className=\"bx bx-trash\" onClick={() => removeExperience(row.id)}></i>\r\n                            </div>  \r\n                            <div className=\"card-body\">\r\n\r\n                                <ul key={i}>\r\n                                  <li className=\"arts\"><i className=\"bx bxs-user\"></i> {row.designation}</li>\r\n                                  <li className=\"university\"><i className=\"bx bxs-building\"></i> {row.company_name} ({row.employment_period_year > 0 && row.employment_period_year +\" year \"} { row.employment_period_month > 0 && row.employment_period_month+' month'}) in {row.company_location}</li>\r\n                                  <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                                </ul>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  <h3>Projects <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveProject(true, false)}></i></h3>\r\n                  {state.detail && state.detail.project_informations.length > 0 ? state.detail.project_informations.map((row,i) => {\r\n                    return (\r\n                            <div className=\"card mb-3\" key={i}>\r\n                              <div class=\"card-header\">\r\n                                <i className=\"bx bx-pencil\" onClick={() => saveProject(false, row)}></i> <i className=\"bx bx-trash\" onClick={() => removeProject(row.id)}></i>\r\n                              </div>\r\n                              <div className=\"card-body\">\r\n                                  <ul key={i}>\r\n                                    <li className=\"arts\"><i className=\"bx bxs-graduation\"></i> {row.title}</li>\r\n                                    <li className=\"university\"><i className=\"bx bxs-calendar\"></i> Period: {row.start_date} to {row.end_date} </li>\r\n                                    <li className=\"university\"><i className=\"bx bxs-tag\"></i> Skills: {row.technologies} </li>\r\n                                    <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.summary}</li>\r\n                                  </ul>\r\n                              </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  {/* <h3>Personal Skills <i className=\"bx bx-pencil edit-icon-btn\"></i></h3>\r\n                  <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                      <div className=\"all-skill-bar\">\r\n                        {\r\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\r\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\r\n                                  <h4 className=\"progress-title-holder\">\r\n                                    <span className=\"progress-title\">{skill}</span>\r\n                                    \r\n                                  </h4>\r\n                    \r\n                                  <div className=\"progress-content-outter\">\r\n                                    <div className=\"progress-content\" ></div>\r\n                                  </div>\r\n                              </div>)\r\n                            })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n         \r\n                  </div>  */}\r\n                </div>\r\n                \r\n                <div className=\"candidates-details-sidebar mt-4\">\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Personal Skills <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('skillShow')}></i></h3>\r\n                    <div className=\"overview\">\r\n                      <div className=\"all-skill-bar\">\r\n                        {\r\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\r\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\r\n                                  <h5 className=\"progress-title-holder\">\r\n                                    <span className=\"progress-title\">{skill}</span>\r\n                                    \r\n                                  </h5>\r\n                    \r\n                                  <div className=\"progress-content-outter\">\r\n                                    <div className=\"progress-content\" ></div>\r\n                                    <ProgressBar variant=\"success\" now={45} />\r\n                                  </div>\r\n                              </div>)\r\n                            })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n\r\n\r\n\r\n\r\n\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"candidates-details-sidebar\">\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Social Profile <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('socialShow')}></i></h3>\r\n\r\n                    <ul className=\"social-icon\">\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'github_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-github\"></i>\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'linkedin_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-linkedin-square\"></i>\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Contact Information <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('contactShow')}></i></h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      \r\n                      {/* <li>\r\n                        Email\r\n                        <a href=\"mailto:#\"><span>: {_.get(state.detail, 'email', [''])}</span></a>\r\n                      </li> */}\r\n                      <li>\r\n                        Phone\r\n                        <a href={\"tel:+91\"+state.phone}><span>: {state.phone}</span></a>\r\n                      </li>\r\n                      <li>\r\n                        Location\r\n                        <span>: {state.address}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Job Overview <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('overviewShow')}></i></h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      <li>\r\n                        Categories\r\n                        <span>: {_.get(state.detail.additional_information, 'category', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Nationality\r\n                        <span>: {state.nationality}</span>\r\n                      </li>\r\n                      <li>\r\n                        Job Type\r\n                        <span>: {_.get(state.detail.additional_information, 'job_nature', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Experience\r\n                        <span>: {state.total_experience} year(s)</span>\r\n                      </li>\r\n                      <li>\r\n                        Expected Salary\r\n                        <span>: {_.get(state.detail.additional_information, 'expected_salary', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Languages:\r\n                        <span>: {state.languages} </span>\r\n                      </li>\r\n                      <li>\r\n                        Gender\r\n                        <span>: {state.gender}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Download Resume <i className=\"bx bx-trash delete-icon-btn\"></i></h3>\r\n                    \r\n                    <ul className=\"overview download \">\r\n                      \r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">PDF Formate CV</a>\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">DOC Formate CV</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(EditFreelancer);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\FreelancerSelect.js",["208","209","210","211","212","213","214","215","216","217","218","219","220"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\AddFreelancer.js",["221","222","223","224","225","226","227","228","229","230"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Client\\FreelancerDetail.js",["231","232","233","234","235","236","237"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport { getFreelancer } from '../../actions/hrActions';\r\nimport _ from 'lodash';\r\nimport avatar from \"../../assets/images/avatar-img.jpg\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\n\r\nfunction FreelancerDetail(props) {\r\n    \r\n    const [state , setState] = useState({\r\n        detail: ''\r\n      })\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n      fetchData();\r\n    }, []);\r\n\r\n    const { id } = useParams();\r\n    // console.log(\"id\",id)\r\n\r\n    const fetchData = () => {\r\n      \r\n      // Update the document title using the browser API\r\n      dispatch(getFreelancer(id)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res.data)\r\n            setState(prevState => ({\r\n                detail: res.data.user\r\n            }))\r\n          }\r\n      })\r\n    }\r\n    // console.log(\"detail\",state.detail)_.get(state.detail, 'user_image', [avatar])\r\n    return(\r\n      <React.Fragment>\r\n        <div className=\"page-title-area\">\r\n          <div className=\"container\">\r\n            <div className=\"page-title-content\">\r\n              <h2>Freelancer Details</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"candidates-details-area mt-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"candidates-cv\">\r\n                  <div className=\"row align-items-center\">\r\n                    <div className=\"col-lg-2\">\r\n                      <div className=\"hot-jobs-img\">\r\n                        <img src={state.detail && state.detail.user_image ? state.detail.user_image : avatar} alt=\"Image\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"candidates-cv-content\">\r\n                        <h3>{_.get(state.detail, 'first_name', ['']) + ' ' +_.get(state.detail, 'last_name', [''])}</h3>\r\n                        <span className=\"sub-title\">{_.get(state.detail.additional_information, 'title', [''])}</span>\r\n                        <ul>\r\n                          <li><a href=\"mailto:#\">{_.get(state.detail, 'email', [''])}</a></li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4\">\r\n                      <a href={_.get(state.detail.additional_information, 'user_resume', ['#'])} target=\"_blank\" className=\"default-btn\">Download CV</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"candidates-details-content\">\r\n                  <h3>About Me</h3>\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                        <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\r\n                      </div>\r\n                    </div>\r\n                  \r\n                  <h3>Education</h3>\r\n                  {\r\n                    state.detail && state.detail.education_informations.length > 0 ? state.detail.education_informations.map((row,i) => {\r\n                    return (\r\n                      <div className=\"card mb-3\">\r\n                        <div className=\"card-body\">\r\n                            <ul key={i}>\r\n                              <li className=\"arts\"><i class=\"bx bxs-graduation\"></i> {row.education_level} in {row.degree_title}</li>\r\n                              <li className=\"university\"><i class=\"bx bxs-book\"></i> {row.group +' '+row.institute_name} ({row.year_of_passing})</li>\r\n                              <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                            </ul>\r\n                        </div>\r\n                      </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  }   \r\n                  <h3>Work Experience</h3>\r\n                  {state.detail && state.detail.experience_informations.length > 0 ? state.detail.experience_informations.map((row,i) => {\r\n                    return (\r\n                          <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n\r\n                                <ul key={i}>\r\n                                  <li className=\"arts\"><i class=\"bx bxs-user\"></i> {row.designation}</li>\r\n                                  <li className=\"university\"><i class=\"bx bxs-building\"></i> {row.company_name} ({row.employment_period_year > 0 && row.employment_period_year +\" year \"} { row.employment_period_month > 0 && row.employment_period_month+' month'}) in {row.company_location}</li>\r\n                                  <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                                </ul>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  <h3>Projects</h3>\r\n                  {state.detail && state.detail.project_informations.length > 0 ? state.detail.project_informations.map((row,i) => {\r\n                    return (\r\n                            <div className=\"card mb-3\">\r\n                              <div className=\"card-body\">\r\n                                  <ul key={i}>\r\n                                    <li className=\"arts\"><i class=\"bx bxs-graduation\"></i> {row.title}</li>\r\n                                    <li className=\"university\"><i class=\"bx bxs-calendar\"></i> Period: {row.start_date} to {row.end_date} </li>\r\n                                    <li className=\"university\"><i class=\"bx bxs-tag\"></i> Skills: {row.technologies} </li>\r\n                                    <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.summary}</li>\r\n                                  </ul>\r\n                              </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  <h3>Personal Skills</h3>\r\n                  <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                      <div className=\"all-skill-bar\">\r\n                        {\r\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\r\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\r\n                                  <h5 className=\"progress-title-holder\">\r\n                                    <span className=\"progress-title\">{skill}</span>\r\n                                    \r\n                                  </h5>\r\n                    \r\n                                  <div className=\"progress-content-outter\">\r\n                                    <div className=\"progress-content\" ></div>\r\n                                    <ProgressBar variant=\"success\" now={45} />\r\n                                  </div>\r\n                              </div>)\r\n                            })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n         \r\n                  </div> \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"candidates-details-sidebar\">\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Social Profile</h3>\r\n\r\n                    <ul className=\"social-icon\">\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'github_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-github\"></i>\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'linkedin_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-linkedin-square\"></i>\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Contact Information</h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      \r\n                      {/* <li>\r\n                        Email\r\n                        <a href=\"mailto:#\"><span>: {_.get(state.detail, 'email', [''])}</span></a>\r\n                      </li> */}\r\n                      <li>\r\n                        Phone\r\n                        <a href={\"tel:+91\"+_.get(state.detail, 'phone', [''])}><span>: {_.get(state.detail, 'phone', [''])}</span></a>\r\n                      </li>\r\n                      <li>\r\n                        Location\r\n                        <span>: {_.get(state.detail, 'address', [''])}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Job Overview</h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      <li>\r\n                        Categories\r\n                        <span>: {_.get(state.detail.additional_information, 'category', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Nationality\r\n                        <span>: {_.get(state.detail, 'nationality', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Job Type\r\n                        <span>: {_.get(state.detail.additional_information, 'job_nature', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Experience\r\n                        <span>: {_.get(state.detail, 'total_experience', [''])} year(s)</span>\r\n                      </li>\r\n                      <li>\r\n                        Expected Salary\r\n                        <span>: {_.get(state.detail.additional_information, 'expected_salary', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Languages:\r\n                        <span>: {_.get(state.detail, 'languages', [''])} </span>\r\n                      </li>\r\n                      <li>\r\n                        Gender\r\n                        <span>: {_.get(state.detail, 'gender', [''])}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Download Resume</h3>\r\n                    \r\n                    <ul className=\"overview download \">\r\n                      \r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">PDF Formate CV</a>\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">DOC Formate CV</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(FreelancerDetail);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Freelancer.js",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {NotificationManager} from 'react-notifications';\r\nimport _ from 'lodash';\r\nimport ReactTable from 'react-table-v6'\r\n\r\nimport TableListingLoader from \"../../components/Loader/Skelton\"\r\nimport { fetchFreelancers, deleteFreelancer } from '../../actions/hrActions';\r\nimport profileImageThumbnail from \"../../assets/images/avatar-img.jpg\"\r\nimport Tabs from 'react-responsive-tabs';\r\nimport { Modal,Row,Col } from 'react-bootstrap';\r\n\r\n\r\nfunction Freelancer(props) {\r\n\r\n    const [state , setState] = useState({\r\n        from_data: \"\",\r\n        to_data:\"\",\r\n        total_count: \"\",\r\n        total_pages: \"\",\r\n        users: [],\r\n        page_number: 1,\r\n        per_page: 10,\r\n        pages  : 0,\r\n        filtered: [],\r\n        filterAll: '',\r\n        page: '',\r\n        pageSize: ''  \r\n      })\r\n\r\n    const [model, setModel] = useState({\r\n      modelShow: false,\r\n      modelData: ''\r\n    })\r\n\r\n    const handleShow = (data) => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            modelShow : true,\r\n            modelData : data \r\n        }))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            modelShow : false,\r\n            modelData : ''\r\n        }))\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n      // fetchData();\r\n    }, []);\r\n\r\n    const fetchData = (page, pageSize, sorted, filtered) => {\r\n      console.log(page, pageSize, sorted, filtered)\r\n      let data = `?page_number=${page+1}&per_page=${pageSize}&role_name=freelancer`\r\n      setState(prevState => ({\r\n                ...prevState,\r\n                page: page,\r\n                pageSize: pageSize\r\n              }))\r\n      // Update the document title using the browser API\r\n      dispatch(fetchFreelancers(data)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res.data)\r\n             setState(prevState => ({\r\n                ...prevState,\r\n                from_data: res.data.from_data,\r\n                to_data: res.data.to_data,\r\n                total_count: res.data.total_count,\r\n                total_pages: res.data.total_pages,\r\n                users: res.data.users\r\n            }))\r\n          }\r\n      })\r\n    }\r\n\r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n    // console.log(\"state.users\",loader)\r\n\r\n    const handleDelete = (uuid) => {\r\n      dispatch(deleteFreelancer(uuid)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            fetchData(state.page, state.pageSize, '', '');\r\n          }\r\n      }) \r\n    }\r\n\r\n    return(\r\n            // Start Root Div\r\n            <div>\r\n                {/* Start Page Title Area */}\r\n                <div className=\"page-title-area\">\r\n                  <div className=\"container\">\r\n                      <div className=\"page-title-content\">\r\n                          <div className=\"row\">\r\n                              <div className=\"col-md-6\">\r\n                                  <h2>Freelancers</h2>                    \r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                <a href=\"/addfreelancer\" className=\"default-btn float-right\">\r\n                                        Add New Freelancer\r\n                                </a>\r\n                                {/* <a className=\"default-btn filter-button\" href=\"#\" role=\"button\"  data-toggle=\"modal\" data-target=\"#freelancermorefilter\">\r\n                                        <i className='bx bx-dots-vertical-rounded'></i>\r\n                                </a> */}\r\n                              </div>                    \r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              {/* End Page Title Area */}\r\n              {/* Start Freelancers List Area */}\r\n              <section className=\"mt-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"\">\r\n                                <ul className=\"nav nav-tabs nav-justified freelancers-list-tabs\" id=\"pills-tab\" role=\"tablist\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" id=\"pills-all-tab\" data-toggle=\"pill\" href=\"#pills-all\" role=\"tab\" aria-controls=\"pills-all\" aria-selected=\"true\"><span className=\"tabs-counter-value\">{state.total_count}</span> All Freelancers</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-draft-tab\" data-toggle=\"pill\" href=\"#pills-draft\" role=\"tab\" aria-controls=\"pills-draft\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Draft</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-scheduling-tab\" data-toggle=\"pill\" href=\"#pills-scheduling\" role=\"tab\" aria-controls=\"pills-scheduling\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Interview Scheduling</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-Interview-tab\" data-toggle=\"pill\" href=\"#pills-Interview\" role=\"tab\" aria-controls=\"pills-Interview\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Accepted</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-Rejected-tab\" data-toggle=\"pill\" href=\"#pills-Rejected\" role=\"tab\" aria-controls=\"pills-Rejected\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Rejected</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-Job-offer-and-contract-tab\" data-toggle=\"pill\" href=\"#pills-Job-offer-and-contract\" role=\"tab\" aria-controls=\"pills-Job-offer-and-contract\" aria-selected=\"false\"><span className=\"tabs-counter-value\">0</span> Job offer & contract</a>\r\n                                    </li>                                                                                                             \r\n                                </ul>\r\n                                <div className=\"tab-content\" id=\"pills-tabContent\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"pills-all\" role=\"tabpanel\" aria-labelledby=\"pills-all-tab\">\r\n                                      \r\n                                        <ReactTable\r\n                                            data={state.users}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader      : 'Sr.',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor    : 'id',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName   : 'grid-header',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterable  : false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterMethod: (filter, row, index) => {\r\n                                                                                                        console.log(\"index\",index)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn row[filter.id].includes(filter.value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'first_name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Title\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'title',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'status',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Created Date',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'created_at',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Action',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'uuid',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <div className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='bx bx-dots-horizontal-rounded'></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"} onClick={() => {handleShow(row.original)}}>Schedule Interview</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"dropdown-item\" href=\"\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultSorted={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'first_name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesc: false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-draft\" role=\"tabpanel\" aria-labelledby=\"pills-draft-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-scheduling\" role=\"tabpanel\" aria-labelledby=\"pills-scheduling-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Interview\" role=\"tabpanel\" aria-labelledby=\"pills-Interview-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"} onClick={() => handleShow(row.original)}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Rejected\" role=\"tabpanel\" aria-labelledby=\"pills-Rejected-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Assessment\" role=\"tabpanel\" aria-labelledby=\"pills-Assessment-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-References\" role=\"tabpanel\" aria-labelledby=\"pills-References-tab\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"freelancers-list-table table table-striped\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">\r\n                                                        <div className=\"checkboxs\">\r\n                                                            <input type=\"checkbox\" id=\"chb2\" />\r\n                                                        </div>\r\n                                                    </th>\r\n                                                    <th scope=\"col\">APPLICATION # <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">APPLICANT <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">STATUS <i className='bx bx-sort'></i></th>\r\n                                                    \r\n                                                    <th scope=\"col\">Date <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\"></th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan=\"7\">\r\n                                                        <div className=\"text-center\"><h6>No Data Found</h6></div>\r\n                                                    </td>\r\n                                                </tr>                                                                                                                  \r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Decision\" role=\"tabpanel\" aria-labelledby=\"pills-Decision-tab\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"freelancers-list-table table table-striped\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">\r\n                                                        <div className=\"checkboxs\">\r\n                                                            <input type=\"checkbox\" id=\"chb2\" />\r\n                                                        </div>\r\n                                                    </th>\r\n                                                    <th scope=\"col\">APPLICATION # <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">APPLICANT <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">STATUS <i className='bx bx-sort'></i></th>\r\n                                                    \r\n                                                    <th scope=\"col\">Date <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\"></th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan=\"7\">\r\n                                                        <div className=\"text-center\"><h6>No Data Found</h6></div>\r\n                                                    </td>\r\n                                                </tr>                                                                                                                  \r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Job-offer-and-contract\" role=\"tabpanel\" aria-labelledby=\"pills-Job-offer-and-contract-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>                                                                                                                                            \r\n                                </div> \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n\r\n                <Modal show={model.modelShow} onHide={() => handleClose()} className=\"\" centered >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Schedule Interview</Modal.Title>\r\n                    </Modal.Header>\t\t\t\r\n                    <Modal.Body>\r\n                        <form className=\"\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Interview For</h6>\r\n                                <div className=\"form-group\">\r\n                                    <select>\r\n                                    <option value=\"1\">Microsoft</option>\r\n                                    <option value=\"2\">Symantec</option>\r\n                                    <option value=\"3\">SAP</option>\r\n                                    <option value=\"4\">IBM</option>\r\n                                    <option value=\"5\">SEO</option>\r\n                                    </select>\r\n                                </div>                            \r\n                                </div>\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Category</h6>\r\n                                <div className=\"form-group\">\r\n                                    <select>\r\n                                        <option value=\"1\">UX/UI Designer</option>\r\n                                        <option value=\"2\">Web Developer</option>\r\n                                        <option value=\"3\">Web Designer</option>\r\n                                        <option value=\"4\">Software Developer</option>\r\n                                        <option value=\"5\">SEO</option>\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>Interviewer</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"height\">\r\n                                            <option value=\"1\">Poonam Sharma</option>\r\n                                            <option value=\"2\">Shaifali Jariwala</option>\r\n                                            <option value=\"2\">Alka Shakhala</option>\r\n                                            <option value=\"2\">Puja Shrivastava</option>\r\n                                            <option value=\"2\">Neelam Dabar</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>Interview day</h6>\r\n                                    <form className=\"resume-info\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-group date\" id=\"\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"12/11/2020\" />\r\n                                        </div>\t\r\n                                    </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>From hours</h6>\r\n                                    <form className=\"resume-info\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-group date\" id=\"\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"12:30\" />\r\n                                        </div>\t\r\n                                    </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>To hours</h6>\r\n                                    <form className=\"resume-info\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-group date\" id=\"\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"14:30\" />\r\n                                        </div>\t\r\n                                    </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Email</h6>\r\n                                <form className=\"resume-info\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group date\" id=\"\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Email Id\" disabled />\r\n                                    </div>\t\r\n                                </div>\r\n                                </form>                          \r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Phone</h6>\r\n                                <form className=\"resume-info\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group date\" id=\"\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Contact Number\" disabled />\r\n                                    </div>\t\r\n                                </div>\r\n                                </form>                          \r\n                            </div>                          \r\n                            \r\n                            </div>  \r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <h6>Note</h6>                          \r\n                                    <div className=\"form-group\">\r\n                                    <textarea name=\"message\" className=\"form-control\" rows=\"4\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <button className=\"default-btn default-btn btn-two\" onClick={() => handleClose()}>Close</button>\r\n                    <button className=\"default-btn default-btn\">Save</button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </section>\r\n              {/* End Freelancers List Area */}\r\n            </div>\r\n            // End Root Div\r\n    )\r\n}\r\n\r\nexport default withRouter(Freelancer);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\Dashboard.js",["263","264","265","266","267","268"],"import React, { useState } from 'react';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport Select from \"react-dropdown-select\";\r\nimport CATEGORY from \"../../constants/category\";\r\nimport SKILLS from \"../../constants/skills\";\r\nimport salesforce from \"../../assets/images/categories/salesforce.svg\";\r\nimport Ruby from \"../../assets/images/categories/ruby.svg\";\r\nimport ReactJS from \"../../assets/images/categories/react.svg\";\r\nimport IOS from \"../../assets/images/categories/ios.svg\";\r\nimport NodeJS from \"../../assets/images/categories/nodejs.svg\";\r\n\r\n\r\nfunction Dashboard(props) {\r\n    \r\n    const [state , setState] = useState({\r\n        skills: \"\",\r\n        category: \"\",\r\n        skillArg: SKILLS\r\n    })\r\n\r\n    const selectCategory = (value) => {\r\n        if(state.category === value){\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                category : '',\r\n                skillArg : SKILLS\r\n            }))    \r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            category : value\r\n        }))\r\n\r\n        var filteredItems = SKILLS.filter(item => (\r\n            item.filter === value\r\n          ));\r\n        // console.log(\"filteredItems\",filteredItems)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            skillArg : filteredItems\r\n        }))\r\n    }\r\n    const handleSelect = (name, value) => {\r\n      // console.log(name,\"----\",value)\r\n      if(value.length === 0){\r\n        return false\r\n      } \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] :  value.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n    return(\r\n        <section className=\"live-jobs-area bg-color ptb-100\">\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                      <div className=\"section-title\">\r\n                          <span>What are the profiles you are looking for?</span>\r\n                          <h2>Browse Category</h2>\r\n                      </div>\r\n\r\n                      \r\n                          <div className=\"row\">\r\n                              <div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                              </div>\r\n                              {/*CATEGORY.map((row) => {\r\n                                return(<div className=\"col-lg-2 col-sm-6\">\r\n                                          <div className={state.category === category ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                              <img src={row.image} alt=\"salesforce\" />\r\n                                              <a href=\"#\">\r\n                                                  {row.label}\r\n                                              </a>\r\n                                          </div>\r\n                                      </div>)  \r\n                              })*/}\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('Salesforce')}>\r\n                                  <div className={state.category === 'Salesforce' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={salesforce} alt=\"salesforce\" />\r\n                                      <a href=\"#\">\r\n                                          Salesforce\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              \r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('ROR')}>\r\n                                  <div className={state.category === 'ROR' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={Ruby} alt=\"Ruby\" />\r\n                                      <a href=\"#\">\r\n                                          ROR\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('React')}>\r\n                                  <div className={state.category === 'React' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={ReactJS} alt=\"ReactJS\" />\r\n                                      <a href=\"#\">\r\n                                          React\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('IOS')}>\r\n                                  <div className={state.category === 'IOS' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={IOS} alt=\"IOS\" />\r\n                                      <a href=\"#\">\r\n                                          iOS\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('NodeJS')}>\r\n                                  <div className={state.category === 'NodeJS' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={NodeJS} alt=\"NodeJS\" />\r\n                                      <a href=\"#\">\r\n                                          NodeJs\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                              </div>\r\n                          </div>\r\n                          \r\n                          \t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                              </div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                              <div className=\"col-lg-10 col-md-12 \">\r\n                                  <div className=\"form-group\">\r\n                                      <Select \r\n                                          name=\"skills\" \r\n                                          multi\r\n                                          options={state.skillArg}\r\n                                          onChange={(value) => handleSelect('skills', value)} \r\n                                          value={state.skills}\r\n                                      />\r\n                                  </div>\r\n                              </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                              </div>\r\n                            </div>\r\n                            <div className=\"row\">      \r\n                              <div className=\"col-lg-12 col-md-12 text-center\">\r\n                                  <Link to={{\r\n                                      pathname: '/freelancers',\r\n                                      state: {\r\n                                        category: state.category,\r\n                                        skills: state.skills\r\n                                      }\r\n                                    }}>\r\n                                      <button className=\"default-btn\">\r\n                                          <span>Proceed</span>\r\n                                      </button>\r\n                                  </Link>\r\n                                  <div id=\"msgSubmit\" className=\"h3 text-center hidden\"></div>\r\n                                  <div className=\"clearfix\"></div>\r\n                              </div>\r\n                            </div>    \r\n                      \r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(Dashboard);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\ClientSignup.js",["269","270","271","272","273"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\hrActions.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\category.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\skills.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\languages.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditAboutFreelancer.js",["274","275"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\n\r\nfunction EditAboutFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('aboutShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>\t\t\t\r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={12}>\r\n\t\t        \t<div className=\"form-group\">\r\n\t\t\t            <label>About</label>\r\n\t                    <textarea \r\n                            className=\"form-control\" \r\n                            rows=\"4\"\r\n                            name=\"about_me\" \r\n                            onChange={props.handleAdditional}\r\n                            required\r\n                            value = {props.state.additional_information_attributes.about_me}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n\t\t        </Col>                              \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('aboutShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleAboutUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditAboutFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditEducationFreelancer.js",["276","277"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\nimport Select from 'react-select-me';\r\nimport 'react-select-me/lib/ReactSelectMe.css';\r\n\r\n\r\nfunction EditEducationFreelancer(props) {\r\n\t// consoEducationog(\"props\",props)\r\n\tconst education_level_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Engineer', label: 'Engineer' },\r\n                              { value: 'Master', label: 'Master' },\r\n                              { value: 'Associate', label: 'Associate' },\r\n                              { value: 'Graduate', label: 'Graduate' },\r\n                              { value: 'Post Graduate', label: 'Post Graduate' },\r\n                            ]\r\n    const degree_title_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'BE(CSE)', label: 'BE(CSE)' },\r\n                              { value: 'BE(IT)', label: 'BE(IT)' },\r\n                              { value: 'ME', label: 'ME' },\r\n                              { value: 'BCA', label: 'BCA' },\r\n                              { value: 'MCA', label: 'MCA' },\r\n                              { value: 'BSC(Computer)', label: 'BSC(Computer)' },\r\n                              { value: 'MSC(Computer)', label: 'MSC(Computer)' },\r\n                            ]\r\n    const result_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'First', label: 'First Class' },\r\n                              { value: 'Second', label: 'Second Class' },\r\n                              { value: 'Third', label: 'Third Class' }\r\n                            ]\r\n    const year_of_passing_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '2001', label: '2001' },\r\n                              { value: '2002', label: '2002' },\r\n                              { value: '2003', label: '2003' },\r\n                              { value: '2004', label: '2004' },\r\n                              { value: '2005', label: '2005' },\r\n                              { value: '2006', label: '2006' },\r\n                              { value: '2007', label: '2007' },\r\n                              { value: '2008', label: '2008' },\r\n                              { value: '2009', label: '2009' },\r\n                              { value: '2010', label: '2010' },\r\n                              { value: '2011', label: '2011' },\r\n                              { value: '2012', label: '2012' },\r\n                              { value: '2013', label: '2013' },\r\n                              { value: '2014', label: '2014' },\r\n                              { value: '2015', label: '2015' },\r\n                              { value: '2016', label: '2016' },\r\n                              { value: '2017', label: '2017' },\r\n                              { value: '2018', label: '2018' },\r\n                              { value: '2019', label: '2019' },\r\n                              { value: '2020', label: '2020' }\r\n                            ]\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('educationShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>            \r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={6}>\r\n\t\t        \t<div className=\"form-group\">\r\n\t\t\t            <label>Level of Education</label>\r\n                        <Select \r\n                            name=\"education_level\" \r\n                            options={education_level_options}\r\n                            onChange={(value) => props.handleSelectEducation('education_level', value)} \r\n                            value={props.state.education_level}\r\n                            required\r\n                        />\r\n                    </div>\r\n\t\t        </Col>\r\n\t\t        \r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Exam / Degree Title</label>\r\n                        <Select \r\n                            name=\"degree_title\" \r\n                            options={degree_title_options}\r\n                            onChange={(value) => props.handleSelectEducation('degree_title', value)} \r\n                            value={props.state.degree_title}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Result</label>\r\n                        <Select \r\n                            name=\"result\" \r\n                            options={result_options}\r\n                            onChange={(value) => props.handleSelectEducation('result', value)} \r\n                            value={props.state.result}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Year of Passing</label>\r\n                        <Select \r\n                            name=\"year_of_passing\" \r\n                            options={year_of_passing_options}\r\n                            onChange={(value) => props.handleSelectEducation('year_of_passing', value)} \r\n                            value={props.state.year_of_passing}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Major/Group</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"group\" \r\n                            onChange={(e) => props.handleEducation(e)} \r\n                            required\r\n                            value={props.state.group}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Institute Name</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"institute_name\" \r\n                            onChange={(e) => props.handleEducation(e)}\r\n                            required\r\n                            value={props.state.institute_name}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        \r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Marks(%)</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"marks\" \r\n                            onChange={(e) => props.handleEducation(e)}\r\n                            required\r\n                            value={props.state.marks}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Duration (Years)</label>\r\n                        <input\r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"duration\" \r\n                            onChange={(e) => props.handleEducation(e)}\r\n                            required\r\n                            value={props.state.duration}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Description</label>\r\n                        <textarea \r\n                            className=\"form-control\" \r\n                            rows=\"4\"\r\n                            name=\"description\" \r\n                            onChange={(e) => props.handleEducation(e)}\r\n                            required\r\n                            value={props.state.description}\r\n                        >\r\n                        </textarea>\r\n\t\t\t        </div>\r\n\t\t        </Col>                                \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('educationShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleEducationSave(props.state.new)}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditEducationFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditUserFreelancer.js",["278","279"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\n\r\nfunction EditUserFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('userShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={6}>\r\n\t\t        \t<div className=\"form-group\">\r\n\t\t\t            <label>First Name</label>\r\n\t\t\t        \t<input \r\n\t                        className=\"form-control\" \r\n\t                        type=\"text\" \r\n\t                        name=\"first_name\"\r\n\t                        value={props.state.first_name}\r\n\t                        onChange={props.handleChange} \r\n\t                        required\r\n\t                    />\r\n                    </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n\t\t        \t<div className=\"form-group\">\r\n\t\t\t            <label>Last Name</label>\r\n\t                    <input \r\n\t                        className=\"form-control\" \r\n\t                        type=\"text\" \r\n\t                        name=\"last_name\"\r\n\t                        value={props.state.last_name}\r\n\t                        onChange={props.handleChange} \r\n\t                        required\r\n\t                    />\r\n\t                </div>    \r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Email</label>\r\n\t\t\t            <input \r\n\t                        className=\"form-control\" \r\n\t                        type=\"email\" \r\n\t                        name=\"email\"\r\n\t                        value={props.state.email}\r\n\t                        onChange={props.handleChange} \r\n\t                        required\r\n\t                    />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Title</label>\r\n\t\t\t            <input \r\n\t\t\t                className=\"form-control\" \r\n\t\t\t                type=\"text\" \r\n\t\t\t                name=\"title\"\r\n\t\t\t                value={props.state.additional_information_attributes.title}\r\n\t\t\t                onChange={props.handleAdditional} \r\n\t\t\t                required\r\n\t\t\t            />\r\n\t\t\t        </div>\r\n\t\t        </Col>                                \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('userShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleUserUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditUserFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditContactFreelancer.js",["280","281"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\n\r\nfunction EditContactFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('contactShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>\t\t\t\t\r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Contact</label>\r\n\t\t\t            <input \r\n\t                        className=\"form-control\" \r\n\t                        type=\"text\" \r\n\t                        name=\"phone\"\r\n\t                        value={props.state.phone}\r\n\t                        onChange={props.handleChange} \r\n\t                        required\r\n\t                    />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Address</label>\r\n\t\t\t            <textarea \r\n                            className=\"form-control\" \r\n                            rows=\"4\"\r\n                            name=\"address\" \r\n                            onChange={props.handleChange}\r\n                            required\r\n                            value={props.state.address}\r\n                        >\r\n                        </textarea>\r\n\t\t\t        </div>\r\n\t\t        </Col>                                \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('contactShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleContactUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditContactFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSocialFreelancer.js",["282","283"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\n\r\nfunction EditSocialFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('socialShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>\t\t\t\t\r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n                    \t<label><i class=\"bx bxl-github\"></i> Github Link</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"github_link\"\r\n                            value={props.state.additional_information_attributes.github_link}\r\n                            onChange={props.handleAdditional} \r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label><i class=\"bx bxl-linkedin-square\"></i> Linkedin Link</label>\r\n\t\t\t            <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"linkedin_link\"\r\n                            value={props.state.additional_information_attributes.linkedin_link}\r\n                            onChange={props.handleAdditional} \r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>                                \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('socialShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleSocialUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditSocialFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditProjectFreelancer.js",["284","285","286","287"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\nimport Select from 'react-select-me';\r\nimport 'react-select-me/lib/ReactSelectMe.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\n\r\nfunction EditProjectFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n    const technology_options = [\r\n                              { value: 'Salesforce', label: 'Salesforce' },\r\n                              { value: 'ROR', label: 'ROR' },\r\n                              { value: 'React', label: 'React' },\r\n                              { value: 'IOS', label: 'IOS' },\r\n                              { value: 'NodeJS', label: 'NodeJS' },\r\n                              { value: 'HTML', label: 'HTML' },\r\n                              { value: 'CSS', label: 'CSS' },\r\n                              { value: 'JavaScript', label: 'JavaScript' },\r\n                              { value: 'Rails', label: 'Rails' },\r\n                              { value: 'ERP', label: 'ERP' },\r\n                              { value: 'Postgres', label: 'Postgres' },\r\n                              { value: 'Swift', label: 'Swift' },\r\n                              { value: 'Objective C', label: 'Objective C' },\r\n                              { value: 'Express', label: 'Express' },\r\n                              { value: 'Redux', label: 'Redux' },\r\n                              { value: 'Flux', label: 'Flux' }, \r\n                            ]\r\n    var selectedValues = []\r\n    var technologies = props.state.technologies.split(',')\r\n    technologies.length > 0 && technologies.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\r\n\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('projectShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>             \r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={6}>\r\n\t\t        \t<div className=\"form-group\">\r\n\t\t\t            <label>Title</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"title\" \r\n                            onChange={(e) => props.handleProject(e)} \r\n                            required\r\n                            value={props.state.title}\r\n                        />\r\n                    </div>\r\n\t\t        </Col>\r\n\t\t        \r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>URL</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"project_link\" \r\n                            onChange={(e) => props.handleProject(e)} \r\n                            value={props.state.project_link}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n                        <label>Summary</label>\r\n                        <textarea \r\n                            className=\"form-control\" \r\n                            rows=\"4\"\r\n                            name=\"summary\" \r\n                            onChange={(e) => props.handleProject(e)}\r\n                            required\r\n                            value={props.state.summary}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                </Col>\r\n                \r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Technologies</label>\r\n                        <Multiselect\r\n                          options={technology_options}\r\n                          displayValue=\"value\"\r\n                          onSelect={props.onSelectProject} \r\n                          onRemove={props.onRemoveProject} \r\n                          selectedValues={selectedValues}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Start Date</label>\r\n                        <div className=\"input-group date\" id=\"datetimepicker\">\r\n                            <DatePicker\r\n                            selected={new Date(props.state.start_date || '')}\r\n                            onChange={(date) => props.handleProjectDateChange('start_date', date)}\r\n                            className=\"form-control mn_input post-job-boxes\"\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            required\r\n                            />\r\n                            <span className=\"input-group-addon\"></span>\r\n                            <i className=\"bx bx-calendar\"></i>\r\n                        </div>\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n                        <label>End Date</label>\r\n                        <div className=\"input-group date\" id=\"datetimepicker\">\r\n                            <DatePicker\r\n                            selected={new Date(props.state.end_date  || '')}\r\n                            onChange={(date) => props.handleProjectDateChange('end_date', date)}\r\n                            className=\"form-control mn_input post-job-boxes\"\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            required\r\n                            />\r\n                            <span className=\"input-group-addon\"></span>\r\n                            <i className=\"bx bx-calendar\"></i>\r\n                        </div>\r\n                    </div>\r\n                </Col>                            \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('projectShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleProjectSave(props.state.new)}>Save</button>\r\n\t\t    </Modal.Footer>\r\n    \r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditProjectFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditExperienceFreelancer.js",["288","289"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\nimport Select from 'react-select-me';\r\nimport 'react-select-me/lib/ReactSelectMe.css';\r\n\r\n\r\nfunction EditExperienceFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n    const employment_period_year_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '0', label: '0' },\r\n                              { value: '1', label: '1' },\r\n                              { value: '2', label: '2' },\r\n                              { value: '3', label: '3' },\r\n                              { value: '4', label: '4' },\r\n                              { value: '5', label: '5' },\r\n                              { value: '6', label: '6' },\r\n                              { value: '7', label: '7' },\r\n                              { value: '8', label: '8' },\r\n                              { value: '9', label: '9' },\r\n                              { value: '10', label: '10' },\r\n                              { value: '11', label: '11' },\r\n                              { value: '12', label: '12' },\r\n                              { value: '13', label: '13' },\r\n                              { value: '14', label: '14' },\r\n                              { value: '15', label: '15' },\r\n                              { value: '16', label: '16' },\r\n                              { value: '17', label: '17' },\r\n                              { value: '18', label: '18' },\r\n                              { value: '19', label: '19' },\r\n                              { value: '20', label: '20' }\r\n                            ]\r\n    const employment_period_month_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '0', label: '0' },\r\n                              { value: '1', label: '1' },\r\n                              { value: '2', label: '2' },\r\n                              { value: '3', label: '3' },\r\n                              { value: '4', label: '4' },\r\n                              { value: '5', label: '5' },\r\n                              { value: '6', label: '6' },\r\n                              { value: '7', label: '7' },\r\n                              { value: '8', label: '8' },\r\n                              { value: '9', label: '9' },\r\n                              { value: '10', label: '10' },\r\n                              { value: '11', label: '11' },\r\n                              { value: '12', label: '12' }\r\n                            ]\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('experienceShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>             \r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={6}>\r\n\t\t        \t<div className=\"form-group\">\r\n\t\t\t            <label>Company Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"company_name\" \r\n                            onChange={(e) => props.handleExperience(e)} \r\n                            required\r\n                            value={props.state.company_name}\r\n                        />\r\n                    </div>\r\n\t\t        </Col>\r\n\t\t        \r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Designation</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"designation\" \r\n                            onChange={(e) => props.handleExperience(e)} \r\n                            required\r\n                            value={props.state.designation}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n                        <label>Company Location</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"company_location\" \r\n                            onChange={(e) => props.handleExperience(e)} \r\n                            required\r\n                            value={props.state.company_location}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea \r\n                            className=\"form-control\" \r\n                            rows=\"4\"\r\n                            name=\"description\" \r\n                            onChange={(e) => props.handleExperience(e)}\r\n                            required\r\n                            value={props.state.description}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                </Col>\r\n\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Employment Period Year</label>\r\n                        <Select \r\n                            name=\"employment_period_year\" \r\n                            options={employment_period_year_options}\r\n                            onChange={(value) => props.handleSelectExperience('employment_period_year', value)} \r\n                            value={props.state.employment_period_year}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Month</label>\r\n                        <Select \r\n                            name=\"employment_period_month\" \r\n                            options={employment_period_month_options}\r\n                            onChange={(value) => props.handleSelectExperience('employment_period_month', value)} \r\n                            value={props.state.employment_period_month}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                      \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('experienceShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleExperienceSave(props.state.new)}>Save</button>\r\n\t\t    </Modal.Footer>\r\n    \r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditExperienceFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSkillFreelancer.js",["290","291","292"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport SKILLS from \"../../constants/skills\";\r\n\r\n\r\nfunction EditSkillFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\tvar selectedValues = []\r\n\tvar skills = props.state.additional_information_attributes.skills.split(',')\r\n\tskills.length > 0 && skills.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\r\n\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('skillShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>\t\t\t\t\r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n                    \t<label>Skills</label>\r\n                        <Multiselect\r\n\t\t\t\t\t\t  options={SKILLS}\r\n\t\t\t\t\t\t  displayValue=\"value\"\r\n\t\t\t\t\t\t  onSelect={props.onSelectSkill} \r\n\t\t\t\t\t\t  onRemove={props.onRemoveSkill} \r\n\t\t\t\t\t\t  selectedValues={selectedValues}\r\n\t\t\t\t\t\t/>\r\n\t\t\t        </div>\r\n\t\t        </Col>                                \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('skillShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleSkillUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditSkillFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditOverviewFreelancer.js",["293","294","295"],"import React, { useState } from 'react';\r\nimport { Button, Modal,Row,Col } from 'react-bootstrap';\r\n// import Select from \"react-dropdown-select\";\r\nimport Select from 'react-select-me';\r\nimport 'react-select-me/lib/ReactSelectMe.css';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport LANGUAGES from \"../../constants/languages\";\r\nimport CATEGORY from \"../../constants/category\";\r\n// import SKILLS from \"../../constants/skills\";\r\n\r\n\r\n\r\nfunction EditOverviewFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\tconst gender_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Male', label: 'Male' },\r\n                              { value: 'Female', label: 'Female' }\r\n                            ]\r\n\r\n\tconst nationality_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Austria', label: 'Austria' },\r\n                              { value: 'Canada', label: 'Canada' },\r\n                              { value: 'India', label: 'India' },\r\n                              { value: 'United Kingdom', label: 'United Kingdom' },\r\n                              { value: 'United State', label: 'United State' },\r\n                            ]\r\n    var selectedValues = []\r\n    var languages = props.state.languages.split(',')\r\n    languages.length > 0 && languages.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('overviewShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>            \r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n                    \t<label>Category</label>\r\n                        <Select \r\n                            name=\"category\" \r\n                            options={CATEGORY}\r\n                            onChange={(value) => props.handleSelectAdditional('category', value)} \r\n                            value={props.state.additional_information_attributes.category}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Nationality</label>\r\n                        <Select \r\n                            name=\"nationality\" \r\n                            options={nationality_options}\r\n                            onChange={(value) => props.handleSelect('nationality', value)} \r\n                            value={props.state.nationality}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        \r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"row mb-4 mt-4\">\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Full Time \r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Full Time\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Full Time\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Part Time   \r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Part Time\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Part Time\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Contract\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Contract\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Contract\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Office\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Office\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Office\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                    </div>\r\n                </Col> \r\n\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Gender</label>\r\n                        <Select \r\n                            name=\"gender\" \r\n                            options={gender_options}\r\n                            onChange={(value) => props.handleSelect('gender', value)} \r\n                            value={props.state.gender}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col> \r\n\t\t        \r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Total Experience</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"total_experience\"\r\n                            value={props.state.total_experience}\r\n                            onChange={props.handleChange} \r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Expected Salary</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"expected_salary\"\r\n                            value={props.state.additional_information_attributes.expected_salary}\r\n                            onChange={props.handleAdditional} \r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Language</label>  \r\n                        <Multiselect\r\n                          options={LANGUAGES}\r\n                          displayValue=\"value\"\r\n                          onSelect={props.onSelectLanguage} \r\n                          onRemove={props.onRemoveLanguage} \r\n                          selectedValues={selectedValues}\r\n                        /> \r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                      \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('overviewShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleOverViewUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditOverviewFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Loader\\Skelton.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\timezones.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Leads.js",["296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","severity":1,"message":"318","line":166,"column":11,"nodeType":"319","messageId":"320","endLine":166,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":203,"column":11,"nodeType":"319","messageId":"320","endLine":203,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":337,"column":11,"nodeType":"319","messageId":"320","endLine":337,"endColumn":21},{"ruleId":"321","severity":1,"message":"322","line":84,"column":45,"nodeType":"323","endLine":84,"endColumn":103},{"ruleId":"321","severity":1,"message":"322","line":125,"column":41,"nodeType":"323","endLine":125,"endColumn":77},{"ruleId":"321","severity":1,"message":"322","line":62,"column":29,"nodeType":"323","endLine":62,"endColumn":58},{"ruleId":"324","severity":1,"message":"325","line":63,"column":33,"nodeType":"323","endLine":63,"endColumn":63},{"ruleId":"321","severity":1,"message":"322","line":70,"column":37,"nodeType":"323","endLine":70,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":75,"column":37,"nodeType":"323","endLine":75,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":80,"column":37,"nodeType":"323","endLine":80,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":85,"column":37,"nodeType":"323","endLine":85,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":123,"column":37,"nodeType":"323","endLine":123,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":126,"column":37,"nodeType":"323","endLine":126,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":129,"column":37,"nodeType":"323","endLine":129,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":132,"column":37,"nodeType":"323","endLine":132,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":135,"column":37,"nodeType":"323","endLine":135,"endColumn":49},{"ruleId":"321","severity":1,"message":"322","line":138,"column":37,"nodeType":"323","endLine":138,"endColumn":49},{"ruleId":"326","severity":1,"message":"327","line":7,"column":10,"nodeType":"328","messageId":"329","endLine":7,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":163,"column":31,"nodeType":"323","endLine":163,"endColumn":64},{"ruleId":"330","severity":1,"message":"331","line":137,"column":8,"nodeType":"332","endLine":137,"endColumn":10,"suggestions":"333"},{"ruleId":"326","severity":1,"message":"334","line":299,"column":11,"nodeType":"328","messageId":"329","endLine":299,"endColumn":31},{"ruleId":"324","severity":1,"message":"325","line":705,"column":37,"nodeType":"323","endLine":705,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":720,"column":35,"nodeType":"323","endLine":720,"endColumn":150},{"ruleId":"335","severity":1,"message":"336","line":881,"column":25,"nodeType":"323","endLine":881,"endColumn":116},{"ruleId":"335","severity":1,"message":"336","line":886,"column":25,"nodeType":"323","endLine":886,"endColumn":118},{"ruleId":"321","severity":1,"message":"322","line":955,"column":25,"nodeType":"323","endLine":955,"endColumn":37},{"ruleId":"321","severity":1,"message":"322","line":959,"column":25,"nodeType":"323","endLine":959,"endColumn":37},{"ruleId":"326","severity":1,"message":"337","line":1,"column":38,"nodeType":"328","messageId":"329","endLine":1,"endColumn":46},{"ruleId":"326","severity":1,"message":"338","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":21},{"ruleId":"326","severity":1,"message":"339","line":2,"column":23,"nodeType":"328","messageId":"329","endLine":2,"endColumn":35},{"ruleId":"326","severity":1,"message":"340","line":72,"column":11,"nodeType":"328","messageId":"329","endLine":72,"endColumn":20},{"ruleId":"326","severity":1,"message":"341","line":92,"column":11,"nodeType":"328","messageId":"329","endLine":92,"endColumn":27},{"ruleId":"324","severity":1,"message":"325","line":123,"column":19,"nodeType":"323","endLine":123,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":133,"column":19,"nodeType":"323","endLine":133,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":143,"column":19,"nodeType":"323","endLine":143,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":153,"column":19,"nodeType":"323","endLine":153,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":163,"column":19,"nodeType":"323","endLine":163,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":173,"column":19,"nodeType":"323","endLine":173,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":183,"column":19,"nodeType":"323","endLine":183,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":193,"column":19,"nodeType":"323","endLine":193,"endColumn":56},{"ruleId":"326","severity":1,"message":"342","line":1,"column":27,"nodeType":"328","messageId":"329","endLine":1,"endColumn":36},{"ruleId":"326","severity":1,"message":"343","line":3,"column":22,"nodeType":"328","messageId":"329","endLine":3,"endColumn":31},{"ruleId":"326","severity":1,"message":"344","line":191,"column":23,"nodeType":"328","messageId":"329","endLine":191,"endColumn":28},{"ruleId":"326","severity":1,"message":"344","line":269,"column":23,"nodeType":"328","messageId":"329","endLine":269,"endColumn":28},{"ruleId":"321","severity":1,"message":"345","line":1164,"column":69,"nodeType":"323","endLine":1164,"endColumn":172},{"ruleId":"321","severity":1,"message":"345","line":1306,"column":41,"nodeType":"323","endLine":1306,"endColumn":120},{"ruleId":"321","severity":1,"message":"345","line":1327,"column":61,"nodeType":"323","endLine":1327,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":1427,"column":41,"nodeType":"323","endLine":1427,"endColumn":121},{"ruleId":"321","severity":1,"message":"345","line":1447,"column":65,"nodeType":"323","endLine":1447,"endColumn":166},{"ruleId":"321","severity":1,"message":"345","line":1561,"column":41,"nodeType":"323","endLine":1561,"endColumn":118},{"ruleId":"330","severity":1,"message":"331","line":19,"column":8,"nodeType":"332","endLine":19,"endColumn":10,"suggestions":"346"},{"ruleId":"324","severity":1,"message":"325","line":55,"column":25,"nodeType":"323","endLine":55,"endColumn":125},{"ruleId":"335","severity":1,"message":"336","line":70,"column":23,"nodeType":"323","endLine":70,"endColumn":138},{"ruleId":"335","severity":1,"message":"336","line":172,"column":25,"nodeType":"323","endLine":172,"endColumn":116},{"ruleId":"335","severity":1,"message":"336","line":177,"column":25,"nodeType":"323","endLine":177,"endColumn":118},{"ruleId":"321","severity":1,"message":"322","line":246,"column":25,"nodeType":"323","endLine":246,"endColumn":37},{"ruleId":"321","severity":1,"message":"322","line":250,"column":25,"nodeType":"323","endLine":250,"endColumn":37},{"ruleId":"326","severity":1,"message":"347","line":8,"column":8,"nodeType":"328","messageId":"329","endLine":8,"endColumn":26},{"ruleId":"326","severity":1,"message":"348","line":11,"column":8,"nodeType":"328","messageId":"329","endLine":11,"endColumn":12},{"ruleId":"326","severity":1,"message":"349","line":12,"column":16,"nodeType":"328","messageId":"329","endLine":12,"endColumn":19},{"ruleId":"326","severity":1,"message":"350","line":12,"column":20,"nodeType":"328","messageId":"329","endLine":12,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":191,"column":83,"nodeType":"323","endLine":191,"endColumn":217},{"ruleId":"321","severity":1,"message":"322","line":228,"column":125,"nodeType":"323","endLine":228,"endColumn":208},{"ruleId":"321","severity":1,"message":"322","line":231,"column":32,"nodeType":"323","endLine":231,"endColumn":117},{"ruleId":"351","severity":1,"message":"352","line":291,"column":158,"nodeType":"323","endLine":291,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":328,"column":125,"nodeType":"323","endLine":328,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":331,"column":125,"nodeType":"323","endLine":331,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":392,"column":158,"nodeType":"323","endLine":392,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":429,"column":125,"nodeType":"323","endLine":429,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":432,"column":125,"nodeType":"323","endLine":432,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":492,"column":158,"nodeType":"323","endLine":492,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":529,"column":125,"nodeType":"323","endLine":529,"endColumn":206},{"ruleId":"321","severity":1,"message":"345","line":532,"column":125,"nodeType":"323","endLine":532,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":592,"column":158,"nodeType":"323","endLine":592,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":629,"column":125,"nodeType":"323","endLine":629,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":632,"column":125,"nodeType":"323","endLine":632,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":692,"column":158,"nodeType":"323","endLine":692,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":729,"column":125,"nodeType":"323","endLine":729,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":732,"column":125,"nodeType":"323","endLine":732,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":848,"column":158,"nodeType":"323","endLine":848,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":885,"column":125,"nodeType":"323","endLine":885,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":888,"column":125,"nodeType":"323","endLine":888,"endColumn":202},{"ruleId":"326","severity":1,"message":"353","line":4,"column":8,"nodeType":"328","messageId":"329","endLine":4,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":82,"column":39,"nodeType":"323","endLine":82,"endColumn":51},{"ruleId":"321","severity":1,"message":"322","line":91,"column":39,"nodeType":"323","endLine":91,"endColumn":51},{"ruleId":"321","severity":1,"message":"322","line":100,"column":39,"nodeType":"323","endLine":100,"endColumn":51},{"ruleId":"321","severity":1,"message":"322","line":109,"column":39,"nodeType":"323","endLine":109,"endColumn":51},{"ruleId":"321","severity":1,"message":"322","line":118,"column":39,"nodeType":"323","endLine":118,"endColumn":51},{"ruleId":"326","severity":1,"message":"342","line":1,"column":27,"nodeType":"328","messageId":"329","endLine":1,"endColumn":36},{"ruleId":"326","severity":1,"message":"337","line":1,"column":38,"nodeType":"328","messageId":"329","endLine":1,"endColumn":46},{"ruleId":"326","severity":1,"message":"354","line":3,"column":22,"nodeType":"328","messageId":"329","endLine":3,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":147,"column":64,"nodeType":"323","endLine":147,"endColumn":76},{"ruleId":"321","severity":1,"message":"322","line":147,"column":103,"nodeType":"323","endLine":147,"endColumn":115},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"326","severity":1,"message":"356","line":3,"column":8,"nodeType":"328","messageId":"329","endLine":3,"endColumn":14},{"ruleId":"357","severity":1,"message":"358","line":32,"column":54,"nodeType":"359","messageId":"360","endLine":32,"endColumn":56},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"357","severity":1,"message":"358","line":11,"column":39,"nodeType":"359","messageId":"360","endLine":11,"endColumn":41},{"ruleId":"326","severity":1,"message":"355","line":1,"column":17,"nodeType":"328","messageId":"329","endLine":1,"endColumn":25},{"ruleId":"326","severity":1,"message":"327","line":2,"column":10,"nodeType":"328","messageId":"329","endLine":2,"endColumn":16},{"ruleId":"357","severity":1,"message":"358","line":31,"column":48,"nodeType":"359","messageId":"360","endLine":31,"endColumn":50},{"ruleId":"326","severity":1,"message":"349","line":12,"column":16,"nodeType":"328","messageId":"329","endLine":12,"endColumn":19},{"ruleId":"326","severity":1,"message":"350","line":12,"column":20,"nodeType":"328","messageId":"329","endLine":12,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":463,"column":158,"nodeType":"323","endLine":463,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":500,"column":125,"nodeType":"323","endLine":500,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":503,"column":125,"nodeType":"323","endLine":503,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":563,"column":158,"nodeType":"323","endLine":563,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":600,"column":125,"nodeType":"323","endLine":600,"endColumn":206},{"ruleId":"321","severity":1,"message":"345","line":603,"column":125,"nodeType":"323","endLine":603,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":663,"column":158,"nodeType":"323","endLine":663,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":700,"column":125,"nodeType":"323","endLine":700,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":703,"column":125,"nodeType":"323","endLine":703,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":763,"column":158,"nodeType":"323","endLine":763,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":800,"column":125,"nodeType":"323","endLine":800,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":803,"column":125,"nodeType":"323","endLine":803,"endColumn":202},{"ruleId":"351","severity":1,"message":"352","line":919,"column":158,"nodeType":"323","endLine":919,"endColumn":292},{"ruleId":"321","severity":1,"message":"322","line":956,"column":125,"nodeType":"323","endLine":956,"endColumn":165},{"ruleId":"321","severity":1,"message":"345","line":959,"column":125,"nodeType":"323","endLine":959,"endColumn":202},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["363"],"'handleSelectLanguage' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'setState' is defined but never used.","'useSelector' is defined but never used.","'shallowEqual' is defined but never used.","'fetchData' is assigned a value but never used.","'selectFreelancer' is assigned a value but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'value' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["364"],"'TableListingLoader' is defined but never used.","'Tabs' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CATEGORY' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'Select' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"365","fix":"366"},{"desc":"365","fix":"367"},"Update the dependencies array to be: [fetchData]",{"range":"368","text":"369"},{"range":"370","text":"369"},[3874,3876],"[fetchData]",[563,565]]