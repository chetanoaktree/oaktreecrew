[{"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\index.js":"1","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\rootReducer.js":"3","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\App.js":"4","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\authActions.js":"5","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\utils\\setAuthorizationToken.js":"6","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\env.js":"7","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\auth.js":"8","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\applicationReducer.js":"9","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\settingReducer.js":"10","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\types.js":"11","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\applicationActions.js":"12","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Header\\Header.js":"13","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Footer\\Footer.js":"14","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Password\\Confirm.js":"15","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Login\\LoginForm.js":"16","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\NoRoute\\NoRoute.js":"17","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\EditFreelancer.js":"18","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\FreelancerSelect.js":"19","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\AddFreelancer.js":"20","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Client\\FreelancerDetail.js":"21","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Freelancer.js":"22","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\Dashboard.js":"23","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\ClientSignup.js":"24","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\hrActions.js":"25","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\category.js":"26","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\skills.js":"27","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\languages.js":"28","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditAboutFreelancer.js":"29","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditEducationFreelancer.js":"30","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditUserFreelancer.js":"31","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditContactFreelancer.js":"32","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSocialFreelancer.js":"33","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditProjectFreelancer.js":"34","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditExperienceFreelancer.js":"35","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSkillFreelancer.js":"36","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditOverviewFreelancer.js":"37","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Loader\\Skelton.js":"38","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\timezones.js":"39","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Leads.js":"40","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\degree.js":"41","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Admin\\Users.js":"42","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Admin\\SaveUser.js":"43","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\interviewerActions.js":"44","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Profile\\Profile.js":"45"},{"size":2637,"mtime":1611124572487,"results":"46","hashOfConfig":"47"},{"size":375,"mtime":1611124572487,"results":"48","hashOfConfig":"47"},{"size":323,"mtime":1611124572487,"results":"49","hashOfConfig":"47"},{"size":6320,"mtime":1611325083947,"results":"50","hashOfConfig":"47"},{"size":11738,"mtime":1611325247598,"results":"51","hashOfConfig":"47"},{"size":399,"mtime":1611124572487,"results":"52","hashOfConfig":"47"},{"size":132,"mtime":1611326563274,"results":"53","hashOfConfig":"47"},{"size":1022,"mtime":1611124572487,"results":"54","hashOfConfig":"47"},{"size":498,"mtime":1611124572487,"results":"55","hashOfConfig":"47"},{"size":208,"mtime":1611124572487,"results":"56","hashOfConfig":"47"},{"size":946,"mtime":1611124572387,"results":"57","hashOfConfig":"47"},{"size":173,"mtime":1611124572387,"results":"58","hashOfConfig":"47"},{"size":8043,"mtime":1611324958903,"results":"59","hashOfConfig":"47"},{"size":6866,"mtime":1611124572456,"results":"60","hashOfConfig":"47"},{"size":7088,"mtime":1611124572472,"results":"61","hashOfConfig":"47"},{"size":9012,"mtime":1611322585712,"results":"62","hashOfConfig":"47"},{"size":755,"mtime":1611124572456,"results":"63","hashOfConfig":"47"},{"size":40845,"mtime":1611231411558,"results":"64","hashOfConfig":"47"},{"size":7244,"mtime":1611309673637,"results":"65","hashOfConfig":"47"},{"size":93999,"mtime":1611299610835,"results":"66","hashOfConfig":"47"},{"size":11986,"mtime":1611231411557,"results":"67","hashOfConfig":"47"},{"size":64685,"mtime":1611324534337,"results":"68","hashOfConfig":"47"},{"size":8358,"mtime":1611309673636,"results":"69","hashOfConfig":"47"},{"size":6224,"mtime":1611231411556,"results":"70","hashOfConfig":"47"},{"size":6265,"mtime":1611323985902,"results":"71","hashOfConfig":"47"},{"size":411,"mtime":1611124572456,"results":"72","hashOfConfig":"47"},{"size":8629,"mtime":1611141617832,"results":"73","hashOfConfig":"47"},{"size":4227,"mtime":1611124572472,"results":"74","hashOfConfig":"47"},{"size":1400,"mtime":1611145546629,"results":"75","hashOfConfig":"47"},{"size":8166,"mtime":1611145556909,"results":"76","hashOfConfig":"47"},{"size":3407,"mtime":1611231411557,"results":"77","hashOfConfig":"47"},{"size":2378,"mtime":1611231411557,"results":"78","hashOfConfig":"47"},{"size":2032,"mtime":1611231411557,"results":"79","hashOfConfig":"47"},{"size":6578,"mtime":1611145605625,"results":"80","hashOfConfig":"47"},{"size":6718,"mtime":1611145562667,"results":"81","hashOfConfig":"47"},{"size":1512,"mtime":1611145611586,"results":"82","hashOfConfig":"47"},{"size":8117,"mtime":1611145583541,"results":"83","hashOfConfig":"47"},{"size":638,"mtime":1611309673634,"results":"84","hashOfConfig":"47"},{"size":10629,"mtime":1611125962245,"results":"85","hashOfConfig":"47"},{"size":92555,"mtime":1611322585711,"results":"86","hashOfConfig":"47"},{"size":915,"mtime":1611144684873,"results":"87","hashOfConfig":"47"},{"size":29156,"mtime":1611322585709,"results":"88","hashOfConfig":"47"},{"size":88764,"mtime":1611231411557,"results":"89","hashOfConfig":"47"},{"size":3490,"mtime":1611323867407,"results":"90","hashOfConfig":"47"},{"size":20340,"mtime":1611325828837,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"16z2p90",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\index.js",[],["197","198"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\rootReducer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\App.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\authActions.js",["199","200","201"],"import axios from 'axios';\r\nimport jwtdecode from 'jwt-decode';\r\nimport { SET_CURRENT_USER, SET_USER_DATA, USER_FETCH_DATA_SUCCESS, SAVE_USER } from './types';\r\nimport setAuthorizationToken from '../utils/setAuthorizationToken';\r\nimport { applicationIsLoading } from './applicationActions';\r\nimport {REACT_API_URL} from '../constants/env.js'\r\n// import Cookies from 'universal-cookie';\r\n// const cookies = new Cookies();\r\n\r\nexport function setCurrentUser(user) {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    user: user\r\n  }\r\n}\r\n\r\nexport function setUserData(user) {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    user\r\n  }\r\n}\r\n\r\nexport function userFetchDataSuccess(user) {\r\n  return {\r\n    type: USER_FETCH_DATA_SUCCESS,\r\n    user\r\n  }\r\n}\r\n\r\nexport function saveHunterAction(user) {\r\n  return {\r\n    type: SAVE_USER,\r\n    user\r\n  }\r\n}\r\n\r\nexport function setAuthToken(token) {\r\n  return dispatch => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessTokenDate');\r\n    localStorage.setItem('accessToken', token);\r\n    localStorage.setItem('accessTokenDate', (new Date()).getTime() );\r\n    // cookies.set('lead_tn', token, { path: '/' });\r\n    \r\n    setAuthorizationToken(token);\r\n    dispatch(setCurrentUser(token));\r\n  };\r\n}\r\n\r\nexport function resetPassword(data) {\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true)) \r\n    return axios.post(REACT_API_URL + `/users/password`, data)\r\n    .then(res => {\r\n      dispatch(applicationIsLoading(false));\r\n      return res\r\n    }).catch((err) => {\r\n      dispatch(applicationIsLoading(false));\r\n      return err.response\r\n    });\r\n  }\r\n}\r\n\r\nexport function updateSalesforceCode(code) {\r\n  return dispatch => axios.post(REACT_API_URL + `/users/salesforce_integration`, {code})\r\n    .then(res => {\r\n      return res\r\n    }).catch((err) => {\r\n      return err.response\r\n    });\r\n}\r\n\r\nexport function updatePassword(data, id) {\r\n  return dispatch => axios.put(REACT_API_URL + `/users/password?uuid=${id}`, data)\r\n    .then(res => {\r\n      return res\r\n    }).catch((err) => {\r\n      return err.response\r\n    });\r\n}\r\n\r\nexport function googleLogin(google_token) {\r\n    return dispatch => {\r\n      dispatch(applicationIsLoading(true))\r\n      return axios.post(`${REACT_API_URL}/omniauth/sign_up`, {\"omniauth\" : google_token})\r\n        .then(res => {\r\n          dispatch(applicationIsLoading(false));\r\n          \r\n          if (res.data.status === 200) { \r\n            \r\n            const token = res.data.user.token;\r\n            localStorage.removeItem('accessToken');\r\n            localStorage.removeItem('accessTokenDate');\r\n            localStorage.removeItem('userDetail');\r\n            localStorage.removeItem('firstName');\r\n            localStorage.removeItem('role');\r\n\r\n            localStorage.setItem('accessToken', token);\r\n            localStorage.setItem('accessTokenDate', (new Date()).getTime());\r\n\r\n            localStorage.setItem('userDetail', JSON.stringify(res.data.user));\r\n            localStorage.setItem('firstName', res.data.user.firstname);\r\n            localStorage.setItem('role', res.data.user.current_role);\r\n            //cookie.set('accessToken', token);\r\n            // cookies.set('lead_tn', token, { path: '/' });\r\n        \r\n            dispatch(setCurrentUser(jwtdecode(token)));\r\n            setAuthorizationToken(token);\r\n            \r\n            return res;\r\n          }else{\r\n            return res;  \r\n          }\r\n          \r\n        });\r\n    }\r\n}\r\n\r\nexport function login(loginData) {\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + '/users/sign_in', loginData)\r\n      .then(res => {\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.data.status === 200) { \r\n          const token = res.data.data.token;\r\n          // console.log('res.data',res.data.data)\r\n          localStorage.removeItem('accessToken');\r\n          localStorage.removeItem('accessTokenDate');\r\n          localStorage.removeItem('userDetail');\r\n          localStorage.removeItem('Name');\r\n          localStorage.removeItem('image');\r\n          localStorage.removeItem('role');\r\n          localStorage.removeItem('uuid');\r\n\r\n          localStorage.setItem('accessToken', token);\r\n          localStorage.setItem('accessTokenDate', (new Date()).getTime());\r\n\r\n          localStorage.setItem('userDetail', JSON.stringify(res.data.data.user));\r\n          localStorage.setItem('Name', res.data.data.user.first_name +\" \"+ res.data.data.user.last_name);\r\n          localStorage.setItem('image', res.data.data.user.user_image);\r\n          localStorage.setItem('role', res.data.data.user.current_role);\r\n          localStorage.setItem('uuid', res.data.data.user.uuid);\r\n          \r\n          dispatch(setCurrentUser(jwtdecode(token)));\r\n          setAuthorizationToken(token);\r\n          \r\n          return res.data;\r\n        }else{\r\n          return res.data;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function getConfirmation(url) {\r\n  return (dispatch) => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios({\r\n      method: \"get\",\r\n      url: url\r\n    })\r\n    .then((response) => {\r\n        if((response.status !== 200) || (response.data.status === 404)) {\r\n          throw Error(response.statusText);\r\n          return [];\r\n        } else {\r\n          return response.data\r\n        }\r\n      }\r\n    )\r\n    .then(user => {\r\n      dispatch(applicationIsLoading(false));\r\n      return user\r\n    })\r\n    .catch((error) => {\r\n      dispatch(applicationIsLoading(false));\r\n      console.log(error)\r\n      return error\r\n    })\r\n  }\r\n}\r\n\r\nexport function authorizeToken(data) {\r\n  return dispatch => axios.get(REACT_API_URL + `/users/password/edit?reset_password_token=${data}`)\r\n    .then(res => {\r\n      return res\r\n    }).catch((err) => {\r\n      return err.response\r\n    });\r\n}\r\n\r\nexport function users(uuid) {\r\n  return (dispatch) => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios({\r\n      method: \"get\",\r\n      url: REACT_API_URL + `/users/` + uuid\r\n    })\r\n    .then((response) => {\r\n        if((response.status !== 200) || (response.data.status === 404)) {\r\n          throw Error(response.statusText);\r\n          return [];\r\n        } else {\r\n          return response.data\r\n        }\r\n      }\r\n    )\r\n    .then(user => {\r\n      dispatch(applicationIsLoading(false));\r\n      dispatch(userFetchDataSuccess(user));\r\n      return user\r\n    })\r\n    .catch((error) => {\r\n      dispatch(applicationIsLoading(false));\r\n      console.log(error)\r\n      return error\r\n    })\r\n  }\r\n}\r\n\r\nexport function saveHunter(data) {\r\n  let dataSend = {user: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.put(REACT_API_URL + `/users/${data.uuid}`, dataSend)\r\n      .then(res => {\r\n        dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\n\r\nexport function set_session(res) {\r\n  return dispatch => {\r\n    const token = res.data.user.token;\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessTokenDate');\r\n    localStorage.removeItem('userDetail');\r\n    localStorage.removeItem('firstName');\r\n    localStorage.removeItem('PlanId');\r\n    localStorage.removeItem('PlanName');\r\n\r\n    localStorage.setItem('accessToken', token);\r\n    localStorage.setItem('accessTokenDate', (new Date()).getTime());\r\n\r\n    localStorage.setItem('userDetail', JSON.stringify(res.data.user));\r\n    localStorage.setItem('firstName', res.data.user.firstname);\r\n    localStorage.setItem('PlanId', res.data.user.plan_id);\r\n    localStorage.setItem('PlanName', res.data.user.plan.name);\r\n\r\n    // cookies.set('lead_tn', token, { path: '/' });\r\n    //cookie.set('accessToken', token);\r\n    dispatch(setCurrentUser(jwtdecode(token)));\r\n    setAuthorizationToken(token);\r\n\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessTokenDate');\r\n    localStorage.removeItem('linkedin_cookie')\r\n    localStorage.removeItem('userDetail');\r\n    localStorage.removeItem('firstName');\r\n    localStorage.removeItem('PlanId');\r\n    localStorage.removeItem('PlanName');\r\n    // cookies.remove('lead_tn');\r\n\r\n    setAuthorizationToken(false);\r\n    dispatch(setCurrentUser({}));\r\n\r\n  };\r\n}\r\n\r\n\r\nexport function searchEmail(data) {\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/find_email`, data)\r\n      .then(res => {\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function inviteUser(data) {\r\n  let dataSend = {emails: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/invitations`, dataSend)\r\n      .then(res => {\r\n        // dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function getPlanSuccess(plans) {\r\n  return {\r\n    type: \"PLAN_FETCH_DATA_SUCCESS\",\r\n    plans\r\n  }\r\n}\r\n\r\nexport function getPlans(url) {\r\n  return (dispatch) => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios({\r\n      method: \"get\",\r\n      url\r\n    })\r\n    .then((response) => {\r\n      dispatch(applicationIsLoading(false));\r\n        if((response.status !== 200) || (response.data.status === 404)) {\r\n          throw Error(response.statusText);\r\n          return [];\r\n        } else {\r\n          return response.data\r\n        }\r\n      }\r\n    )\r\n    .then(plans => {\r\n      dispatch(getPlanSuccess(plans));\r\n      return plans\r\n    })\r\n    .catch((error) => {\r\n      dispatch(applicationIsLoading(false));\r\n      console.log(error)\r\n      return error\r\n    })\r\n  }\r\n}\r\n\r\nexport function paymentSent(data) {\r\n  // let dataSend = {emails: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/payment_notifications`, data)\r\n      .then(res => {\r\n        // dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n            localStorage.setItem('PlanId', res.data.plan.id);\r\n            localStorage.setItem('PlanName', res.data.plan.name);\r\n\r\n            var userDetail = JSON.parse(localStorage.userDetail)\r\n            userDetail.plan_id = res.data.plan.id\r\n            userDetail.plan = res.data.plan\r\n\r\n            localStorage.setItem('userDetail', JSON.stringify(userDetail));\r\n\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}\r\n\r\nexport function subcribtion(data) {\r\n  let dataSend = {email: data}\r\n  return dispatch => {\r\n    dispatch(applicationIsLoading(true));\r\n    return axios.post(REACT_API_URL + `/add_subscriber`, dataSend)\r\n      .then(res => {\r\n        // dispatch(saveHunterAction(res))\r\n        dispatch(applicationIsLoading(false));\r\n        if (res.status === 200) {\r\n          return res;\r\n        }\r\n      }).catch((err) => {\r\n        dispatch(applicationIsLoading(false));\r\n        return err.response\r\n      });\r\n  } \r\n}","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\utils\\setAuthorizationToken.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\env.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\auth.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\applicationReducer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\reducers\\settingReducer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\types.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\applicationActions.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Header\\Header.js",["202","203","204"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Footer\\Footer.js",["205","206","207","208","209","210","211","212","213","214","215","216"],"import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// import { Button, Modal } from 'react-bootstrap';\r\nimport { subcribtion } from '../../actions/authActions';\r\nimport {NotificationManager} from 'react-notifications';\r\nimport logo from \"../../assets/images/logo.png\";\r\n\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props, context) {\r\n        super(props);\r\n        this.state = {\r\n          show: false,\r\n          email: '',\r\n          error: \"\"\r\n        }\r\n    }\r\n    fieldValChange = (e) => {\r\n        this.setState({email: e.target.value})\r\n    } \r\n\r\n    handleClose = () => {\r\n        this.setState({show: false})\r\n    }\r\n\r\n    subcribe = () => {\r\n        if(this.state.email){\r\n            this.props.subcribtion(this.state.email)\r\n            .then((res) => {\r\n              if(res.data.status === 200) {\r\n                NotificationManager.success(res.data.message, 'Success');  \r\n                this.setState({show: false})\r\n                // this.props.history.push('/campaign')\r\n              } else {\r\n                NotificationManager.error(res.data.message, 'Error');  \r\n                this.setState({\r\n                  error: \"something went wrong.\"\r\n                })\r\n              }\r\n            })\r\n\r\n        }else{\r\n            NotificationManager.error(\"Please enter valid email address\", 'Error');  \r\n        }\r\n    }\r\n    topScroll = () =>{\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n  render() {\r\n    const { authenticated, location } = this.props;\r\n    if((!authenticated) && location.pathname !== '/')\r\n        return null\r\n    return (\r\n      <React.Fragment>\r\n        <footer className=\"footer-area pt-100 pb-70\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-6\">\r\n                        <div className=\"single-footer-widget single-bg\">\r\n                            <a href=\"#\" className=\"logo\">\r\n                                <img src={logo} alt=\"Image\" />\r\n                            </a>\r\n\r\n                            <p>OakTreeCrew is a software development firm known for developing business solutions for small to large scale businesses. Headquartered in India, four enthusiastic and young minds have started it in 2016 from Indore. We are serving clients globally</p>\r\n\r\n                            <ul className=\"social-icon\">\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-facebook\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-instagram\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-linkedin-square\"></i>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <i className=\"bx bxl-twitter\"></i>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-md-6\">\r\n                        <div className=\"single-footer-widget\">\r\n                            <h3>Contact</h3>\r\n\r\n                            <ul className=\"address\">\r\n                                <li>\r\n                                    <i className=\"bx bx-phone-call\"></i>\r\n                                    <span>Phone:</span>\r\n                                    <a href=\"tel:+1-(514)-7939-357\">+91 0731 499 1873</a>\r\n                                </li>\r\n                                <li>\r\n                                    <i className=\"bx bx-envelope\"></i>\r\n                                    <span>Email:</span>\r\n                                    <a href=\"mailto:hello@oaktreecrew.com\">info@oaktreescrew.com</a>\r\n                                </li>\r\n                                <li className=\"location\">\r\n                                    <i className=\"bx bx-location-plus\"></i>\r\n                                    <span>Address:</span>\r\n                                    Shekhar central, 8th, floor, 802, Palasia Square, Manorama Ganj, Indore, Madhya Pradesh 452001\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-md-6\">\r\n                        <div className=\"single-footer-widget\">\r\n                            <h3>Helpful Resources</h3>\r\n\r\n                            <ul className=\"import-link\">\r\n                                <li>\r\n                                    <a href=\"#\">FAQ's</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Contact Us</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Site Map</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Terms of Use</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Privacy Centre</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Blog</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n        <div className=\"copy-right-area\">\r\n            <div className=\"container\">\r\n                <p>\r\n                    © 2020 Oak Tree Crew. All Rights Reserved.\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div className=\"go-top active\" onClick={() => this.topScroll()}>\r\n            <i className=\"bx bx-chevrons-up\"></i>\r\n            <i className=\"bx bx-chevrons-up\"></i>\r\n        </div>\r\n      </React.Fragment>  \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log('state',state)\r\n  return {\r\n    isLoading: state.applicationIsLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    subcribtion: (email) => dispatch(subcribtion(email))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Password\\Confirm.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Login\\LoginForm.js",["217"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\NoRoute\\NoRoute.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\EditFreelancer.js",["218","219","220","221","222","223","224","225","226","227"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport {NotificationManager} from 'react-notifications';\r\nimport { getFreelancer, updateFreelancer, removeFromFreelancer } from '../../actions/hrActions';\r\nimport _ from 'lodash';\r\nimport avatar from \"../../assets/images/avatar-img.jpg\";\r\nimport EditUserFreelancer from \"../EditForm/EditUserFreelancer\"\r\nimport EditAboutFreelancer from \"../EditForm/EditAboutFreelancer\"\r\nimport EditContactFreelancer from \"../EditForm/EditContactFreelancer\"\r\nimport EditSocialFreelancer from \"../EditForm/EditSocialFreelancer\"\r\nimport EditEducationFreelancer from \"../EditForm/EditEducationFreelancer\"\r\nimport EditExperienceFreelancer from \"../EditForm/EditExperienceFreelancer\"\r\nimport EditProjectFreelancer from \"../EditForm/EditProjectFreelancer\"\r\nimport EditOverviewFreelancer from \"../EditForm/EditOverviewFreelancer\"\r\nimport EditSkillFreelancer from \"../EditForm/EditSkillFreelancer\"\r\n\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\n\r\n\r\nfunction EditFreelancer(props) {\r\n    \r\n    const [model, setModel] = useState({\r\n      userShow: false,\r\n      aboutShow: false,\r\n      contactShow: false,\r\n      socialShow: false,\r\n      overviewShow: false,\r\n      educationShow: false,\r\n      experienceShow: false,\r\n      projectShow: false,\r\n      skillShow: false,\r\n    })\r\n\r\n    const handleShow = (name) => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            [name] : true\r\n        }))\r\n    }\r\n\r\n    const handleClose = (name) => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            [name] : false\r\n        }))\r\n    }\r\n\r\n    const [state , setState] = useState({\r\n        detail: '',\r\n        avatar: \"\",\r\n        email:\"\",\r\n        first_name: \"\",\r\n        middle_name: \"\",\r\n        last_name: \"\",\r\n        phone: \"\",\r\n        dob: \"\",\r\n        nationality: \"\",\r\n        gender: \"\",\r\n        martial_status: \"\",\r\n        address: \"\",\r\n        languages: \"\",\r\n        total_experience: \"\",\r\n        role_ids:[2],\r\n        skip_password_validation: true,\r\n        country: '',\r\n        state: '',\r\n        city: '',\r\n        pincode: '',\r\n        additional_information_attributes: {\r\n            title: \"\",\r\n            about_me:\"\", \r\n            presented_salary:\"\",\r\n            expected_salary:\"\", \r\n            category:\"\",\r\n            skills: '',\r\n            job_nature:\"\", \r\n            job_level: \"\",\r\n            attachment: \"\",\r\n            github_link: \"\",\r\n            linkedin_link: \"\",\r\n            skype_id: \"\",\r\n        },\r\n        education_informations_attributes:[],\r\n        experience_informations_attributes: [],\r\n        project_informations_attributes:[],\r\n        stateArg: [],\r\n        cityArg: []\r\n    })\r\n\r\n    const [education, setEducation] = useState(\r\n        {\r\n            education_level: \"\", \r\n            degree_title: \"\", \r\n            group: \"\", \r\n            institute_name: \"\", \r\n            result: \"\", \r\n            marks: \"\",\r\n            year_of_passing: \"\", \r\n            duration: \"\",\r\n            description: \"\",\r\n            new: true\r\n        }\r\n    )\r\n\r\n    const [experience, setExperience] = useState(\r\n        {\r\n            company_name:\"\", \r\n            designation: \"\", \r\n            company_location: \"\",\r\n            employment_period: \"\",\r\n            description: \"\",\r\n            new: true\r\n        }\r\n    )\r\n\r\n    const [project, setProject] = useState(\r\n        {\r\n            title: \"\", \r\n            start_date: \"2021-01-01\", \r\n            end_date: \"2021-01-01\", \r\n            technologies: \"\", \r\n            summary: \"\",\r\n            project_link: \"\",\r\n            new: true\r\n        }\r\n    )\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const { id } = useParams();\r\n    // console.log(\"id\",id)\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        if(id){\r\n          // Update the document title using the browser API\r\n          dispatch(getFreelancer(id)).then((res)=> {\r\n              if(res && res.status === 200) {\r\n                // console.log(\"res\",res.data)\r\n                let data = res.data.user    \r\n                setState(prevState => ({\r\n                    detail: res.data.user,\r\n                    avatar: \"\",\r\n                    email: data.email,\r\n                    first_name: data.first_name,\r\n                    middle_name: data.middle_name,\r\n                    last_name: data.last_name,\r\n                    phone: data.phone,\r\n                    dob: data.dob,\r\n                    nationality: data.nationality,\r\n                    gender: data.gender,\r\n                    martial_status: data.martial_status,\r\n                    address: data.address,\r\n                    languages: data.languages,\r\n                    total_experience: data.total_experience,\r\n                    country: data.country,\r\n                    state: data.state,\r\n                    city: data.city,\r\n                    pincode: data.pincode,\r\n                    additional_information_attributes: {\r\n                        title: data.additional_information.title,\r\n                        about_me: data.additional_information.about_me, \r\n                        presented_salary: data.additional_information.presented_salary,\r\n                        expected_salary: data.additional_information.expected_salary, \r\n                        category: data.additional_information.category,\r\n                        skills: data.additional_information.skills,\r\n                        job_nature: data.additional_information.job_nature, \r\n                        job_level: data.additional_information.job_level,\r\n                        attachment: data.additional_information.attachment,\r\n                        github_link: data.additional_information.github_link,\r\n                        linkedin_link: data.additional_information.linkedin_link,\r\n                        skype_id: data.additional_information.skype_id,\r\n                    },\r\n                    experience_informations_attributes: data.experience_informations,\r\n                    education_informations_attributes: data.education_informations,\r\n                    project_informations_attributes: data.project_informations\r\n                }))\r\n\r\n                // setEducation(data.education_informations)\r\n                // setExperience(data.experience_informations)\r\n                // setProject(data.project_informations)\r\n              }\r\n          })\r\n        }\r\n    }\r\n\r\n    const handleUserUpdate = (e) => {\r\n      e.preventDefault();\r\n        let data = { \r\n                    email: state.email,\r\n                    first_name: state.first_name,\r\n                    last_name: state.last_name,\r\n                    middle_name: state.middle_name,\r\n                    // skip_password_validation: true\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[title]]\",state.additional_information_attributes.title)\r\n\r\n        updateApi(form_data, id, 'userShow');\r\n    }\r\n    const handleAboutUpdate = () => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[about_me]]\",state.additional_information_attributes.about_me)\r\n\r\n        updateApi(form_data, id, 'aboutShow');\r\n    }\r\n    const handleSocialUpdate = () => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[github_link]]\",state.additional_information_attributes.github_link)\r\n        form_data.append(\"user[additional_information_attributes[linkedin_link]]\",state.additional_information_attributes.linkedin_link)\r\n\r\n        updateApi(form_data, id, 'socialShow');\r\n    }\r\n    const handleContactUpdate = (e) => {\r\n      e.preventDefault();\r\n        let data = { \r\n                    phone: state.phone,\r\n                    address: state.address,\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[skype_id]]\",state.additional_information_attributes.skype_id)\r\n\r\n        updateApi(form_data, id, 'contactShow');\r\n        \r\n    }\r\n    const handleOverViewUpdate = () => {\r\n        let data = { \r\n                    nationality: state.nationality,\r\n                    gender: state.gender,\r\n                    languages: state.languages,\r\n                    total_experience: state.total_experience,\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[expected_salary]]\",state.additional_information_attributes.expected_salary)\r\n        form_data.append(\"user[additional_information_attributes[category]]\",state.additional_information_attributes.category)\r\n        // form_data.append(\"user[additional_information_attributes[skills]]\",state.additional_information_attributes.skills)\r\n        form_data.append(\"user[additional_information_attributes[job_nature]]\",state.additional_information_attributes.job_nature)\r\n        // form_data.append(\"user[additional_information_attributes[job_level]]\",state.additional_information_attributes.job_level)\r\n        \r\n\r\n        updateApi(form_data, id, 'overviewShow');\r\n        \r\n    }\r\n    const handleSkillUpdate = () => {\r\n        var form_data = new FormData();        \r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[skills]]\",state.additional_information_attributes.skills)\r\n        \r\n\r\n        updateApi(form_data, id, 'skillShow');\r\n        \r\n    }\r\n    \r\n    const updateApi = (form_data, id, modelName) => {\r\n        dispatch(updateFreelancer(form_data, id)).then((res)=> {\r\n            // console.log(\"res\",res)\r\n            if(res && res.data.status === 200) {\r\n               fetchData(); \r\n               NotificationManager.success(\"Successfully update\", 'Success');\r\n               handleClose(modelName);\r\n            }else{\r\n               NotificationManager.error(res.data.messages, 'Error');  \r\n            }\r\n        })\r\n    }\r\n    const handleChange = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        }))    \r\n    }\r\n\r\n    const handleAdditional = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSelectLanguage = (name, value) => {\r\n      console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            // [name] : value.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    const handleSelect = (name, value) => {\r\n      // console.log(name,\"----\",value)\r\n      if(value.length === 0){\r\n        return false\r\n      } \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        }))\r\n    }    \r\n\r\n    const handleSelectAdditional = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n      if(name === 'skills'){\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n      }else{\r\n\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value.value\r\n            }\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    const saveEducation = (add, row) => {\r\n        handleShow('educationShow')\r\n        if(!add){\r\n            setEducation(row)\r\n        }else{\r\n            setEducation({\r\n                education_level: \"\", \r\n                degree_title: \"\", \r\n                group: \"\", \r\n                institute_name: \"\", \r\n                result: \"\", \r\n                marks: \"\",\r\n                year_of_passing: \"\", \r\n                duration: \"\",\r\n                description: \"\",\r\n                new: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleEducation = (e) => {\r\n        const {name , value} = e.target   \r\n        setEducation(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        })) \r\n    }\r\n    const handleSelectEducation = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        setEducation(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        })) \r\n    }\r\n    const handleEducationSave = (add) => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(`user[education_informations_attributes[0][education_level]]`, education.education_level)\r\n        form_data.append(`user[education_informations_attributes[0][degree_title]]`, education.degree_title)\r\n        form_data.append(`user[education_informations_attributes[0][group]]`, education.group)\r\n        form_data.append(`user[education_informations_attributes[0][institute_name]]`, education.institute_name)\r\n        form_data.append(`user[education_informations_attributes[0][result]]`, education.result)\r\n        form_data.append(`user[education_informations_attributes[0][marks]]`, education.marks)\r\n        form_data.append(`user[education_informations_attributes[0][year_of_passing]]`, education.year_of_passing)\r\n        form_data.append(`user[education_informations_attributes[0][duration]]`, education.duration)\r\n        form_data.append(`user[education_informations_attributes[0][description]]`, education.description)\r\n\r\n        \r\n        if(add){\r\n            updateApi(form_data, id, 'educationShow');\r\n            // console.log(\"handleProjectSaveNew\",add)\r\n        }else{\r\n            form_data.append(`user[education_informations_attributes[0][id]]`, education.id)\r\n            updateApi(form_data, id, 'educationShow');\r\n            // console.log(\"handleProjectSaveold\")\r\n        }\r\n    }\r\n\r\n    const saveExperience = (add, row) => {\r\n        handleShow('experienceShow')\r\n        if(!add){\r\n            setExperience(row)\r\n        }else{\r\n            setExperience({\r\n                company_name:\"\", \r\n                designation: \"\", \r\n                company_location: \"\",\r\n                employment_period: \"\",\r\n                description: \"\",\r\n                new: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleExperience = (e) => {\r\n        const {name , value} = e.target   \r\n        setExperience(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        })) \r\n    }\r\n    const handleSelectExperience = (name, value) => {\r\n      // console.log(name,\"----\",value)\r\n        // const {name , value} = e.target   \r\n        setExperience(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        }))  \r\n    }\r\n    const handleExperienceSave = (add) => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(`user[experience_informations_attributes[0][company_name]]`, experience.company_name)\r\n        form_data.append(`user[experience_informations_attributes[0][designation]]`, experience.designation)\r\n        form_data.append(`user[experience_informations_attributes[0][company_location]]`, experience.company_location)\r\n        form_data.append(`user[experience_informations_attributes[0][employment_period_year]]`, experience.employment_period_year)\r\n        form_data.append(`user[experience_informations_attributes[0][employment_period_month]]`, experience.employment_period_month)\r\n        form_data.append(`user[experience_informations_attributes[0][description]]`, experience.description)\r\n        \r\n        if(add){\r\n            updateApi(form_data, id, 'experienceShow');\r\n            // console.log(\"handleProjectSaveNew\",add)\r\n        }else{\r\n            form_data.append(`user[experience_informations_attributes[0][id]]`, experience.id)\r\n            updateApi(form_data, id, 'experienceShow');\r\n            // console.log(\"handleProjectSaveold\")\r\n        }\r\n    }\r\n\r\n    const saveProject = (add, row) => {\r\n        handleShow('projectShow')\r\n        if(!add){\r\n            setProject(row)\r\n        }else{\r\n            setProject({\r\n                title: \"\", \r\n                start_date: \"2021-01-01\", \r\n                end_date: \"2021-01-01\", \r\n                technologies: \"\", \r\n                summary: \"\",\r\n                project_link: \"\",\r\n                new: true\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleProject = (e) => {\r\n        const {name , value} = e.target   \r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        })) \r\n    }\r\n    const handleSelectProject = (name, value) => {\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        }))\r\n    }\r\n\r\n    const handleProjectDateChange = (name, date) => {\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            [name] : date\r\n        }))\r\n    }\r\n    const handleProjectSave = (add) => {\r\n\r\n        var form_data = new FormData();\r\n        form_data.append(`user[project_informations_attributes[0][title]]`, project.title)\r\n        form_data.append(`user[project_informations_attributes[0][project_link]]`, project.project_link)\r\n        form_data.append(`user[project_informations_attributes[0][summary]]`, project.summary)\r\n        form_data.append(`user[project_informations_attributes[0][start_date]]`, project.start_date)\r\n        form_data.append(`user[project_informations_attributes[0][end_date]]`, project.end_date)\r\n        form_data.append(`user[project_informations_attributes[0][technologies]]`, project.technologies)\r\n        if(add){\r\n            updateApi(form_data, id, 'projectShow');\r\n            // console.log(\"handleProjectSaveNew\",add)\r\n        }else{\r\n            form_data.append(`user[project_informations_attributes[0][id]]`, project.id)\r\n            updateApi(form_data, id, 'projectShow');\r\n            // console.log(\"handleProjectSaveold\")\r\n        }\r\n    }\r\n\r\n    const removeEducation = (uuid) => {\r\n      let url = `/api/v1/users/${id}/education_informations/${uuid}`\r\n      dispatch(removeFromFreelancer(url)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            fetchData();\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            // fetchData(state.page, state.pageSize, '', '');\r\n          }\r\n      })\r\n    }\r\n\r\n    const removeExperience = (uuid) => {\r\n      let url = `/api/v1/users/${id}/experience_informations/${uuid}`\r\n      dispatch(removeFromFreelancer(url)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            fetchData();\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            // fetchData(state.page, state.pageSize, '', '');\r\n          }\r\n      })\r\n    }\r\n\r\n    const removeProject = (uuid) => {\r\n      let url = `/api/v1/users/${id}/project_informations/${uuid}`\r\n      dispatch(removeFromFreelancer(url)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            fetchData();\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            // fetchData(state.page, state.pageSize, '', '');\r\n          }\r\n      })\r\n    }\r\n\r\n    const onSelectSkill = (selectedList, selectedItem) => {\r\n        // console.log(selectedList, selectedItem)\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                skills : selectedList.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n    }\r\n    const onRemoveSkill = (selectedList, removedItem) => {\r\n        // console.log(selectedList, removedItem)\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                skills : selectedList.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n    }\r\n    const onSelectLanguage = (selectedList, selectedItem) => {\r\n        // console.log(selectedList, selectedItem)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            languages : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n    const onRemoveLanguage = (selectedList, removedItem) => {\r\n        // console.log(selectedList, removedItem)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            languages : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    const onSelectProject = (selectedList, selectedItem) => {\r\n        // console.log(selectedList, selectedItem)\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            technologies : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n    const onRemoveProject = (selectedList, removedItem) => {\r\n        // console.log(selectedList, removedItem)\r\n        setProject(prevState => ({\r\n            ...prevState,\r\n            technologies : selectedList.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    // console.log(\"detail\",state.additional_information_attributes.skills)\r\n    return(\r\n      <React.Fragment>\r\n        <div className=\"page-title-area\">\r\n          <div className=\"container\">\r\n            <div className=\"page-title-content\">\r\n              <h2>Edit Freelancer Details</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <EditUserFreelancer \r\n            show = {model.userShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleChange = {handleChange}\r\n            handleAdditional = {handleAdditional}\r\n            handleUserUpdate = {handleUserUpdate}\r\n        />\r\n\r\n        <EditAboutFreelancer \r\n            show = {model.aboutShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleAdditional = {handleAdditional}\r\n            handleAboutUpdate = {handleAboutUpdate}\r\n        />\r\n\r\n        <EditContactFreelancer \r\n            show = {model.contactShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleChange = {handleChange}\r\n            handleAdditional = {handleAdditional}\r\n            handleContactUpdate = {handleContactUpdate}\r\n        />\r\n\r\n        <EditSocialFreelancer \r\n            show = {model.socialShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleAdditional = {handleAdditional}\r\n            handleSocialUpdate = {handleSocialUpdate}\r\n        />\r\n\r\n        <EditOverviewFreelancer \r\n            show = {model.overviewShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            handleChange = {handleChange}\r\n            handleSelect = {handleSelect}\r\n            handleAdditional = {handleAdditional}\r\n            handleSelectAdditional = {handleSelectAdditional}\r\n            onSelectLanguage = {onSelectLanguage}\r\n            onRemoveLanguage = {onRemoveLanguage}\r\n            handleOverViewUpdate = {handleOverViewUpdate}\r\n        />\r\n\r\n        <EditEducationFreelancer \r\n            show = {model.educationShow}\r\n            state = {education}\r\n            handleClose = {handleClose}\r\n            handleEducation = {handleEducation}\r\n            handleSelectEducation = {handleSelectEducation}\r\n            handleEducationSave = {handleEducationSave}\r\n        />\r\n\r\n        <EditExperienceFreelancer \r\n            show = {model.experienceShow}\r\n            state = {experience}\r\n            handleClose = {handleClose}\r\n            handleExperience = {handleExperience}\r\n            handleSelectExperience = {handleSelectExperience}\r\n            handleExperienceSave = {handleExperienceSave}\r\n        />\r\n\r\n        <EditProjectFreelancer \r\n            show = {model.projectShow}\r\n            state = {project}\r\n            handleClose = {handleClose}\r\n            handleProject = {handleProject}\r\n            handleSelectProject = {handleSelectProject}\r\n            handleProjectDateChange = {handleProjectDateChange}\r\n            onSelectProject = {onSelectProject}\r\n            onRemoveProject = {onRemoveProject}\r\n            handleProjectSave = {handleProjectSave}\r\n        />\r\n\r\n        <EditSkillFreelancer \r\n            show = {model.skillShow}\r\n            state = {state}\r\n            handleClose = {handleClose}\r\n            onSelectSkill = {onSelectSkill}\r\n            onRemoveSkill = {onRemoveSkill}\r\n            handleSkillUpdate = {handleSkillUpdate}\r\n        />\r\n        <section className=\"candidates-details-area mt-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                  <div className=\"candidates-details-sidebar\">\r\n                    <div className=\"candidates-widget\">\r\n                        <div className=\"edit-profile-image-and-title\">\r\n                          {/* <div className=\"card\"> */}\r\n                            {/* <div className=\"card-header\"> */}\r\n                            <h3>&nbsp;<i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('userShow')}></i></h3>\r\n                              \r\n                            {/* </div>   */}\r\n                            <div className=\"overview\">\r\n                              <div className=\"row align-items-center\">\r\n                                <div className=\"col-lg-2\">\r\n                                  <div className=\"hot-jobs-img\">\r\n                                    <img src={state.user_image ? state.user_image : avatar} alt=\"Image\" />\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6\">\r\n                                  <div className=\"candidates-cv-content\">\r\n                                    <h4>{_.get(state.detail, 'first_name', [''])} { state.detail && state.detail.middle_name || \" \"}{_.get(state.detail, 'last_name', [''])}</h4>\r\n                                    <span className=\"sub-title\">{_.get(state.detail.additional_information, 'title', [''])}</span>\r\n                                    <ul>\r\n                                      <li><a href=\"mailto:#\">{_.get(state.detail, 'email', [''])}</a></li>\r\n                                    </ul>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-4\">\r\n                                  <a href={_.get(state.detail.additional_information, 'user_resume', ['#'])} target=\"_blank\" className=\"default-btn\">Download CV</a>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          {/* </div>   */}\r\n                        </div>\r\n                    </div>    \r\n                  </div>\r\n\r\n\r\n                  <div className=\"candidates-details-sidebar\">\r\n                    <div className=\"candidates-widget\">\r\n                        <h3>About Me <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('aboutShow')}></i></h3>\r\n                        <div className=\"overview\">\r\n                          <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                  </div>    \r\n\r\n\r\n                <div className=\"candidates-details-content candidates-details-content-edit-form\">\r\n                    {/* <h3>About Me <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('aboutShow')}></i></h3>\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                        <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\r\n                      </div>\r\n                    </div> */}\r\n                  \r\n                  <h3>Education <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveEducation(true, false)}></i></h3>\r\n                  {\r\n                    state.detail && state.detail.education_informations.length > 0 ? state.detail.education_informations.map((row,i) => {\r\n                    return (\r\n                      <div className=\"card mb-3\" key={i}>\r\n                        <div className=\"card-header\">\r\n                          <i className=\"bx bx-pencil\" onClick={() => saveEducation(false,row)}></i> <i className=\"bx bx-trash\" onClick={() => removeEducation(row.id)}></i>\r\n                        </div>\r\n\r\n\r\n\r\n                          <div className=\"card-body\">\r\n\r\n                            <ul key={i}>\r\n                              <li className=\"arts\"><i className=\"bx bxs-graduation\"></i> {row.education_level} in {row.degree_title}</li>\r\n                              <li className=\"university\"><i className=\"bx bxs-book\"></i> {row.group +' '+row.institute_name} ({row.year_of_passing})</li>\r\n                              <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                            </ul>\r\n                          </div>\r\n                      </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  }   \r\n                  <h3>Work Experience <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveExperience(true,false)}></i></h3>\r\n                  {state.detail && state.detail.experience_informations.length > 0 ? state.detail.experience_informations.map((row,i) => {\r\n                    return (\r\n                          <div className=\"card mb-3\" key={i}>\r\n                            <div className=\"card-header\">\r\n                              <i className=\"bx bx-pencil\" onClick={() => saveExperience(false,row)}></i> <i className=\"bx bx-trash\" onClick={() => removeExperience(row.id)}></i>\r\n                            </div>  \r\n                            <div className=\"card-body\">\r\n\r\n                                <ul key={i}>\r\n                                  <li className=\"arts\"><i className=\"bx bxs-user\"></i> {row.designation}</li>\r\n                                  <li className=\"university\"><i className=\"bx bxs-building\"></i> {row.company_name} ({row.employment_period_year > 0 && row.employment_period_year +\" year \"} { row.employment_period_month > 0 && row.employment_period_month+' month'}) in {row.company_location}</li>\r\n                                  <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                                </ul>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  <h3>Projects <i className=\"bx bx-plus add-more-record-icon\" onClick={() => saveProject(true, false)}></i></h3>\r\n                  {state.detail && state.detail.project_informations.length > 0 ? state.detail.project_informations.map((row,i) => {\r\n                    return (\r\n                            <div className=\"card mb-3\" key={i}>\r\n                              <div className=\"card-header\">\r\n                                <i className=\"bx bx-pencil\" onClick={() => saveProject(false, row)}></i> <i className=\"bx bx-trash\" onClick={() => removeProject(row.id)}></i>\r\n                              </div>\r\n                              <div className=\"card-body\">\r\n                                  <ul key={i}>\r\n                                    <li className=\"arts\"><i className=\"bx bxs-graduation\"></i> {row.title}</li>\r\n                                    <li className=\"university\"><i className=\"bx bxs-calendar\"></i> Period: {row.start_date} to {row.end_date} </li>\r\n                                    <li className=\"university\"><i className=\"bx bxs-tag\"></i> Skills: {row.technologies} </li>\r\n                                    <li className=\"summary\"><i className=\"bx bxs-notepad\"></i> {row.summary}</li>\r\n                                  </ul>\r\n                              </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  {/* <h3>Personal Skills <i className=\"bx bx-pencil edit-icon-btn\"></i></h3>\r\n                  <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                      <div className=\"all-skill-bar\">\r\n                        {\r\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\r\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\r\n                                  <h4 className=\"progress-title-holder\">\r\n                                    <span className=\"progress-title\">{skill}</span>\r\n                                    \r\n                                  </h4>\r\n                    \r\n                                  <div className=\"progress-content-outter\">\r\n                                    <div className=\"progress-content\" ></div>\r\n                                  </div>\r\n                              </div>)\r\n                            })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n         \r\n                  </div>  */}\r\n                </div>\r\n                \r\n                <div className=\"candidates-details-sidebar mt-4\">\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Personal Skills <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('skillShow')}></i></h3>\r\n                    <div className=\"overview\">\r\n                      <div className=\"all-skill-bar\">\r\n                        {\r\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\r\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\r\n                                  <h5 className=\"progress-title-holder\">\r\n                                    <span className=\"progress-title\">{skill}</span>\r\n                                    \r\n                                  </h5>\r\n                    \r\n                                  <div className=\"progress-content-outter\">\r\n                                    <div className=\"progress-content\" ></div>\r\n                                    <ProgressBar variant=\"success\" now={45} />\r\n                                  </div>\r\n                              </div>)\r\n                            })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>      \r\n\r\n\r\n\r\n\r\n\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"candidates-details-sidebar\">\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Social Profile <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('socialShow')}></i></h3>\r\n\r\n                    <ul className=\"social-icon\">\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'github_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-github\"></i>\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'linkedin_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-linkedin-square\"></i>\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Contact Information <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('contactShow')}></i></h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      \r\n                      {/* <li>\r\n                        Email\r\n                        <a href=\"mailto:#\"><span>: {_.get(state.detail, 'email', [''])}</span></a>\r\n                      </li> */}\r\n                      <li>\r\n                        Phone\r\n                        <a href={\"tel:+91\"+state.phone}><span>: {state.detail.phone}</span></a>\r\n                      </li>\r\n                      <li>\r\n                        Skype Id\r\n                        <a href={\"tel:+91\"+_.get(state.detail.additional_information, 'skype_id', [''])}><span>: {_.get(state.detail.additional_information, 'skype_id', [''])}</span></a>\r\n                      </li>\r\n                      <li>\r\n                        Location\r\n                        <span>: {state.detail.address}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Job Overview <i className=\"bx bx-pencil edit-icon-btn\" onClick={() => handleShow('overviewShow')}></i></h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      <li>\r\n                        Categories\r\n                        <span>: {_.get(state.detail.additional_information, 'category', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Nationality\r\n                        <span>: {state.nationality}</span>\r\n                      </li>\r\n                      <li>\r\n                        Job Type\r\n                        <span>: {_.get(state.detail.additional_information, 'job_nature', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Experience\r\n                        <span>: {state.total_experience} year(s)</span>\r\n                      </li>\r\n                      <li>\r\n                        Expected Salary\r\n                        <span>: {_.get(state.detail.additional_information, 'expected_salary', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Languages:\r\n                        <span>: {state.languages} </span>\r\n                      </li>\r\n                      <li>\r\n                        Gender\r\n                        <span>: {state.gender}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Download Resume <i className=\"bx bx-trash delete-icon-btn\"></i></h3>\r\n                    \r\n                    <ul className=\"overview download \">\r\n                      \r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">PDF Formate CV</a>\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">DOC Formate CV</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(EditFreelancer);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\FreelancerSelect.js",["228","229","230","231","232","233","234","235","236","237","238"],"import React, { useState, useEffect, setState } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport { fetchFreelancerByCategory } from '../../actions/hrActions';\r\nimport {CardListingLoader} from \"../../components/Loader/Skelton\"\r\nimport freelancer1 from \"../../assets/images/profile.png\";\r\n// import freelancer1 from \"../../assets/images/freelancer/freelancer-1.jpg\";\r\nimport freelancer2 from \"../../assets/images/freelancer/freelancer-2.jpg\";\r\nimport freelancer3 from \"../../assets/images/freelancer/freelancer-3.jpg\";\r\nimport freelancer4 from \"../../assets/images/freelancer/freelancer-4.jpg\";\r\nimport freelancer5 from \"../../assets/images/freelancer/freelancer-5.jpg\";\r\nimport freelancer6 from \"../../assets/images/freelancer/freelancer-6.jpg\";\r\nimport freelancer7 from \"../../assets/images/freelancer/freelancer-7.jpg\";\r\nimport freelancer8 from \"../../assets/images/freelancer/freelancer-8.jpg\";\r\n\r\n\r\n\r\nfunction FreelancerSelect(props) {\r\n  \r\n  const [state , setState] = useState({\r\n      users: [],\r\n      skills: \"\",\r\n      category: \"\",\r\n      freelancer_ids: []\r\n  })\r\n\r\n\r\n  // console.log(\"props\",props.location)  \r\n  const dispatch = useDispatch();\r\n    \r\n  var settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 4,\r\n    autoplay:true,\r\n    accessibility:true,\r\n    arrows:true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: false,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          dots: true,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n          dots: true,\r\n        }\r\n      }\r\n    ]    \r\n  };\r\n\r\n    useEffect(() => {\r\n      fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n      let data = {}\r\n      if(props.location.state){\r\n        data = {\r\n          categories: props.location.state.category,\r\n          skills: props.location.state.skills\r\n        } \r\n      }\r\n      // Update the document title using the browser API\r\n      dispatch(fetchFreelancerByCategory(data)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res.data)\r\n             setState(prevState => ({\r\n                ...prevState,\r\n                users: res.data\r\n            }))\r\n          }\r\n      })\r\n    }\r\n\r\n    const selectFreelancer = (item) => {\r\n        console.log(\"item\", item  )\r\n    }\r\n\r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n\r\n    return(\r\n        <section className=\"freelancer-area pt-100 pb-70\">\r\n          <div className=\"container\">\r\n            <div className=\"section-title\">\r\n              <span>Top Freelancer</span>\r\n              <h2>Hire Expert Freelancer</h2>\r\n            </div>\r\n\r\n\r\n            <Slider {...settings}>\r\n              {!loader &&  \r\n                      Array.from(Array(7), (e, i) => {\r\n                        return (<div className=\"single-freelancer\">\r\n                            <CardListingLoader />\r\n                          </div>)\r\n                    })\r\n              }\r\n              {state.users.map((row, i) => {\r\n                return (<Link to={\"/freelancer-details/\"+row.uuid} key={i}><div className=\"\">\r\n                        <div className=\"single-freelancer\">\r\n                          <img src={row.user_image ? row.user_image : freelancer1} alt=\"Image\" />\r\n                          <h3>{row.first_name +' '+row.last_name}</h3>\r\n                          <span className=\"profession\">{row.additional_information.category}</span>\r\n                        </div>\r\n                      </div></Link>)  \r\n              })}\r\n              {/*  \r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer1} alt=\"Image\" />\r\n                  <h3>James Hendrix</h3>\r\n                  <span className=\"profession\">ROR Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer2} alt=\"Image\" />\r\n                  <h3>Jean Burke</h3>\r\n                  <span className=\"profession\">Saleforce Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer3} alt=\"Image\" />\r\n                  <h3>David Guzman</h3>\r\n                  <span className=\"profession\">React Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer4} alt=\"Image\" />\r\n                  <h3>Clarence Hart</h3>\r\n                  <span className=\"profession\">iOS Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer5} alt=\"Image\" />\r\n                  <h3>Anna Smith</h3>\r\n                  <span className=\"profession\">iOS Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer6} alt=\"Image\" />\r\n                  <h3>Kulva Dew</h3>\r\n                  <span className=\"profession\">iOS Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer7} alt=\"Image\" />\r\n                  <h3>Teena Smith</h3>\r\n                  <span className=\"profession\">ReactJs Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n              \r\n\r\n              <div className=\"\">\r\n                <div className=\"single-freelancer\">\r\n                  <img src={freelancer8} alt=\"Image\" />\r\n                  <h3>Chet Patel</h3>\r\n                  <span className=\"profession\">Saleforce Developr</span>\r\n                  \r\n                </div>\r\n              </div>\r\n              */}\r\n            </Slider>\r\n\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-lg-12 col-md-12 text-center\">\r\n                  <Link to={{\r\n                            pathname: '/client-signup',\r\n                            state: {\r\n                              category: props.location.state.category,\r\n                              skills: props.location.state.skills,\r\n                              freelancer_ids: state.freelancer_ids\r\n                            }\r\n                          }}>\r\n                      <button className=\"default-btn\">\r\n                          <span>Proceed</span>\r\n                      </button>\r\n                  </Link>\r\n                  <div id=\"msgSubmit\" className=\"h3 text-center hidden\"></div>\r\n                  <div className=\"clearfix\"></div>\r\n              </div>\r\n            </div>          \r\n          </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(FreelancerSelect);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\AddFreelancer.js",["239","240","241","242","243","244","245","246"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from \"react-dropdown-select\";\r\nimport {NotificationManager} from 'react-notifications';\r\nimport csc from \"country-state-city\";\r\nimport { saveFreelancer } from '../../actions/hrActions';\r\nimport LANGUAGES from \"../../constants/languages\";\r\nimport CATEGORY from \"../../constants/category\";\r\nimport SKILLS from \"../../constants/skills\";\r\nimport DEGREE from \"../../constants/degree\";\r\n\r\nfunction AddFreelancer(props) {\r\n\r\n    const initialState = {\r\n                        avatar: \"\",\r\n                        email:\"\",\r\n                        first_name: \"\",\r\n                        middle_name: \"\",\r\n                        last_name: \"\",\r\n                        phone: \"\",\r\n                        dob: \"\",\r\n                        nationality: \"\",\r\n                        gender: \"\",\r\n                        martial_status: \"\",\r\n                        address: \"\",\r\n                        languages: \"\",\r\n                        total_experience: \"\",\r\n                        role_ids:[2],\r\n                        skip_password_validation: true,\r\n                        country: '',\r\n                        state: '',\r\n                        city: '',\r\n                        pincode: '',\r\n                        additional_information_attributes: {\r\n                            title: \"\",\r\n                            about_me:\"\", \r\n                            presented_salary:\"\",\r\n                            expected_salary:\"\", \r\n                            category:\"\",\r\n                            skills: '',\r\n                            job_nature:\"\", \r\n                            job_level: \"\",\r\n                            attachment: \"\",\r\n                            github_link: \"\",\r\n                            linkedin_link: \"\",\r\n                            skype_id: \"\",\r\n                        },\r\n                        education_informations_attributes:[],\r\n                        experience_informations_attributes: [],\r\n                        project_informations_attributes:[],\r\n                        stateArg: [],\r\n                        cityArg: [],\r\n                        skillArg: []\r\n                    };\r\n    const [state , setState] = useState(initialState)\r\n\r\n    const initialEdState = {\r\n                education_level: \"\", \r\n                degree_title: \"\", \r\n                group: \"\", \r\n                institute_name: \"\", \r\n                result: \"\", \r\n                marks: \"\",\r\n                year_of_passing: \"\", \r\n                duration: \"\",\r\n                description: \"\"\r\n            }\r\n    const [education, setEducation] = useState([ initialEdState ])\r\n\r\n    const initialExState = {\r\n                company_name:\"\", \r\n                designation: \"\", \r\n                company_location: \"\",\r\n                employment_period: \"\",\r\n                description: \"\"\r\n            }\r\n\r\n    const [experience, setExperience] = useState([ initialExState ])\r\n    \r\n    const initialPrState = {\r\n                title: \"\", \r\n                start_date: \"\", \r\n                end_date: \"\", \r\n                technologies: \"\", \r\n                summary: \"\",\r\n                project_link: \"\"\r\n            }\r\n\r\n    const [project, setProject] = useState([ initialPrState ])\r\n    \r\n\r\n    const clearState = () => {\r\n        setState({ ...initialState });\r\n        setEducation([{ ...initialEdState }]);\r\n        setExperience([{ ...initialExState }]);\r\n        setProject([{ ...initialPrState }]);\r\n    };\r\n\r\n    const [errors , setError] = useState({\r\n        email: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        phone: \"\"\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        }))\r\n\r\n        let valid = { \r\n                    // avatar: state.avatar,\r\n                    [name]: value\r\n                  }\r\n        checkEmpty(valid)           \r\n    }\r\n\r\n    const handleSelect = (name, value) => {\r\n      // console.log(name,\"----\",value)\r\n      if(value.length === 0){\r\n        return false\r\n      } \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].value\r\n        }))\r\n    }\r\n\r\n    const selectCurrentCountry = (name, value) => {\r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        // console.log(name,\"----\",value)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].name\r\n        }))\r\n\r\n        let stateArg = csc.getStatesOfCountry(value[0].isoCode);\r\n\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            stateArg : stateArg,\r\n            cityArg : [],\r\n            state: '',\r\n            city: ''\r\n        }))\r\n\r\n        // console.log(\"state\",state)\r\n        // const city = csc.getCitiesOfState(state.id)[0];\r\n    }\r\n\r\n    const selectCurrentState = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].name\r\n        }))\r\n\r\n        let cityArg = csc.getCitiesOfState(value[0].countryCode, value[0].isoCode);\r\n        // console.log(\"cityArg\",cityArg)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            cityArg : cityArg,\r\n            city: ''\r\n        }))\r\n    }\r\n\r\n    const selectCurrentCity = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].name\r\n        }))\r\n    }\r\n\r\n    const onPhotoUpload = (event) => { \r\n    \r\n        const {name , value} = event.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : event.target.files[0]\r\n        }))\r\n    }; \r\n\r\n    const handleSelectLanguage = (name, value) => {\r\n      // console.log(name,\"----\",value.map(e => e.value).join(\",\")) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    const handleAdditional = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSelectAdditionalCat = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value[0].value\r\n            }\r\n        })\r\n\r\n        var filteredItems = SKILLS.filter(item => (\r\n            item.filter === value[0].value\r\n          ));\r\n        // console.log(\"filteredItems\",filteredItems)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            skillArg : filteredItems\r\n        }))\r\n        \r\n    }\r\n\r\n    const handleSelectAdditional = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n      if(name === 'skills'){\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n      }else{\r\n\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value[0].value\r\n            }\r\n        })\r\n\r\n      }\r\n    }\r\n    // On file upload (click the upload button) \r\n    const onFileUpload = (event) => { \r\n    \r\n        const {name , value} = event.target   \r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : event.target.files[0]\r\n            }\r\n        })\r\n      // Details of the uploaded file \r\n      // console.log(this.state.selectedFile); \r\n      \r\n    }; \r\n\r\n\r\n    const handleDateChange = (date) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            dob : date\r\n        }))\r\n    }\r\n\r\n    const addEducation = () => {\r\n        let edu = {\r\n                education_level: \"\", \r\n                degree_title: \"\", \r\n                group: \"\", \r\n                institute_name: \"\", \r\n                result: \"\", \r\n                marks: \"\",\r\n                year_of_passing: \"\", \r\n                duration: \"\",\r\n                description: \"\"\r\n            }\r\n        setEducation([...education, edu])\r\n    }\r\n    const removeEducation = (index) => {\r\n        setEducation(experience.filter(( id, i ) => i !== index));\r\n    }\r\n    const handleEducation = (e, index) => {\r\n        // console.log(index,\"----\",e.target)\r\n        setEducation(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[e.target.name] = e.target.value;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n    }\r\n\r\n    const handleSelectEducation = (name, value, index) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n\r\n        let newState = Object.assign(education);\r\n        newState[index][name] = value[0].value\r\n        setEducation(newState); \r\n    }\r\n\r\n    const addExperience = () => {\r\n        let exp = {\r\n                company_name:\"\", \r\n                designation: \"\", \r\n                company_location: \"\",\r\n                employment_period: \"\",\r\n                description: \"\"\r\n            }\r\n        setExperience([...experience, exp])\r\n    }\r\n    const removeExperience = (index) => {\r\n        setExperience(experience.filter(( id, i ) => i !== index));\r\n    }\r\n    const handleExperience = (e, index) => {\r\n        // console.log(index,\"----\",e.target)\r\n        setExperience(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[e.target.name] = e.target.value;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n\r\n    }\r\n    const handleSelectExperience = (name, value, index) => {\r\n      // console.log(name,\"----\",value)\r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n\r\n        let newState = Object.assign(experience);\r\n        newState[index][name] = value[0].value\r\n        setExperience(newState); \r\n    }\r\n\r\n    const addProject = () => {\r\n        let proj = {\r\n                title: \"\", \r\n                start_date: \"\", \r\n                end_date: \"\", \r\n                technologies: \"\", \r\n                summary: \"\",\r\n                project_link: \"\"\r\n            }\r\n\r\n        setProject([...project, proj])\r\n    }\r\n\r\n    const removeProject = (index) => {\r\n        // console.log(\"index\",index)\r\n        setProject(project.filter(( id, i ) => i !== index));\r\n    }\r\n\r\n    const handleProject = (e, index) => {\r\n        setProject(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[e.target.name] = e.target.value;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n\r\n    }\r\n    const handleSelectProject = (name, value, index) => {\r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n\r\n        let newState = Object.assign(project);\r\n        newState[index][name] = value.map(e => e.value).join(\",\")\r\n        setProject(newState);\r\n    }\r\n\r\n    const handleProjectDateChange = (name, date, index) => {\r\n\r\n        setProject(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[name] = date;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n    }\r\n\r\n    const checkEmpty = (dataToCheck) => {\r\n      let stopApicall = false\r\n\r\n      for (var key in dataToCheck) {\r\n          if(dataToCheck && dataToCheck[key].length === 0){\r\n              errors[key] = \"Field can't be blank\"\r\n              setError(errors)\r\n              stopApicall = true\r\n          }\r\n          else{\r\n            errors[key] = \"\"\r\n            setError(errors)\r\n          }\r\n        }\r\n\r\n    return stopApicall\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n      e.preventDefault(); \r\n        let data = { \r\n                   \r\n                    email: state.email,\r\n                    first_name: state.first_name,\r\n                    middle_name: state.middle_name,\r\n                    last_name: state.last_name,\r\n                    phone: state.phone,\r\n                    dob: state.dob,\r\n                    nationality: state.nationality,\r\n                    gender: state.gender,\r\n                    martial_status: state.martial_status,\r\n                    address: state.address,\r\n                    languages: state.languages,\r\n                    total_experience: state.total_experience,\r\n                    role_name:'freelancer',\r\n                    country: state.country,\r\n                    state: state.state,\r\n                    city: state.city,\r\n                    pincode: state.pincode,\r\n                    skip_password_validation: true,\r\n                    status: 'draft'\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        if(state.avatar){\r\n            form_data.append(`user[avatar]`, state.avatar)          \r\n        }\r\n\r\n        form_data.append(\"user[additional_information_attributes[title]]\",state.additional_information_attributes.title)\r\n        form_data.append(\"user[additional_information_attributes[about_me]]\",state.additional_information_attributes.about_me)\r\n        form_data.append(\"user[additional_information_attributes[presented_salary]]\",state.additional_information_attributes.presented_salary)\r\n        form_data.append(\"user[additional_information_attributes[expected_salary]]\",state.additional_information_attributes.expected_salary)\r\n        form_data.append(\"user[additional_information_attributes[category]]\",state.additional_information_attributes.category)\r\n        form_data.append(\"user[additional_information_attributes[skills]]\",state.additional_information_attributes.skills)\r\n        form_data.append(\"user[additional_information_attributes[job_nature]]\",state.additional_information_attributes.job_nature)\r\n        form_data.append(\"user[additional_information_attributes[job_level]]\",state.additional_information_attributes.job_level)\r\n        form_data.append(\"user[additional_information_attributes[attachment]]\",state.additional_information_attributes.attachment)\r\n        form_data.append(\"user[additional_information_attributes[github_link]]\",state.additional_information_attributes.github_link)\r\n        form_data.append(\"user[additional_information_attributes[linkedin_link]]\",state.additional_information_attributes.linkedin_link)\r\n        form_data.append(\"user[additional_information_attributes[skype_id]]\",state.additional_information_attributes.skype_id)\r\n\r\n        education.map((p,index) => {\r\n            form_data.append(`user[education_informations_attributes[${index}][education_level]]`, p.education_level)\r\n            form_data.append(`user[education_informations_attributes[${index}][degree_title]]`, p.degree_title)\r\n            form_data.append(`user[education_informations_attributes[${index}][group]]`, p.group)\r\n            form_data.append(`user[education_informations_attributes[${index}][institute_name]]`, p.institute_name)\r\n            form_data.append(`user[education_informations_attributes[${index}][result]]`, p.result)\r\n            form_data.append(`user[education_informations_attributes[${index}][marks]]`, p.marks)\r\n            form_data.append(`user[education_informations_attributes[${index}][year_of_passing]]`, p.year_of_passing)\r\n            form_data.append(`user[education_informations_attributes[${index}][duration]]`, p.duration)\r\n            form_data.append(`user[education_informations_attributes[${index}][description]]`, p.description)\r\n            return p\r\n        })\r\n\r\n        experience.map((p,index) => {\r\n            form_data.append(`user[experience_informations_attributes[${index}][company_name]]`, p.company_name)\r\n            form_data.append(`user[experience_informations_attributes[${index}][designation]]`, p.designation)\r\n            form_data.append(`user[experience_informations_attributes[${index}][company_location]]`, p.company_location)\r\n            form_data.append(`user[experience_informations_attributes[${index}][employment_period_year]]`, p.employment_period_year)\r\n            form_data.append(`user[experience_informations_attributes[${index}][employment_period_month]]`, p.employment_period_month)\r\n            form_data.append(`user[experience_informations_attributes[${index}][description]]`, p.description)\r\n            return p\r\n        })\r\n\r\n        project.map((p,index) => {\r\n            form_data.append(`user[project_informations_attributes[${index}][title]]`, p.title)\r\n            form_data.append(`user[project_informations_attributes[${index}][start_date]]`, p.start_date)\r\n            form_data.append(`user[project_informations_attributes[${index}][end_date]]`, p.end_date)\r\n            form_data.append(`user[project_informations_attributes[${index}][technologies]]`, p.technologies)\r\n            form_data.append(`user[project_informations_attributes[${index}][summary]]`, p.summary)\r\n            form_data.append(`user[project_informations_attributes[${index}][project_link]]`, p.project_link)\r\n            return p\r\n        })\r\n            // console.log(\"form_data\",form_data)\r\n        dispatch(saveFreelancer(form_data)).then((res)=> {\r\n            console.log(\"res\",res)\r\n            if(res && res.data.status === 200) {\r\n               NotificationManager.success(\"Successfully added\", 'Success');\r\n               props.history.push('/freelancer');\r\n            }else{\r\n               NotificationManager.error(res.data.messages, 'Error');  \r\n            }\r\n        })\r\n    }\r\n\r\n    const gender_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Male', label: 'Male' },\r\n                              { value: 'Female', label: 'Female' }\r\n                            ]\r\n    const marital_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Married', label: 'Married' },\r\n                              { value: 'Unmarried', label: 'Unmarried' }\r\n                            ]\r\n    const nationality_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Austria', label: 'Austria' },\r\n                              { value: 'Canada', label: 'Canada' },\r\n                              { value: 'India', label: 'India' },\r\n                              { value: 'United Kingdom', label: 'United Kingdom' },\r\n                              { value: 'United State', label: 'United State' },\r\n                            ]\r\n\r\n    const technology_options = [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Salesforce', label: 'Salesforce' },\r\n                              { value: 'ROR', label: 'ROR' },\r\n                              { value: 'React', label: 'React' },\r\n                              { value: 'IOS', label: 'IOS' },\r\n                              { value: 'NodeJS', label: 'NodeJS' },\r\n                              { value: 'HTML', label: 'HTML' },\r\n                              { value: 'CSS', label: 'CSS' },\r\n                              { value: 'JavaScript', label: 'JavaScript' },\r\n                              { value: 'Rails', label: 'Rails' },\r\n                              { value: 'ERP', label: 'ERP' },\r\n                              { value: 'Postgres', label: 'Postgres' },\r\n                              { value: 'Swift', label: 'Swift' },\r\n                              { value: 'Objective C', label: 'Objective C' },\r\n                              { value: 'Express', label: 'Express' },\r\n                              { value: 'Redux', label: 'Redux' },\r\n                              { value: 'Flux', label: 'Flux' }, \r\n                            ]\r\n\r\n    const education_level_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Engineer', label: 'Engineer' },\r\n                              { value: 'Master', label: 'Master' },\r\n                              { value: 'Associate', label: 'Associate' },\r\n                              { value: 'Diploma', label: 'Diploma' },\r\n                              { value: 'Graduate', label: 'Graduate' },\r\n                              { value: 'Post Graduate', label: 'Post Graduate' },\r\n                            ]\r\n    const result_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'First', label: 'First Class' },\r\n                              { value: 'Second', label: 'Second Class' },\r\n                              { value: 'Third', label: 'Third Class' }\r\n                            ]\r\n    const year_of_passing_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '2001', label: '2001' },\r\n                              { value: '2002', label: '2002' },\r\n                              { value: '2003', label: '2003' },\r\n                              { value: '2004', label: '2004' },\r\n                              { value: '2005', label: '2005' },\r\n                              { value: '2006', label: '2006' },\r\n                              { value: '2007', label: '2007' },\r\n                              { value: '2008', label: '2008' },\r\n                              { value: '2009', label: '2009' },\r\n                              { value: '2010', label: '2010' },\r\n                              { value: '2011', label: '2011' },\r\n                              { value: '2012', label: '2012' },\r\n                              { value: '2013', label: '2013' },\r\n                              { value: '2014', label: '2014' },\r\n                              { value: '2015', label: '2015' },\r\n                              { value: '2016', label: '2016' },\r\n                              { value: '2017', label: '2017' },\r\n                              { value: '2018', label: '2018' },\r\n                              { value: '2019', label: '2019' },\r\n                              { value: '2020', label: '2020' }\r\n                            ]\r\n    const employment_period_year_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '0', label: '0' },\r\n                              { value: '1', label: '1' },\r\n                              { value: '2', label: '2' },\r\n                              { value: '3', label: '3' },\r\n                              { value: '4', label: '4' },\r\n                              { value: '5', label: '5' },\r\n                              { value: '6', label: '6' },\r\n                              { value: '7', label: '7' },\r\n                              { value: '8', label: '8' },\r\n                              { value: '9', label: '9' },\r\n                              { value: '10', label: '10' },\r\n                              { value: '11', label: '11' },\r\n                              { value: '12', label: '12' },\r\n                              { value: '13', label: '13' },\r\n                              { value: '14', label: '14' },\r\n                              { value: '15', label: '15' },\r\n                              { value: '16', label: '16' },\r\n                              { value: '17', label: '17' },\r\n                              { value: '18', label: '18' },\r\n                              { value: '19', label: '19' },\r\n                              { value: '20', label: '20' }\r\n                            ]\r\n    const employment_period_month_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '0', label: '0' },\r\n                              { value: '1', label: '1' },\r\n                              { value: '2', label: '2' },\r\n                              { value: '3', label: '3' },\r\n                              { value: '4', label: '4' },\r\n                              { value: '5', label: '5' },\r\n                              { value: '6', label: '6' },\r\n                              { value: '7', label: '7' },\r\n                              { value: '8', label: '8' },\r\n                              { value: '9', label: '9' },\r\n                              { value: '10', label: '10' },\r\n                              { value: '11', label: '11' },\r\n                              { value: '12', label: '12' }\r\n                            ]\r\n    // console.log(\"education======\",education)\r\n    // console.log(\"experience'======\",experience)\r\n    // console.log(\"project======\",project)\r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n    return(\r\n\r\n        <div>\r\n        {/* Start Page Title Area */}\r\n        <div className=\"page-title-area\">\r\n            <div className=\"container\">\r\n                <div className=\"page-title-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h2>Add New Freelancer</h2>                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* End Page Title Area */}\r\n\r\n\r\n\r\n\r\n        <section className=\"candidates-resume-area mt-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"candidates-resume-content\">\r\n                            <form className=\"resume-info\" onSubmit={handleSave}>\r\n                                <h3><i className=\"bx bxs-user\"></i> Personal Details</h3>\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"choose-img\">\r\n                                                    <p>Upload (Profile)</p>\r\n                                                    <input type=\"file\" id=\"avatar\" name=\"avatar\" accept=\"image/*\" onChange={onPhotoUpload}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"choose-img\">\r\n                                                    <p>Upload (Resume)<span className=\"text-danger\">*</span></p>\r\n                                                    <input type=\"file\" id=\"attachment\" name=\"attachment\" onChange={onFileUpload} required/>\r\n                                                    <p>Maximum file size: 2 MB</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Title<span className=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"title\"\r\n                                                        value={state.additional_information_attributes.title}\r\n                                                        onChange={handleAdditional} \r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> First Name<span className=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"first_name\"\r\n                                                        value={state.first_name}\r\n                                                        onChange={handleChange} \r\n                                                        required\r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.first_name && \"Enter First Name \"}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> Middle Name</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"middle_name\"\r\n                                                        value={state.middle_name}\r\n                                                        onChange={handleChange} \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> Last Name<span className=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"last_name\"\r\n                                                        value={state.last_name}\r\n                                                        onChange={handleChange} \r\n                                                        required\r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.last_name && \"Enter Last Name \"}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email<span className=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"email\" \r\n                                                        name=\"email\"\r\n                                                        value={state.email}\r\n                                                        onChange={handleChange} \r\n                                                        required\r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.email && \"Enter email address\"}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> Phone<span className=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"phone\"\r\n                                                        value={state.phone}\r\n                                                        onChange={handleChange}\r\n                                                        required \r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.phone && \"Enter phone number \"}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>About me</label>\r\n                                                    <textarea \r\n                                                        className=\"form-control\" \r\n                                                        rows=\"4\"\r\n                                                        name=\"about_me\" \r\n                                                        onChange={handleAdditional}\r\n                                                        value = {state.additional_information_attributes.about_me}\r\n                                                    >\r\n                                                    </textarea>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Date Of Birth</label>\r\n                                                    <div className=\"input-group date\" id=\"datetimepicker\">\r\n                                                        <DatePicker\r\n                                                        selected={state.dob !== '' ? new Date(state.dob) : ''}\r\n                                                        onChange={handleDateChange}\r\n                                                        className=\"form-control mn_input post-job-boxes\"\r\n                                                        dateFormat=\"yyyy-MM-dd\"\r\n                                                        // maxDate={new Date('2003-01-01')}\r\n                                                        showMonthDropdown\r\n                                                        showYearDropdown\r\n                                                        dropdownMode=\"select\"\r\n                                                        \r\n                                                        />\r\n                                                        <span className=\"input-group-addon\"></span>\r\n                                                        <i className=\"bx bx-calendar\"></i>\r\n                                                    </div>  \r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Gender<span className=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"gender\" \r\n                                                        options={gender_options}\r\n                                                        onChange={(value) => handleSelect('gender', value)} \r\n                                                        value={state.gender}\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Marital status</label>\r\n                                                    <Select \r\n                                                        name=\"martial_status\" \r\n                                                        options={marital_options}\r\n                                                        onChange={(value) => handleSelect('martial_status', value)} \r\n                                                        value={state.martial_status}\r\n                                                        \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Nationality<span className=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"nationality\" \r\n                                                        options={nationality_options}\r\n                                                        onChange={(value) => handleSelect('nationality', value)} \r\n                                                        value={state.nationality}\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Language<span className=\"text-danger\">*</span></label>\r\n                                                \r\n                                                    <Select \r\n                                                        name=\"languages\"\r\n                                                        multi\r\n                                                        options={LANGUAGES}\r\n                                                        onChange={(value) => handleSelectLanguage('languages', value)} \r\n                                                        value={state.languages}\r\n                                                        labelField=\"label\"\r\n                                                        valueField=\"value\"\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Total Experience<span className=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"total_experience\"\r\n                                                        value={state.total_experience}\r\n                                                        onChange={handleChange} \r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Country<span className=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"country\"\r\n                                                        options={csc.getAllCountries()}\r\n                                                        onChange={(value) => selectCurrentCountry('country', value)} \r\n                                                        value={state.country}\r\n                                                        labelField=\"name\"\r\n                                                        valueField=\"name\"\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>State</label>\r\n                                                    <Select \r\n                                                        name=\"state\"\r\n                                                        options={state.stateArg}\r\n                                                        onChange={(value) => selectCurrentState('state', value)} \r\n                                                        value={state.state}\r\n                                                        labelField=\"name\"\r\n                                                        valueField=\"name\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>City</label>\r\n                                                    <Select \r\n                                                        name=\"city\"\r\n                                                        options={state.cityArg}\r\n                                                        onChange={(value) => selectCurrentCity('city', value)} \r\n                                                        value={state.city}\r\n                                                        labelField=\"name\"\r\n                                                        valueField=\"name\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Pincode</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"pincode\"\r\n                                                        value={state.pincode}\r\n                                                        onChange={handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address Details</label>\r\n                                                    <textarea \r\n                                                        className=\"form-control\" \r\n                                                        rows=\"4\"\r\n                                                        name=\"address\" \r\n                                                        onChange={handleChange}\r\n                                                        value={state.address}\r\n                                                    >\r\n                                                    </textarea>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <h3><i className=\"bx bxs-graduation\"></i> Career And Application Information</h3>\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Current Salary - CTC (INR)<span className=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"number\" \r\n                                                        name=\"presented_salary\"\r\n                                                        value={state.additional_information_attributes.presented_salary}\r\n                                                        onChange={handleAdditional} \r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Expected Salary - CTC (INR)</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"number\" \r\n                                                        name=\"expected_salary\"\r\n                                                        value={state.additional_information_attributes.expected_salary}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Category<span className=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"category\" \r\n                                                        options={CATEGORY}\r\n                                                        onChange={(value) => handleSelectAdditionalCat('category', value)} \r\n                                                        value={state.additional_information_attributes.category}\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label><i className=\"bx bxl-linkedin-square\"></i> Skype ID</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"skype_id\"\r\n                                                        value={state.additional_information_attributes.skype_id}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Skills<span className=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"skills\" \r\n                                                        options={state.skillArg}\r\n                                                        onChange={(value) => handleSelectAdditional('skills', value)} \r\n                                                        value={state.additional_information_attributes.skills}\r\n                                                        required\r\n                                                        multi\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label><i className=\"bx bxl-github\"></i> Github Link</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"github_link\"\r\n                                                        value={state.additional_information_attributes.github_link}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label><i className=\"bx bxl-linkedin-square\"></i> Linkedin Link</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"linkedin_link\"\r\n                                                        value={state.additional_information_attributes.linkedin_link}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            \r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                <h3><i className=\"bx bxs-bar-chart-square\"></i> Experience Level<span className=\"text-danger\">*</span></h3>\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                      <div className=\"row\">\r\n                                                <div className=\"col-lg-4 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                    <label className=\"single-check\">\r\n                                                        Fresher\r\n                                                        <input \r\n                                                            type=\"radio\" \r\n                                                            checked={state.additional_information_attributes.job_level === \"Fresher\"} \r\n                                                            name=\"job_level\" \r\n                                                            value=\"Fresher\" required/>\r\n                                                        <span className=\"checkmark\"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"col-lg-4 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                    <label className=\"single-check\">\r\n                                                        Intermediate\r\n                                                        <input \r\n                                                            type=\"radio\" \r\n                                                            checked={state.additional_information_attributes.job_level === \"Intermediate\"} \r\n                                                            name=\"job_level\" \r\n                                                            value=\"Intermediate\" required/>\r\n                                                        <span className=\"checkmark\"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"col-lg-4 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                    <label className=\"single-check\">\r\n                                                        Expert\r\n                                                        <input \r\n                                                            type=\"radio\" \r\n                                                            checked={state.additional_information_attributes.job_level === \"Expert\"} \r\n                                                            name=\"job_level\" \r\n                                                            value=\"Expert\" required/>\r\n                                                        <span className=\"checkmark\"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3><i className=\"bx bxs-briefcase\"></i> Job Type<span className=\"text-danger\">*</span></h3>\r\n\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Full Time \r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Full Time\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Full Time\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Part Time   \r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Part Time\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Part Time\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Contract\r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Contract\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Contract\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Office\r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Office\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Office\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n\r\n\r\n\r\n                                \r\n                                <h3><i className=\"bx bxs-graduation\"></i> Education</h3>\r\n                                                        \r\n                                    \r\n                                    {education.map((item, i) => {\r\n                                        return (\r\n                                        <React.Fragment>\r\n\r\n                                            <div className=\"card mt-4\">\r\n                                                \r\n                                                    {\r\n                                                        i > 0 &&\r\n                                                        <div className=\"card-header\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-lg-12 col-md-12\">\r\n                                                                    <a className=\"default-btn btn-danger float-right remove-record-btn\" onClick={() => removeEducation(i)}>\r\n                                                                    <i className=\"bx bx-trash\"></i> Remove Education\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    }\r\n                                                \r\n\r\n\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Level of Education<span className=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"education_level\" \r\n                                                                    options={education_level_options}\r\n                                                                    onChange={(value) => handleSelectEducation('education_level', value, i)} \r\n                                                                    value={education[i].education_level}\r\n                                                                    required\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Exam / Degree Title<span className=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"degree_title\" \r\n                                                                    options={DEGREE}\r\n                                                                    onChange={(value) => handleSelectEducation('degree_title', value, i)} \r\n                                                                    value={education[i].degree_title}\r\n                                                                    required\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {/*<div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Major/Group</label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"group\" \r\n                                                                    onChange={(e) => handleEducation(e,i)} \r\n                                                                    required\r\n                                                                    value={education[i].group}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>*/}\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Institute Name<span className=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    className=\"form-control\" \r\n                                                                    type=\"text\" \r\n                                                                    name=\"institute_name\" \r\n                                                                    onChange={(e) => handleEducation(e,i)}\r\n                                                                    required\r\n                                                                    value={education[i].institute_name}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Result<span className=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"result\" \r\n                                                                    options={result_options}\r\n                                                                    onChange={(value) => handleSelectEducation('result', value, i)} \r\n                                                                    value={education[i].result}\r\n                                                                    required\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Marks(%)<span className=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    className=\"form-control\" \r\n                                                                    type=\"number\" \r\n                                                                    name=\"marks\" \r\n                                                                    onChange={(e) => handleEducation(e,i)}\r\n                                                                    required\r\n                                                                    value={education[i].marks}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Year of Passing</label>\r\n                                                                <Select \r\n                                                                    name=\"year_of_passing\" \r\n                                                                    options={year_of_passing_options}\r\n                                                                    onChange={(value) => handleSelectEducation('year_of_passing', value, i)} \r\n                                                                    value={education[i].year_of_passing}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Duration (Years)</label>\r\n                                                                <input\r\n                                                                    className=\"form-control\" \r\n                                                                    type=\"number\" \r\n                                                                    name=\"duration\" \r\n                                                                    onChange={(e) => handleEducation(e,i)}\r\n                                                                    value={education[i].duration}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {/*<div className=\"col-lg-12\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Description</label>\r\n                                                                <textarea \r\n                                                                    className=\"form-control\" \r\n                                                                    rows=\"4\"\r\n                                                                    name=\"description\" \r\n                                                                    onChange={(e) => handleEducation(e,i)}\r\n                                                                    required\r\n                                                                    value={education[i].description}\r\n                                                                >\r\n                                                                </textarea>\r\n                                                            </div>\r\n                                                        </div> */}\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                        )\r\n                                    })}\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12\">\r\n                                        <a className=\"default-btn float-right mt-3 add-new-btn\" onClick={addEducation}>\r\n                                        <i className=\"bx bx-plus\"></i> Add Education\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3><i className=\"bx bxs-badge\"></i> Experience</h3>\r\n\r\n                               \r\n                                    \r\n                                    {experience.map((item, i) => {\r\n                                        return (\r\n                                        <React.Fragment>\r\n\r\n\r\n                                            <div className=\"card mt-4\">\r\n                                                {\r\n                                                    i > 0 &&\r\n                                                <div className=\"card-header\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-12 col-md-12\">\r\n                                                            <a className=\"default-btn btn-danger float-right remove-record-btn\" onClick={() => removeExperience(i)}>\r\n                                                            <i className=\"bx bx-trash\"></i> Remove Experience\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>    \r\n                                                </div>\r\n                                                }\r\n\r\n\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Company Name<span className=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"company_name\" \r\n                                                                    onChange={(e) => handleExperience(e,i)} \r\n                                                                    required\r\n                                                                    value={experience[i].company_name}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Designation<span className=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"designation\" \r\n                                                                    onChange={(e) => handleExperience(e,i)} \r\n                                                                    required\r\n                                                                    value={experience[i].designation}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Company Location<span className=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"company_location\" \r\n                                                                    onChange={(e) => handleExperience(e,i)} \r\n                                                                    required\r\n                                                                    value={experience[i].company_location}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Employment Period Year</label>\r\n                                                                <Select \r\n                                                                    name=\"employment_period_year\" \r\n                                                                    options={employment_period_year_options}\r\n                                                                    onChange={(value) => handleSelectExperience('employment_period_year', value, i)} \r\n                                                                    value={experience[i].employment_period_year}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                        <div className=\"col-lg-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Month</label>\r\n                                                                <Select \r\n                                                                    name=\"employment_period_month\" \r\n                                                                    options={employment_period_month_options}\r\n                                                                    onChange={(value) => handleSelectExperience('employment_period_month', value, i)} \r\n                                                                    value={experience[i].employment_period_month}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-12\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Description</label>\r\n                                                                <textarea \r\n                                                                    className=\"form-control\" \r\n                                                                    rows=\"4\"\r\n                                                                    name=\"description\" \r\n                                                                    onChange={(e) => handleExperience(e,i)}\r\n                                                                    value={experience[i].description}\r\n                                                                >\r\n                                                                </textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        \r\n                                        </React.Fragment>\r\n                                        )\r\n                                    })}\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12\">\r\n                                        <a className=\"default-btn float-right mt-3 add-new-btn\" onClick={addExperience}>\r\n                                        <i className=\"bx bx-plus\"></i> Add Experience\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3><i className=\"bx bxs-briefcase\"></i> Project</h3>\r\n\r\n                               \r\n                                    \r\n                                    {project.map((item, i) => {\r\n                                        return (\r\n                                        <React.Fragment>\r\n\r\n                                            <div className=\"card mt-4\">\r\n                                                    {\r\n                                                        i > 0 &&\r\n                                                    <div className=\"card-header\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-lg-12 col-md-12\">\r\n                                                                <a className=\"default-btn btn-danger float-right remove-record-btn\" onClick={() => removeProject(i)}>\r\n                                                                <i className=\"bx bx-trash\"></i> Remove Project\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>    \r\n                                                    }\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row\">\r\n\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Title<span className=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"title\" \r\n                                                                    onChange={(e) => handleProject(e,i)} \r\n                                                                    required\r\n                                                                    value={project[i].title}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>URL</label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"project_link\" \r\n                                                                    onChange={(e) => handleProject(e,i)} \r\n                                                                    value={project[i].project_link}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Technologies<span className=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"technologies\" \r\n                                                                    options={technology_options}\r\n                                                                    onChange={(value) => handleSelectProject('technologies', value, i)} \r\n                                                                    value={project[i].technologies}\r\n                                                                    required\r\n                                                                    multi\r\n                                                                    \r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Start Date</label>\r\n                                                                <div className=\"input-group date\" id=\"datetimepicker\">\r\n                                                                    <DatePicker\r\n                                                                    selected={project[i].start_date !== '' ? new Date(project[i].start_date) : ''}\r\n                                                                    onChange={(date) => handleProjectDateChange('start_date', date, i)}\r\n                                                                    className=\"form-control mn_input post-job-boxes\"\r\n                                                                    dateFormat=\"yyyy-MM-dd\"\r\n                                                                    showMonthDropdown\r\n                                                                    showYearDropdown\r\n                                                                    dropdownMode=\"select\"\r\n                                                                    />\r\n                                                                    <span className=\"input-group-addon\"></span>\r\n                                                                    <i className=\"bx bx-calendar\"></i>\r\n                                                                </div>  \r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>End Date</label>\r\n                                                                <div className=\"input-group date\" id=\"datetimepicker\">\r\n                                                                    <DatePicker\r\n                                                                    selected={project[i].end_date !== '' ? new Date(project[i].end_date) : ''}\r\n                                                                    onChange={(date) => handleProjectDateChange('end_date', date, i)}\r\n                                                                    className=\"form-control mn_input post-job-boxes\"\r\n                                                                    dateFormat=\"yyyy-MM-dd\"\r\n                                                                    showMonthDropdown\r\n                                                                    showYearDropdown\r\n                                                                    dropdownMode=\"select\"\r\n                                                                    />\r\n                                                                    <span className=\"input-group-addon\"></span>\r\n                                                                    <i className=\"bx bx-calendar\"></i>\r\n                                                                </div>  \r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                        <div className=\"col-lg-12\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Summary</label>\r\n                                                                <textarea \r\n                                                                    className=\"form-control\" \r\n                                                                    rows=\"4\"\r\n                                                                    name=\"summary\" \r\n                                                                    onChange={(e) => handleProject(e,i)}\r\n                                                                    value={project[i].summary}\r\n                                                                >\r\n                                                                </textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                                    \r\n                                        </React.Fragment>\r\n                                        )\r\n                                    })}\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-lg-12 col-md-12\">\r\n                                        <a className=\"default-btn float-right mt-3 add-new-btn\" onClick={addProject}>\r\n                                        <i className=\"bx bx-plus\"></i> Add Project\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 text-center\">\r\n                                       <button className=\"default-btn\" disabled={loader}>Save </button>\r\n                                       <button className=\"default-btn btn-two ml-2\" onClick={clearState}>Reset </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    \r\n        </div>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default withRouter(AddFreelancer);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Client\\FreelancerDetail.js",["247","248","249","250","251","252","253"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport { getFreelancer } from '../../actions/hrActions';\r\nimport _ from 'lodash';\r\nimport avatar from \"../../assets/images/avatar-img.jpg\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\n\r\nfunction FreelancerDetail(props) {\r\n    \r\n    const [state , setState] = useState({\r\n        detail: ''\r\n      })\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n      fetchData();\r\n    }, []);\r\n\r\n    const { id } = useParams();\r\n    // console.log(\"id\",id)\r\n\r\n    const fetchData = () => {\r\n      \r\n      // Update the document title using the browser API\r\n      dispatch(getFreelancer(id)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res.data)\r\n            setState(prevState => ({\r\n                detail: res.data.user\r\n            }))\r\n          }\r\n      })\r\n    }\r\n    // console.log(\"detail\",state.detail)_.get(state.detail, 'user_image', [avatar])\r\n    return(\r\n      <React.Fragment>\r\n        <div className=\"page-title-area\">\r\n          <div className=\"container\">\r\n            <div className=\"page-title-content\">\r\n              <h2>Freelancer Details</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"candidates-details-area mt-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"candidates-cv\">\r\n                  <div className=\"row align-items-center\">\r\n                    <div className=\"col-lg-2\">\r\n                      <div className=\"hot-jobs-img\">\r\n                        <img src={state.detail && state.detail.user_image ? state.detail.user_image : avatar} alt=\"Image\" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"candidates-cv-content\">\r\n                        <h3>{_.get(state.detail, 'first_name', ['']) + ' ' +_.get(state.detail, 'last_name', [''])}</h3>\r\n                        <span className=\"sub-title\">{_.get(state.detail.additional_information, 'title', [''])}</span>\r\n                        <ul>\r\n                          <li><a href=\"mailto:#\">{_.get(state.detail, 'email', [''])}</a></li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4\">\r\n                      <a href={_.get(state.detail.additional_information, 'user_resume', ['#'])} target=\"_blank\" className=\"default-btn\">Download CV</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"candidates-details-content\">\r\n                  <h3>About Me</h3>\r\n                    <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                        <p>{_.get(state.detail.additional_information, 'about_me', [''])}</p>\r\n                      </div>\r\n                    </div>\r\n                  \r\n                  <h3>Education</h3>\r\n                  {\r\n                    state.detail && state.detail.education_informations.length > 0 ? state.detail.education_informations.map((row,i) => {\r\n                    return (\r\n                      <div className=\"card mb-3\">\r\n                        <div className=\"card-body\">\r\n                            <ul key={i}>\r\n                              <li className=\"arts\"><i class=\"bx bxs-graduation\"></i> {row.education_level} in {row.degree_title}</li>\r\n                              <li className=\"university\"><i class=\"bx bxs-book\"></i> {row.group +' '+row.institute_name} ({row.year_of_passing})</li>\r\n                              <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                            </ul>\r\n                        </div>\r\n                      </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  }   \r\n                  <h3>Work Experience</h3>\r\n                  {state.detail && state.detail.experience_informations.length > 0 ? state.detail.experience_informations.map((row,i) => {\r\n                    return (\r\n                          <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n\r\n                                <ul key={i}>\r\n                                  <li className=\"arts\"><i class=\"bx bxs-user\"></i> {row.designation}</li>\r\n                                  <li className=\"university\"><i class=\"bx bxs-building\"></i> {row.company_name} ({row.employment_period_year > 0 && row.employment_period_year +\" year \"} { row.employment_period_month > 0 && row.employment_period_month+' month'}) in {row.company_location}</li>\r\n                                  <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.description}</li>\r\n                                </ul>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  <h3>Projects</h3>\r\n                  {state.detail && state.detail.project_informations.length > 0 ? state.detail.project_informations.map((row,i) => {\r\n                    return (\r\n                            <div className=\"card mb-3\">\r\n                              <div className=\"card-body\">\r\n                                  <ul key={i}>\r\n                                    <li className=\"arts\"><i class=\"bx bxs-graduation\"></i> {row.title}</li>\r\n                                    <li className=\"university\"><i class=\"bx bxs-calendar\"></i> Period: {row.start_date} to {row.end_date} </li>\r\n                                    <li className=\"university\"><i class=\"bx bxs-tag\"></i> Skills: {row.technologies} </li>\r\n                                    <li className=\"summary\"><i class=\"bx bxs-notepad\"></i> {row.summary}</li>\r\n                                  </ul>\r\n                              </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    : \r\n                    (<ul></ul>)\r\n                  } \r\n\r\n                  <h3>Personal Skills</h3>\r\n                  <div className=\"card mb-3\">\r\n                      <div className=\"card-body\">\r\n                      <div className=\"all-skill-bar\">\r\n                        {\r\n                          state.detail && state.detail.additional_information.skills && state.detail.additional_information.skills.split(',').map((skill)=>{\r\n                            return (<div className=\"skill-bar\" data-percentage=\"100%\">\r\n                                  <h5 className=\"progress-title-holder\">\r\n                                    <span className=\"progress-title\">{skill}</span>\r\n                                    \r\n                                  </h5>\r\n                    \r\n                                  <div className=\"progress-content-outter\">\r\n                                    <div className=\"progress-content\" ></div>\r\n                                    <ProgressBar variant=\"success\" now={45} />\r\n                                  </div>\r\n                              </div>)\r\n                            })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n         \r\n                  </div> \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"candidates-details-sidebar\">\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Social Profile</h3>\r\n\r\n                    <ul className=\"social-icon\">\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'github_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-github\"></i>\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href={_.get(state.detail.additional_information, 'linkedin_link', ['#'])} target=\"_blank\">\r\n                          <i className=\"bx bxl-linkedin-square\"></i>\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Contact Information</h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      \r\n                      {/* <li>\r\n                        Email\r\n                        <a href=\"mailto:#\"><span>: {_.get(state.detail, 'email', [''])}</span></a>\r\n                      </li> */}\r\n                      <li>\r\n                        Phone\r\n                        <a href={\"tel:+91\"+_.get(state.detail, 'phone', [''])}><span>: {_.get(state.detail, 'phone', [''])}</span></a>\r\n                      </li>\r\n                      <li>\r\n                        Skype Id\r\n                        <a href={\"tel:+91\"+_.get(state.detail.additional_information, 'skype_id', [''])}><span>: {_.get(state.detail.additional_information, 'skype_id', [''])}</span></a>\r\n                      </li>\r\n                      <li>\r\n                        Location\r\n                        <span>: {_.get(state.detail, 'address', [''])}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Job Overview</h3>\r\n                    \r\n                    <ul className=\"overview\">\r\n                      <li>\r\n                        Categories\r\n                        <span>: {_.get(state.detail.additional_information, 'category', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Nationality\r\n                        <span>: {_.get(state.detail, 'nationality', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Job Type\r\n                        <span>: {_.get(state.detail.additional_information, 'job_nature', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Experience\r\n                        <span>: {_.get(state.detail, 'total_experience', [''])} year(s)</span>\r\n                      </li>\r\n                      <li>\r\n                        Expected Salary\r\n                        <span>: {_.get(state.detail.additional_information, 'expected_salary', [''])}</span>\r\n                      </li>\r\n                      <li>\r\n                        Languages:\r\n                        <span>: {_.get(state.detail, 'languages', [''])} </span>\r\n                      </li>\r\n                      <li>\r\n                        Gender\r\n                        <span>: {_.get(state.detail, 'gender', [''])}</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                  <div className=\"candidates-widget\">\r\n                    <h3>Download Resume</h3>\r\n                    \r\n                    <ul className=\"overview download \">\r\n                      \r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">PDF Formate CV</a>\r\n                      </li>\r\n                      <li>\r\n                        <i className=\"flaticon-pdf\"></i>\r\n                        <a href=\"#\">DOC Formate CV</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(FreelancerDetail);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Freelancer.js",["254","255","256","257","258","259","260","261","262"],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\Dashboard.js",["263","264","265","266","267"],"import React, { useState } from 'react';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport Select from \"react-dropdown-select\";\r\n// import CATEGORY from \"../../constants/category\";\r\nimport SKILLS from \"../../constants/skills\";\r\nimport salesforce from \"../../assets/images/categories/salesforce.svg\";\r\nimport Ruby from \"../../assets/images/categories/ruby.svg\";\r\nimport ReactJS from \"../../assets/images/categories/react.svg\";\r\nimport IOS from \"../../assets/images/categories/ios.svg\";\r\nimport NodeJS from \"../../assets/images/categories/nodejs.svg\";\r\n\r\n\r\nfunction Dashboard(props) {\r\n    \r\n    const [state , setState] = useState({\r\n        skills: \"\",\r\n        category: \"\",\r\n        skillArg: SKILLS\r\n    })\r\n\r\n    const selectCategory = (value) => {\r\n        if(state.category === value){\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                category : '',\r\n                skillArg : SKILLS\r\n            }))    \r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            category : value\r\n        }))\r\n\r\n        var filteredItems = SKILLS.filter(item => (\r\n            item.filter === value\r\n          ));\r\n        // console.log(\"filteredItems\",filteredItems)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            skillArg : filteredItems\r\n        }))\r\n    }\r\n    const handleSelect = (name, value) => {\r\n      // console.log(name,\"----\",value)\r\n      if(value.length === 0){\r\n        return false\r\n      } \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] :  value.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <section className=\"live-jobs-area bg-color ptb-100\">\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                      <div className=\"section-title\">\r\n                          <span>What are the profiles you are looking for?</span>\r\n                          <h2>Browse Category</h2>\r\n                      </div>\r\n\r\n                      \r\n                          <div className=\"row\">\r\n                              <div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                              </div>\r\n                              {/*CATEGORY.map((row) => {\r\n                                return(<div className=\"col-lg-2 col-sm-6\">\r\n                                          <div className={state.category === category ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                              <img src={row.image} alt=\"salesforce\" />\r\n                                              <a href=\"#\">\r\n                                                  {row.label}\r\n                                              </a>\r\n                                          </div>\r\n                                      </div>)  \r\n                              })*/}\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('Salesforce')}>\r\n                                  <div className={state.category === 'Salesforce' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={salesforce} alt=\"salesforce\" />\r\n                                      <a href=\"#\">\r\n                                          Salesforce\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n                              \r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('ROR')}>\r\n                                  <div className={state.category === 'ROR' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={Ruby} alt=\"Ruby\" />\r\n                                      <a href=\"#\">\r\n                                          ROR\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('React')}>\r\n                                  <div className={state.category === 'React' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={ReactJS} alt=\"ReactJS\" />\r\n                                      <a href=\"#\">\r\n                                          React\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('IOS')}>\r\n                                  <div className={state.category === 'IOS' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={IOS} alt=\"IOS\" />\r\n                                      <a href=\"#\">\r\n                                          iOS\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-2 col-sm-6\" onClick={() => selectCategory('NodeJS')}>\r\n                                  <div className={state.category === 'NodeJS' ? \"single-live-job active\" : \"single-live-job\"}>\r\n                                      <img src={NodeJS} alt=\"NodeJS\" />\r\n                                      <a href=\"#\">\r\n                                          NodeJs\r\n                                      </a>\r\n                                  </div>\r\n                              </div>\r\n\r\n                              <div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                              </div>\r\n                          </div>\r\n                          \r\n                          \t<div className=\"row\">\r\n                                <div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                                </div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                <div className=\"col-lg-10 col-md-12 \">\r\n                                    <div className=\"form-group\">\r\n                                        <Select \r\n                                            name=\"skills\" \r\n                                            multi\r\n                                            options={state.skillArg}\r\n                                            onChange={(value) => handleSelect('skills', value)} \r\n                                            value={state.skills}\r\n                                            disabled={(state.category === \"\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-1 col-sm-12\">\r\n                              \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">      \r\n                              <div className=\"col-lg-12 col-md-12 text-center Proceed-button-link-container\">\r\n                                  <Link to={{\r\n                                      pathname: '/freelancers',\r\n                                      state: {\r\n                                        category: state.category,\r\n                                        skills: state.skills\r\n                                      }\r\n                                    }} \r\n                                        \r\n                                    disabled={(state.category === \"\")}\r\n                                    >\r\n                                      <button className=\"default-btn\" disabled={(state.category === \"\")}>\r\n                                          <span>Proceed</span>\r\n                                      </button>\r\n                                  </Link>\r\n                                  <div id=\"msgSubmit\" className=\"h3 text-center hidden\"></div>\r\n                                  <div className=\"clearfix\"></div>\r\n                              </div>\r\n                            </div>    \r\n                      \r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(Dashboard);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Dashboard\\ClientSignup.js",["268","269","270","271","272"],"import React, { useState, useEffect, setState } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {NotificationManager} from 'react-notifications';\r\nimport Select from \"react-dropdown-select\";\r\nimport TIMEZONES from \"../../constants/timezones\";\r\nimport { saveLeads } from '../../actions/hrActions';\r\n\r\n\r\n\r\n\r\nfunction ClientSignup(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [state , setState] = useState({\r\n        name: \"\",\r\n        company_name: \"\",\r\n        business_email: \"\",\r\n        phone_number: \"\",\r\n        timezone: \"\",\r\n        skills: \"\",\r\n        freelancer_ids: [],\r\n        category: \"\",\r\n        checked: \"\"\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n      let name = e.target.name\r\n      let value = e.target.value   \r\n      if(e.target.type  === 'checkbox'){\r\n        value = e.target.checked\r\n      }\r\n      console.log(\"e.target\",e.target.checked)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        }))        \r\n    }\r\n\r\n    const handleSelect = (name, value) => {\r\n      // console.log(\"value\",value)\r\n      if(value.length === 0){\r\n        return false\r\n      } \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].time\r\n        }))\r\n    }\r\n    const handleSave = (e) => {\r\n      e.preventDefault(); \r\n      if(!state.checked){\r\n        NotificationManager.error(\"Please accept terms and conditions\", 'Error');\r\n      }else{\r\n        let data = { \r\n                  name: state.name,\r\n                  company_name: state.company_name,\r\n                  business_email: state.business_email,\r\n                  phone_number: state.phone_number,\r\n                  timezone: state.timezone,\r\n                  skills: props.location.state.skills,\r\n                  freelancer_ids: props.location.state.freelancer_ids,\r\n                  category: props.location.state.category,\r\n                }\r\n        \r\n            // console.log(\"form_data\",data)\r\n        dispatch(saveLeads(data)).then((res)=> {\r\n            // console.log(\"res\",res)\r\n            if(res && res.data.status === 200) {\r\n               NotificationManager.success(res.data.message, 'Success');\r\n               props.history.push('/');\r\n            }else{\r\n               NotificationManager.error(res.data.message, 'Error');  \r\n            }\r\n        })\r\n      }\r\n    }\r\n    \r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n    // console.log(\"props.location.state\",props.location.state)\r\n    return(\r\n       <section className=\"job-information-area ptb-100\">\r\n          <div className=\"container\">\r\n          \r\n            <div className=\"section-title\">\r\n              <span>Our talent experts will connect with you to help you find the team you require.</span>\r\n              <h2>How can we reach you ?</h2>\r\n            </div>      \r\n          \r\n          \r\n            <div className=\"job-information\">\r\n              <form className=\"resume-info\" onSubmit={handleSave}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"form-group\">\r\n                      <label>Name<span className=\"text-danger\">*</span></label>\r\n                      <input className=\"form-control\" type=\"text\" name=\"name\" onChange={handleChange} required/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"form-group\">\r\n                      <label>Company Name<span className=\"text-danger\">*</span></label>\r\n                      <input className=\"form-control\" type=\"text\" name=\"company_name\" onChange={handleChange} required/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Business Email<span className=\"text-danger\">*</span></label>\r\n                      <input className=\"form-control\" type=\"email\" name=\"business_email\" onChange={handleChange} required/>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"col-lg-6 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Phone Number<span className=\"text-danger\">*</span></label>\r\n                      <input className=\"form-control\" type=\"phone\" name=\"phone_number\" onChange={handleChange} required/>\r\n                    </div>\r\n                  </div>              \r\n\r\n                  <div className=\"col-lg-12 col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <label>Timezone<span className=\"text-danger\">*</span></label>\r\n                      <Select \r\n                          name=\"timezone\"\r\n                          options={TIMEZONES}\r\n                          onChange={(value) => handleSelect('timezone', value)} \r\n                          value={state.timezone}\r\n                          labelField=\"time\"\r\n                          valueField=\"time\"\r\n                          required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"form-group checkboxs\">\r\n                      <input type=\"checkbox\" id=\"chb2\" name=\"checked\" checked={state.checked} onChange={handleChange}/>\r\n                      <p>\r\n                        By clicking checkbox, you agree to our <a href=\"#\">Terms & Conditions</a> And <a href=\"#\">Privacy Policy.</a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-lg-12\">\r\n                    <button className=\"default-btn\" disabled={loader}>Submit </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(ClientSignup);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\hrActions.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\category.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\skills.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\languages.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditAboutFreelancer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditEducationFreelancer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditUserFreelancer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditContactFreelancer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSocialFreelancer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditProjectFreelancer.js",["273","274"],"import React from 'react';\r\nimport { Modal,Row,Col } from 'react-bootstrap';\r\nimport Select from 'react-select-me';\r\nimport 'react-select-me/lib/ReactSelectMe.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\n\r\nfunction EditProjectFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n    const technology_options = [\r\n                              { value: 'Salesforce', label: 'Salesforce' },\r\n                              { value: 'ROR', label: 'ROR' },\r\n                              { value: 'React', label: 'React' },\r\n                              { value: 'IOS', label: 'IOS' },\r\n                              { value: 'NodeJS', label: 'NodeJS' },\r\n                              { value: 'HTML', label: 'HTML' },\r\n                              { value: 'CSS', label: 'CSS' },\r\n                              { value: 'JavaScript', label: 'JavaScript' },\r\n                              { value: 'Rails', label: 'Rails' },\r\n                              { value: 'ERP', label: 'ERP' },\r\n                              { value: 'Postgres', label: 'Postgres' },\r\n                              { value: 'Swift', label: 'Swift' },\r\n                              { value: 'Objective C', label: 'Objective C' },\r\n                              { value: 'Express', label: 'Express' },\r\n                              { value: 'Redux', label: 'Redux' },\r\n                              { value: 'Flux', label: 'Flux' }, \r\n                            ]\r\n    var selectedValues = []\r\n    var technologies = props.state.technologies.split(',')\r\n    technologies.length > 0 && technologies.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\r\n\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('projectShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>             \r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={6}>\r\n\t\t        \t<div className=\"form-group\">\r\n\t\t\t            <label>Title</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"title\" \r\n                            onChange={(e) => props.handleProject(e)} \r\n                            required\r\n                            value={props.state.title}\r\n                        />\r\n                    </div>\r\n\t\t        </Col>\r\n\t\t        \r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>URL</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"project_link\" \r\n                            onChange={(e) => props.handleProject(e)} \r\n                            value={props.state.project_link}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n                        <label>Summary</label>\r\n                        <textarea \r\n                            className=\"form-control\" \r\n                            rows=\"4\"\r\n                            name=\"summary\" \r\n                            onChange={(e) => props.handleProject(e)}\r\n                            required\r\n                            value={props.state.summary}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                </Col>\r\n                \r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Technologies</label>\r\n                        <Multiselect\r\n                          options={technology_options}\r\n                          displayValue=\"value\"\r\n                          onSelect={props.onSelectProject} \r\n                          onRemove={props.onRemoveProject} \r\n                          selectedValues={selectedValues}\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Start Date</label>\r\n                        <div className=\"input-group date\" id=\"datetimepicker\">\r\n                            <DatePicker\r\n                            selected={new Date(props.state.start_date || '')}\r\n                            onChange={(date) => props.handleProjectDateChange('start_date', date)}\r\n                            className=\"form-control mn_input post-job-boxes\"\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            required\r\n                            />\r\n                            <span className=\"input-group-addon\"></span>\r\n                            <i className=\"bx bx-calendar\"></i>\r\n                        </div>\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n                        <label>End Date</label>\r\n                        <div className=\"input-group date\" id=\"datetimepicker\">\r\n                            <DatePicker\r\n                            selected={new Date(props.state.end_date  || '')}\r\n                            onChange={(date) => props.handleProjectDateChange('end_date', date)}\r\n                            className=\"form-control mn_input post-job-boxes\"\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            required\r\n                            />\r\n                            <span className=\"input-group-addon\"></span>\r\n                            <i className=\"bx bx-calendar\"></i>\r\n                        </div>\r\n                    </div>\r\n                </Col>                            \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('projectShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleProjectSave(props.state.new)}>Save</button>\r\n\t\t    </Modal.Footer>\r\n    \r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditProjectFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditExperienceFreelancer.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditSkillFreelancer.js",["275"],"import React from 'react';\r\nimport { Modal,Row,Col } from 'react-bootstrap';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport SKILLS from \"../../constants/skills\";\r\n\r\n\r\nfunction EditSkillFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\tvar selectedValues = []\r\n\tvar skills = props.state.additional_information_attributes.skills.split(',')\r\n\tskills.length > 0 && skills.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\r\n\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('skillShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>\t\t\t\t\r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n                    \t<label>Skills</label>\r\n                        <Multiselect\r\n\t\t\t\t\t\t  options={SKILLS}\r\n\t\t\t\t\t\t  displayValue=\"value\"\r\n\t\t\t\t\t\t  onSelect={props.onSelectSkill} \r\n\t\t\t\t\t\t  onRemove={props.onRemoveSkill} \r\n\t\t\t\t\t\t  selectedValues={selectedValues}\r\n\t\t\t\t\t\t/>\r\n\t\t\t        </div>\r\n\t\t        </Col>                                \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('skillShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleSkillUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditSkillFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\EditForm\\EditOverviewFreelancer.js",["276"],"import React from 'react';\r\nimport { Modal,Row,Col } from 'react-bootstrap';\r\n// import Select from \"react-dropdown-select\";\r\nimport Select from 'react-select-me';\r\nimport 'react-select-me/lib/ReactSelectMe.css';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport LANGUAGES from \"../../constants/languages\";\r\nimport CATEGORY from \"../../constants/category\";\r\n// import SKILLS from \"../../constants/skills\";\r\n\r\n\r\n\r\nfunction EditOverviewFreelancer(props) {\r\n\t// console.log(\"props\",props)\r\n\tconst gender_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Male', label: 'Male' },\r\n                              { value: 'Female', label: 'Female' }\r\n                            ]\r\n\r\n\tconst nationality_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Austria', label: 'Austria' },\r\n                              { value: 'Canada', label: 'Canada' },\r\n                              { value: 'India', label: 'India' },\r\n                              { value: 'United Kingdom', label: 'United Kingdom' },\r\n                              { value: 'United State', label: 'United State' },\r\n                            ]\r\n    var selectedValues = []\r\n    var languages = props.state.languages.split(',')\r\n    languages.length > 0 && languages.map((row)=> {selectedValues.push({value: row}) }); // \"A,B,C\"\r\n\treturn(\r\n\t\t<Modal show={props.show} onHide={() => props.handleClose('overviewShow')} className=\"Reset-Your-Password-Popup\" centered >\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Edit</Modal.Title>\r\n\t\t\t</Modal.Header>            \r\n\t\t    <Modal.Body>\r\n\t\t      <Row>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n                    \t<label>Category</label>\r\n                        <Select \r\n                            name=\"category\" \r\n                            options={CATEGORY}\r\n                            onChange={(value) => props.handleSelectAdditional('category', value)} \r\n                            value={props.state.additional_information_attributes.category}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Nationality</label>\r\n                        <Select \r\n                            name=\"nationality\" \r\n                            options={nationality_options}\r\n                            onChange={(value) => props.handleSelect('nationality', value)} \r\n                            value={props.state.nationality}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        \r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"row mb-4 mt-4\">\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Full Time \r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Full Time\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Full Time\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Part Time   \r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Part Time\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Part Time\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Contract\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Contract\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Contract\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                        <Col xs={12} md={3} onChange={props.handleAdditional}>\r\n                            <label className=\"single-check\">\r\n                                Office\r\n                                <input \r\n                                    type=\"radio\" \r\n                                    checked={props.state.additional_information_attributes.job_nature === \"Office\"} \r\n                                    name=\"job_nature\" \r\n                                    value=\"Office\" required/>\r\n                                <span className=\"checkmark\"></span>\r\n                            </label>\r\n                        </Col>\r\n                    </div>\r\n                </Col> \r\n\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Gender</label>\r\n                        <Select \r\n                            name=\"gender\" \r\n                            options={gender_options}\r\n                            onChange={(value) => props.handleSelect('gender', value)} \r\n                            value={props.state.gender}\r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col> \r\n\t\t        \r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Total Experience</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"total_experience\"\r\n                            value={props.state.total_experience}\r\n                            onChange={props.handleChange} \r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\t\t        <Col xs={12} md={6}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Expected Salary</label>\r\n                        <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"expected_salary\"\r\n                            value={props.state.additional_information_attributes.expected_salary}\r\n                            onChange={props.handleAdditional} \r\n                            required\r\n                        />\r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n\r\n\t\t        <Col xs={12} md={12}>\r\n                    <div className=\"form-group\">\r\n\t\t\t            <label>Language</label>  \r\n                        <Multiselect\r\n                          options={LANGUAGES}\r\n                          displayValue=\"value\"\r\n                          onSelect={props.onSelectLanguage} \r\n                          onRemove={props.onRemoveLanguage} \r\n                          selectedValues={selectedValues}\r\n                        /> \r\n\t\t\t        </div>\r\n\t\t        </Col>\r\n                      \r\n\t\t      </Row>\r\n\t\t    </Modal.Body>\r\n\t\t    <Modal.Footer>\r\n\t\t      <button className=\"default-btn default-btn btn-two\" onClick={() => props.handleClose('overviewShow')}>Close</button>\r\n\t\t      <button className=\"default-btn default-btn\" onClick={() => props.handleOverViewUpdate()}>Save</button>\r\n\t\t    </Modal.Footer>\r\n\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default EditOverviewFreelancer;","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\components\\Loader\\Skelton.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\timezones.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\HR\\Leads.js",["277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { withRouter } from \"react-router-dom\";\r\n// import {NotificationManager} from 'react-notifications';\r\nimport _ from 'lodash';\r\nimport ReactTable from 'react-table-v6'\r\n// import TableListingLoader from \"../../components/Loader/Skelton\"\r\nimport { fetchLeads } from '../../actions/hrActions';\r\nimport profileImageThumbnail from \"../../assets/images/profile.png\"\r\n// import Tabs from 'react-responsive-tabs';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n\r\nfunction Leads(props) {\r\n\r\n    const [state , setState] = useState({\r\n        from_data: \"\",\r\n        to_data:\"\",\r\n        total_count: \"\",\r\n        total_pages: \"\",\r\n        users: [],\r\n        page_number: 1,\r\n        per_page: 10,\r\n        pages  : 0,\r\n        filtered: [],\r\n        filterAll: '',\r\n        page: '',\r\n        pageSize: ''  \r\n      })\r\n\r\n    const [model, setModel] = useState({\r\n      modelShow: false,\r\n      modelData: ''\r\n    })\r\n\r\n    const handleShow = (data) => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            modelShow : true,\r\n            modelData : data \r\n        }))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            modelShow : false,\r\n            modelData : ''\r\n        }))\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n      // fetchData();\r\n    }, []);\r\n\r\n    const fetchData = (page, pageSize, sorted, filtered) => {\r\n      console.log(page, pageSize, sorted, filtered)\r\n      let data = `?page_number=${page+1}&per_page=${pageSize}`\r\n      setState(prevState => ({\r\n                ...prevState,\r\n                page: page,\r\n                pageSize: pageSize\r\n              }))\r\n      // Update the document title using the browser API\r\n      dispatch(fetchLeads(data)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n             setState(prevState => ({\r\n                ...prevState,\r\n                from_data: res.data.from_data,\r\n                to_data: res.data.to_data,\r\n                total_count: res.data.total_count,\r\n                total_pages: res.data.total_pages,\r\n                users: res.data.clients\r\n            }))\r\n          }\r\n      })\r\n    }\r\n\r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n    // console.log(\"state.users\",loader)\r\n\r\n    const handleDelete = (uuid) => {\r\n    //   dispatch(deleteFreelancer(uuid)).then((res)=> {\r\n    //       if(res && res.status === 200) {\r\n    //         // console.log(\"res\",res)\r\n    //         NotificationManager.success(res.message, 'Delete');  \r\n    //         fetchData(state.page, state.pageSize, '', '');\r\n    //       }\r\n    //   }) \r\n    }\r\n\r\n    return(\r\n            // Start Root Div\r\n            <div>\r\n                {/* Start Page Title Area */}\r\n                <div className=\"page-title-area\">\r\n                  <div className=\"container\">\r\n                      <div className=\"page-title-content\">\r\n                          <div className=\"row\">\r\n                              <div className=\"col-md-6\">\r\n                                  <h2>Leads</h2>                    \r\n                              </div>            \r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              {/* End Page Title Area */}\r\n              {/* Start Freelancers List Area */}\r\n              <section className=\"mt-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"\">\r\n                                <ul className=\"nav nav-tabs nav-justified freelancers-list-tabs\" id=\"pills-tab\" role=\"tablist\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" id=\"pills-all-tab\" data-toggle=\"pill\" href=\"#pills-all\" role=\"tab\" aria-controls=\"pills-all\" aria-selected=\"true\"><i class=\"bx bx-sitemap\"></i> All Leads <span className=\"tabs-counter-value\">{\"(\"+state.total_count+\")\"}</span> </a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-scheduling-tab\" data-toggle=\"pill\" href=\"#pills-scheduling\" role=\"tab\" aria-controls=\"pills-scheduling\" aria-selected=\"false\"><i class=\"bx bx-user-plus\"></i> Assign To HR <span className=\"tabs-counter-value\"></span> </a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-Interview-tab\" data-toggle=\"pill\" href=\"#pills-Interview\" role=\"tab\" aria-controls=\"pills-Interview\" aria-selected=\"false\"><i class=\"bx bx-microphone\"></i> Technical Person <span className=\"tabs-counter-value\"></span> </a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-Rejected-tab\" data-toggle=\"pill\" href=\"#pills-Rejected\" role=\"tab\" aria-controls=\"pills-Rejected\" aria-selected=\"false\"><i class=\"bx bx-move-horizontal\"></i> Running <span className=\"tabs-counter-value\"></span> </a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-Rejected-tab\" data-toggle=\"pill\" href=\"#pills-Rejected\" role=\"tab\" aria-controls=\"pills-Rejected\" aria-selected=\"false\"><i class=\"bx bx-block\"></i> Rejected <span className=\"tabs-counter-value\"></span> </a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-Rejected-tab\" data-toggle=\"pill\" href=\"#pills-Rejected\" role=\"tab\" aria-controls=\"pills-Rejected\" aria-selected=\"false\"><i class=\"bx bx-check-double\"></i> Closed <span className=\"tabs-counter-value\"></span> </a>\r\n                                    </li>                                                                                                             \r\n                                </ul>\r\n                                <div className=\"tab-content\" id=\"pills-tabContent\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"pills-all\" role=\"tabpanel\" aria-labelledby=\"pills-all-tab\">\r\n                                      \r\n                                        <ReactTable\r\n                                            data={state.users}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                    {  \r\n                                                            Header      : 'Sr.',\r\n                                                            accessor    : 'id',\r\n                                                            className   : 'grid-header',\r\n                                                            Cell: row => {\r\n                                                                return(<span>{row.viewIndex+1}</span>)\r\n                                                            }\r\n                                                            \r\n                                                    },\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> Name\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'name',\r\n                                                        Cell: row => {\r\n                                                            return  <span>{row.original.name}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> Company Name\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'company_name',\r\n                                                        Cell: row => {\r\n                                                            return  <span>{row.original.company_name}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> Business Email\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'business_email',\r\n                                                        Cell: row => {\r\n                                                            return  <span>{row.original.business_email}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> Category\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'category',\r\n                                                        Cell: row => {\r\n                                                            return  <span>{row.original.category}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> Time Zone\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'timezone',\r\n                                                        Cell: row => {\r\n                                                            return  <span>{row.original.timezone}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> Phone\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'phone_number',\r\n                                                        Cell: row => {\r\n                                                            return  <span>{row.original.phone_number}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: 'Status',\r\n                                                        accessor: 'status',\r\n                                                        Cell: row => {\r\n                                                            return <span><span className=\"status-indicator status-indicator-draft\"></span> Open</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: 'Created Date',\r\n                                                        accessor: 'created_at',\r\n                                                        Cell: row => {\r\n                                                            return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: 'Action',\r\n                                                        accessor: 'uuid',\r\n                                                        Cell: row => {\r\n                                                            return <div className=\"\">\r\n                                                                                <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                        <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                </div>\r\n                                                                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                <a className=\"dropdown-item\" href=\"\">Assign</a>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                        }\r\n                                                    }\r\n                                                ]}\r\n                                                defaultSorted={[\r\n                                                        {\r\n                                                                id: 'first_name',\r\n                                                                desc: false\r\n                                                        } \r\n                                                ]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-draft\" role=\"tabpanel\" aria-labelledby=\"pills-draft-tab\">\r\n                                        <ReactTable\r\n                                            data={state.users}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader      : 'Sr.',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor    : 'id',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName   : 'grid-header',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterable  : false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterMethod: (filter, row) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn row[filter.id].includes(filter.value);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <span>{row.original.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Company Name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'company_name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <span>{row.original.company_name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Business Email\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'business_email',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <span>{row.original.business_email}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n                                                                                            },\r\n                                                                                            {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Category\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'category',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <span>{row.original.category}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n                                                                                            {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Time Zone\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'timezone',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <span>{row.original.timezone}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n                                                                                            {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: () => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa-tasks\" /> Phone\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'phone_number',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn  <span>{row.original.phone_number}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Status',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'status',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Created Date',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'created_at',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHeader: 'Action',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccessor: 'uuid',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCell: row => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <div className=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='bx bx-dots-horizontal-rounded'></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultSorted={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'first_name',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdesc: false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />\r\n\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-scheduling\" role=\"tabpanel\" aria-labelledby=\"pills-scheduling-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Interview\" role=\"tabpanel\" aria-labelledby=\"pills-Interview-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"} onClick={() => handleShow(row.original)}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Rejected\" role=\"tabpanel\" aria-labelledby=\"pills-Rejected-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Assessment\" role=\"tabpanel\" aria-labelledby=\"pills-Assessment-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-References\" role=\"tabpanel\" aria-labelledby=\"pills-References-tab\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"freelancers-list-table table table-striped\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">\r\n                                                        <div className=\"checkboxs\">\r\n                                                            <input type=\"checkbox\" id=\"chb2\" />\r\n                                                        </div>\r\n                                                    </th>\r\n                                                    <th scope=\"col\">APPLICATION # <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">APPLICANT <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">STATUS <i className='bx bx-sort'></i></th>\r\n                                                    \r\n                                                    <th scope=\"col\">Date <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\"></th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan=\"7\">\r\n                                                        <div className=\"text-center\"><h6>No Data Found</h6></div>\r\n                                                    </td>\r\n                                                </tr>                                                                                                                  \r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Decision\" role=\"tabpanel\" aria-labelledby=\"pills-Decision-tab\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"freelancers-list-table table table-striped\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">\r\n                                                        <div className=\"checkboxs\">\r\n                                                            <input type=\"checkbox\" id=\"chb2\" />\r\n                                                        </div>\r\n                                                    </th>\r\n                                                    <th scope=\"col\">APPLICATION # <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">APPLICANT <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\">STATUS <i className='bx bx-sort'></i></th>\r\n                                                    \r\n                                                    <th scope=\"col\">Date <i className='bx bx-sort'></i></th>\r\n                                                    <th scope=\"col\"></th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                <tr>\r\n                                                    <td colSpan=\"7\">\r\n                                                        <div className=\"text-center\"><h6>No Data Found</h6></div>\r\n                                                    </td>\r\n                                                </tr>                                                                                                                  \r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>                                \r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-Job-offer-and-contract\" role=\"tabpanel\" aria-labelledby=\"pills-Job-offer-and-contract-tab\">\r\n                                        <ReactTable\r\n                                            data={[]}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                                                            {  \r\n                                                                                                    Header      : 'Sr.',\r\n                                                                                                    accessor    : 'id',\r\n                                                                                                    className   : 'grid-header',\r\n                                                                                                    filterable  : false,\r\n                                                                                                    filterMethod: (filter, row) => {\r\n                                                                                                            return row[filter.id].includes(filter.value);\r\n                                                                                                    }\r\n                                                                                                    \r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Name\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'first_name',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name +' '+row.original.last_name}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: () => (\r\n                                                                                                    <span>\r\n                                                                                                        <i className=\"fa-tasks\" /> Title\r\n                                                                                                    </span>\r\n                                                                                                ),\r\n                                                                                                accessor: 'title',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <a href={\"/freelancer-detail/\"+row.original.uuid}>{_.get(row.original.additional_information, 'title', [profileImageThumbnail])}</a>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Status',\r\n                                                                                                accessor: 'status',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><span className=\"status-indicator status-indicator-draft\"></span> Draft</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Created Date',\r\n                                                                                                accessor: 'created_at',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                                                                }\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                Header: 'Action',\r\n                                                                                                accessor: 'uuid',\r\n                                                                                                Cell: row => {\r\n                                                                                                    return <div className=\"\">\r\n                                                                                                                        <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                                                                <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"#\"}>Schedule Interview</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/freelancer-detail/\"+row.original.uuid}>View</a>\r\n                                                                                                                            <a className=\"dropdown-item\" href={\"/editfreelancer/\"+row.original.uuid}>Edit</a>\r\n                                                                                                                            <a className=\"dropdown-item\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                }\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        defaultSorted={[\r\n                                                                                                {\r\n                                                                                                        id: 'first_name',\r\n                                                                                                        desc: false\r\n                                                                                                } \r\n                                                                                        ]}                                                                                      \r\n                                            onFetchData={(state, instance) => {\r\n                                                fetchData(state.page, state.pageSize, state.sorted, state.filtered);\r\n                                            }}\r\n                                        />                                \r\n                                    </div>                                                                                                                                            \r\n                                </div> \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n\r\n                <Modal show={model.modelShow} onHide={() => handleClose()} className=\"\" centered >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Schedule Interview</Modal.Title>\r\n                    </Modal.Header>\t\t\t\r\n                    <Modal.Body>\r\n                        <form className=\"\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Interview For</h6>\r\n                                <div className=\"form-group\">\r\n                                    <select>\r\n                                    <option value=\"1\">Microsoft</option>\r\n                                    <option value=\"2\">Symantec</option>\r\n                                    <option value=\"3\">SAP</option>\r\n                                    <option value=\"4\">IBM</option>\r\n                                    <option value=\"5\">SEO</option>\r\n                                    </select>\r\n                                </div>                            \r\n                                </div>\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Category</h6>\r\n                                <div className=\"form-group\">\r\n                                    <select>\r\n                                        <option value=\"1\">UX/UI Designer</option>\r\n                                        <option value=\"2\">Web Developer</option>\r\n                                        <option value=\"3\">Web Designer</option>\r\n                                        <option value=\"4\">Software Developer</option>\r\n                                        <option value=\"5\">SEO</option>\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>Interviewer</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"height\">\r\n                                            <option value=\"1\">Poonam Sharma</option>\r\n                                            <option value=\"2\">Shaifali Jariwala</option>\r\n                                            <option value=\"2\">Alka Shakhala</option>\r\n                                            <option value=\"2\">Puja Shrivastava</option>\r\n                                            <option value=\"2\">Neelam Dabar</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>Interview day</h6>\r\n                                    <form className=\"resume-info\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-group date\" id=\"\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"12/11/2020\" />\r\n                                        </div>\t\r\n                                    </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>From hours</h6>\r\n                                    <form className=\"resume-info\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-group date\" id=\"\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"12:30\" />\r\n                                        </div>\t\r\n                                    </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <h6>To hours</h6>\r\n                                    <form className=\"resume-info\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"input-group date\" id=\"\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"14:30\" />\r\n                                        </div>\t\r\n                                    </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Email</h6>\r\n                                <form className=\"resume-info\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group date\" id=\"\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Email Id\" disabled />\r\n                                    </div>\t\r\n                                </div>\r\n                                </form>                          \r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6\">\r\n                                <h6>Phone</h6>\r\n                                <form className=\"resume-info\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group date\" id=\"\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Contact Number\" disabled />\r\n                                    </div>\t\r\n                                </div>\r\n                                </form>                          \r\n                            </div>                          \r\n                            \r\n                            </div>  \r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <h6>Note</h6>                          \r\n                                    <div className=\"form-group\">\r\n                                    <textarea name=\"message\" className=\"form-control\" rows=\"4\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <button className=\"default-btn default-btn btn-two\" onClick={() => handleClose()}>Close</button>\r\n                    <button className=\"default-btn default-btn\">Save</button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </section>\r\n              {/* End Freelancers List Area */}\r\n            </div>\r\n            // End Root Div\r\n    )\r\n}\r\n\r\nexport default withRouter(Leads);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\constants\\degree.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Admin\\Users.js",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {NotificationManager} from 'react-notifications';\r\nimport _ from 'lodash';\r\nimport ReactTable from 'react-table-v6'\r\n// import TableListingLoader from \"../../components/Loader/Skelton\"\r\nimport { fetchFreelancers, deleteFreelancer } from '../../actions/hrActions';\r\nimport profileImageThumbnail from \"../../assets/images/profile.png\"\r\n// import Tabs from 'react-responsive-tabs';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n\r\nfunction Users(props) {\r\n\r\n    const [state , setState] = useState({\r\n        from_data: \"\",\r\n        to_data:\"\",\r\n        total_count: \"\",\r\n        total_pages: \"\",\r\n        users: [],\r\n        page_number: 1,\r\n        per_page: 10,\r\n        pages  : 0,\r\n        filtered: [],\r\n        filterAll: '',\r\n        page: '',\r\n        pageSize: '',\r\n        role_name: 'hr',\r\n        tab: 'hr'\r\n    })\r\n\r\n    const initialModelState = {\r\n        modelShow: false,\r\n        // interview_lead_id: '',\r\n        interviewer: '',\r\n        interview_date: '',\r\n        interview_from_time: '',\r\n        interview_to_time: '',\r\n        interview_uuid: '',\r\n        interview_email: '',\r\n        interview_phone: '',\r\n        interview_category: '',\r\n        interview_note: ''\r\n    }\r\n    const [model, setModel] = useState(initialModelState)\r\n\r\n    const handleShow = (data) => {\r\n        // console.log(\"data\",data)\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            modelShow : true,\r\n            interview_uuid: data.uuid,\r\n            interview_email: data.email,\r\n            interview_phone: data.phone,\r\n            interview_category: data.additional_information.category,\r\n        }))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModel({ ...initialModelState });\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        // console.log(\"time\",time)\r\n        const {name , value} = e.target   \r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        }))\r\n    }\r\n    \r\n    const handleDateChange = (name, time) => {\r\n        // console.log(\"time\",time)\r\n        setModel(prevState => ({\r\n            ...prevState,\r\n            [name] : time\r\n        }))\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n      // fetchData();\r\n    }, []);\r\n\r\n    const fetchData = (page, pageSize, sorted, filtered, tab) => {\r\n    //   console.log(page, pageSize, sorted, filtered)\r\n      let data = `?page_number=${page+1}&per_page=${pageSize}&role_name=${tab}`\r\n      setState(prevState => ({\r\n                ...prevState,\r\n                page: page,\r\n                pageSize: pageSize\r\n              }))\r\n      // Update the document title using the browser API\r\n      dispatch(fetchFreelancers(data)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res.data)\r\n             setState(prevState => ({\r\n                ...prevState,\r\n                from_data: res.data.from_data,\r\n                to_data: res.data.to_data,\r\n                total_count: res.data.total_count,\r\n                total_pages: res.data.total_pages,\r\n                users: res.data.users\r\n            }))\r\n          }\r\n      })\r\n    }\r\n\r\n    const activeTab = (tab) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            tab: tab,\r\n            total_count: \"\"\r\n        }))\r\n        fetchData(0, 10, '', '', tab);\r\n    }\r\n\r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n    // console.log(\"state.users\",loader)\r\n\r\n    const handleDelete = (uuid) => {\r\n      dispatch(deleteFreelancer(uuid)).then((res)=> {\r\n          if(res && res.status === 200) {\r\n            // console.log(\"res\",res)\r\n            NotificationManager.success(res.message, 'Delete');  \r\n            fetchData(state.page, state.pageSize, '', '', state.tab);\r\n          }\r\n      }) \r\n    }\r\n    // console.log(\"interView\",model)\r\n    return(\r\n            // Start Root Div\r\n            <div>\r\n                {/* Start Page Title Area */}\r\n                <div className=\"page-title-area\">\r\n                  <div className=\"container\">\r\n                      <div className=\"page-title-content\">\r\n                          <div className=\"row\">\r\n                              <div className=\"col-md-6\">\r\n                                  <h2>Users</h2>                    \r\n                              </div>\r\n                              <div className=\"col-md-6\">\r\n                                <a href=\"/adduser\" className=\"default-btn float-right\">\r\n                                        Add New\r\n                                </a>\r\n                                {/* <a className=\"default-btn filter-button\" href=\"#\" role=\"button\"  data-toggle=\"modal\" data-target=\"#freelancermorefilter\">\r\n                                        <i className='bx bx-dots-vertical-rounded'></i>\r\n                                </a> */}\r\n                              </div>                    \r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              {/* End Page Title Area */}\r\n              {/* Start Freelancers List Area */}\r\n              <section className=\"mt-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"\">\r\n                                <ul className=\"nav nav-tabs nav-justified freelancers-list-tabs\" id=\"pills-tab\" role=\"tablist\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" onClick={() => activeTab('hr')} id=\"pills-hr-tab\" data-toggle=\"pill\" href=\"#pills-hr\" role=\"tab\" aria-controls=\"pills-hr\" aria-selected=\"false\"><i class=\"bx bxs-user\"></i> HR <span className=\"tabs-counter-value\">{state.tab === 'hr' ? \"(\"+state.total_count+\")\" : \"\"}</span> </a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-interviewer-tab\" onClick={() => activeTab('interviewer')} data-toggle=\"pill\" href=\"#pills-interviewer\" role=\"tab\" aria-controls=\"pills-interviewer\" aria-selected=\"false\"><i class=\"bx bxs-microphone\"></i> Interviewer <span className=\"tabs-counter-value\">{state.tab === 'interviewer' ? \"(\"+state.total_count+\")\" : \"\"}</span> </a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" id=\"pills-maker-tab\" onClick={() => activeTab('matchmaker')} data-toggle=\"pill\" href=\"#pills-maker\" role=\"tab\" aria-controls=\"pills-maker\" aria-selected=\"false\"><i class=\"bx bx-transfer\"></i> Match Maker <span className=\"tabs-counter-value\">{state.tab === 'matchmaker' ? \"(\"+state.total_count+\")\" : \"\"}</span> </a>\r\n                                    </li>                                                                                                             \r\n                                </ul>\r\n                                <div className=\"tab-content\" id=\"pills-tabContent\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"pills-hr\" role=\"tabpanel\" aria-labelledby=\"pills-hr-tab\">\r\n                                      \r\n                                        <ReactTable\r\n                                            data={state.users}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> First Name\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'first_name',\r\n                                                        Cell: row => {\r\n                                                            return <a><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name}</a>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: () => (\r\n                                                            <span>\r\n                                                                <i className=\"fa-tasks\" /> Last Name\r\n                                                            </span>\r\n                                                        ),\r\n                                                        accessor: 'last_name',\r\n                                                        Cell: row => {\r\n                                                            return <a> {row.original.last_name}</a>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: 'Created Date',\r\n                                                        accessor: 'created_at',\r\n                                                        Cell: row => {\r\n                                                            return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                        }\r\n                                                    },\r\n                                                    {\r\n                                                        Header: 'Action',\r\n                                                        accessor: 'uuid',\r\n                                                        Cell: row => {\r\n                                                            return <div className=\"\">\r\n                                                                                <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                        <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                                </div>\r\n                                                                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                    <a className=\"dropdown-item\" href={\"/edituser/\"+row.original.uuid}>Edit</a>\r\n                                                                                    <a className=\"dropdown-item\" href=\"\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                        }\r\n                                                    }\r\n                                                ]}\r\n                                                defaultSorted={[\r\n                                                        {\r\n                                                                id: 'first_name',\r\n                                                                desc: false\r\n                                                        } \r\n                                                ]}\t\r\n                                            id={state.tab}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                            onFetchData={(state, instance) => {\r\n                                                if(state.id === 'hr'){\r\n                                                    fetchData(state.page, state.pageSize, state.sorted, state.filtered, state.id);\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"tab-pane fade\" id=\"pills-interviewer\" role=\"tabpanel\" aria-labelledby=\"pills-interviewer-tab\">\r\n                                        <ReactTable\r\n                                            data={state.users}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                {\r\n                                                    Header: () => (\r\n                                                        <span>\r\n                                                            <i className=\"fa-tasks\" /> First Name\r\n                                                        </span>\r\n                                                    ),\r\n                                                    accessor: 'first_name',\r\n                                                    Cell: row => {\r\n                                                        return <a><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name}</a>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: () => (\r\n                                                        <span>\r\n                                                            <i className=\"fa-tasks\" /> Last Name\r\n                                                        </span>\r\n                                                    ),\r\n                                                    accessor: 'last_name',\r\n                                                    Cell: row => {\r\n                                                        return <a> {row.original.last_name}</a>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: () => (\r\n                                                        <span>\r\n                                                            <i className=\"fa-tasks\" /> Category\r\n                                                        </span>\r\n                                                    ),\r\n                                                    accessor: 'category',\r\n                                                    Cell: row => {\r\n                                                        return <a>{_.get(row.original.additional_information, 'category', [''])} </a>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: 'Created Date',\r\n                                                    accessor: 'created_at',\r\n                                                    Cell: row => {\r\n                                                        return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: 'Action',\r\n                                                    accessor: 'uuid',\r\n                                                    Cell: row => {\r\n                                                        return <div className=\"\">\r\n                                                                            <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                    <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                            </div>\r\n                                                                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                <a className=\"dropdown-item\" href={\"/edituser/\"+row.original.uuid}>Edit</a>\r\n                                                                                <a className=\"dropdown-item\" href=\"\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                    }\r\n                                                }\r\n                                            ]}\r\n                                            defaultSorted={[\r\n                                                    {\r\n                                                            id: 'first_name',\r\n                                                            desc: false\r\n                                                    } \r\n                                            ]}                                                                                     \r\n                                            id={state.tab}\r\n                                            onFetchData={(state, instance) => {\r\n                                                if(state.id === 'interviewer'){\r\n                                                    fetchData(state.page, state.pageSize, state.sorted, state.filtered, state.id);\r\n                                                }\r\n                                            }}\r\n\r\n                                        />\r\n                                    </div> \r\n                                    <div className=\"tab-pane fade\" id=\"pills-maker\" role=\"tabpanel\" aria-labelledby=\"pills-maker-tab\">\r\n                                        <ReactTable\r\n                                            data={state.users}\r\n                                            sortable={true}\r\n                                            multiSort={true}\r\n                                            resizable={true}\r\n                                            loading={loader}\r\n                                            loadingText= {'Data Loading .......'}\r\n                                            noDataText=\"No Data Found !!\"\r\n                                            // filterable\r\n                                            defaultFilterMethod={(filter, row) =>String(row[filter.id]) === filter.value}\r\n                                            filtered={state.filtered}\r\n                                            defaultPageSize={10}\r\n                                            minRows= {state.users}\r\n                                            className=\"py-3 px-3\"\r\n                                            Sorted\r\n                                            pages={state.total_pages}\r\n                                            showPagination={true}\r\n                                            showPaginationTop={false}\r\n                                            showPaginationBottom={true}\r\n                                            pageSizeOptions={[10, 20, 50]}\r\n                                            // manual // For server side pagination\r\n                                            showPageJump={ true}\r\n                                            collapseOnSortingChange={ true}\r\n                                            columns={[\r\n                                                {\r\n                                                    Header: () => (\r\n                                                        <span>\r\n                                                            <i className=\"fa-tasks\" /> First Name\r\n                                                        </span>\r\n                                                    ),\r\n                                                    accessor: 'first_name',\r\n                                                    Cell: row => {\r\n                                                        return <a><img src={row.original.user_image ? row.original.user_image : profileImageThumbnail} className=\"freelancers-list-profile-thumbnail\" /> {row.original.first_name}</a>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: () => (\r\n                                                        <span>\r\n                                                            <i className=\"fa-tasks\" /> Last Name\r\n                                                        </span>\r\n                                                    ),\r\n                                                    accessor: 'last_name',\r\n                                                    Cell: row => {\r\n                                                        return <a> {row.original.last_name}</a>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: () => (\r\n                                                        <span>\r\n                                                            <i className=\"fa-tasks\" /> Category\r\n                                                        </span>\r\n                                                    ),\r\n                                                    accessor: 'category',\r\n                                                    Cell: row => {\r\n                                                        return <a> {_.get(row.original.additional_information, 'category', [''])}</a>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: 'Created Date',\r\n                                                    accessor: 'created_at',\r\n                                                    Cell: row => {\r\n                                                        return <span><i className='bx bx-calendar' ></i> {new Date(row.original.created_at).toLocaleDateString()}</span>\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    Header: 'Action',\r\n                                                    accessor: 'uuid',\r\n                                                    Cell: row => {\r\n                                                        return <div className=\"\">\r\n                                                                            <div className=\"\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                                    <i className='bx bx-dots-horizontal-rounded'></i>\r\n                                                                            </div>\r\n                                                                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                                                                <a className=\"dropdown-item\" href={\"/edituser/\"+row.original.uuid}>Edit</a>\r\n                                                                                <a className=\"dropdown-item\" href=\"\" onClick={() => handleDelete(row.original.uuid)}>Delete</a>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                    }\r\n                                                }\r\n                                            ]}\r\n                                            defaultSorted={[\r\n                                                    {\r\n                                                            id: 'first_name',\r\n                                                            desc: false\r\n                                                    } \r\n                                            ]}                                                                                      \r\n                                            id={state.tab}\r\n                                            onFetchData={(state, instance) => {\r\n                                                if(state.id === 'matchmaker'){\r\n                                                    fetchData(state.page, state.pageSize, state.sorted, state.filtered, state.id);\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n                </div>    \r\n\r\n              </section>\r\n              {/* End Freelancers List Area */}\r\n            </div>\r\n            // End Root Div\r\n    )\r\n}\r\n\r\nexport default withRouter(Users);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Admin\\SaveUser.js",["313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import Select from \"react-dropdown-select\";\r\nimport Select from 'react-select-me';\r\nimport 'react-select-me/lib/ReactSelectMe.css';\r\nimport {NotificationManager} from 'react-notifications';\r\nimport csc from \"country-state-city\";\r\nimport { saveFreelancer, getFreelancer, updateFreelancer } from '../../actions/hrActions';\r\nimport LANGUAGES from \"../../constants/languages\";\r\nimport CATEGORY from \"../../constants/category\";\r\nimport SKILLS from \"../../constants/skills\";\r\nimport DEGREE from \"../../constants/degree\";\r\n\r\nfunction SaveUser(props) {\r\n\r\n    const initialState = {\r\n                        avatar: \"\",\r\n                        email:\"\",\r\n                        first_name: \"\",\r\n                        middle_name: \"\",\r\n                        last_name: \"\",\r\n                        phone: \"\",\r\n                        dob: \"\",\r\n                        gender: \"\",\r\n                        languages: \"\",\r\n                        total_experience: \"\",\r\n                        role_name: \"\",\r\n                        skip_password_validation: true,\r\n                        country: '',\r\n                        state: '',\r\n                        city: '',\r\n                        pincode: '',\r\n                        additional_information_attributes: {\r\n                            category:\"\",\r\n                            skype_id: \"\",\r\n                        }\r\n                    };\r\n    const [state , setState] = useState(initialState)\r\n\r\n    const initialEdState = {\r\n                education_level: \"\", \r\n                degree_title: \"\", \r\n                group: \"\", \r\n                institute_name: \"\", \r\n                result: \"\", \r\n                marks: \"\",\r\n                year_of_passing: \"\", \r\n                duration: \"\",\r\n                description: \"\"\r\n            }\r\n    const [education, setEducation] = useState([ initialEdState ])\r\n\r\n    const initialExState = {\r\n                company_name:\"\", \r\n                designation: \"\", \r\n                company_location: \"\",\r\n                employment_period: \"\",\r\n                description: \"\"\r\n            }\r\n\r\n    const [experience, setExperience] = useState([ initialExState ])\r\n    \r\n    const initialPrState = {\r\n                title: \"\", \r\n                start_date: \"\", \r\n                end_date: \"\", \r\n                technologies: \"\", \r\n                summary: \"\",\r\n                project_link: \"\"\r\n            }\r\n\r\n    const [project, setProject] = useState([ initialPrState ])\r\n    \r\n\r\n    const clearState = () => {\r\n        setState({ ...initialState });\r\n        setEducation([{ ...initialEdState }]);\r\n        setExperience([{ ...initialExState }]);\r\n        setProject([{ ...initialPrState }]);\r\n    };\r\n\r\n    const [errors , setError] = useState({\r\n        email: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        phone: \"\"\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value\r\n        }))\r\n\r\n        let valid = { \r\n                    // avatar: state.avatar,\r\n                    [name]: value\r\n                  }\r\n        checkEmpty(valid)           \r\n    }\r\n\r\n    const handleSelect = (name, value) => {\r\n    //   console.log(name,\"----\",value)\r\n    //   if(value.length === 0){\r\n    //     return false\r\n    //   } \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value.value\r\n        }))\r\n    }\r\n\r\n    const selectCurrentCountry = (name, value) => {\r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        // console.log(name,\"----\",value)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].name\r\n        }))\r\n\r\n        let stateArg = csc.getStatesOfCountry(value[0].isoCode);\r\n\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            stateArg : stateArg,\r\n            cityArg : [],\r\n            state: '',\r\n            city: ''\r\n        }))\r\n\r\n        // console.log(\"state\",state)\r\n        // const city = csc.getCitiesOfState(state.id)[0];\r\n    }\r\n\r\n    const selectCurrentState = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].name\r\n        }))\r\n\r\n        let cityArg = csc.getCitiesOfState(value[0].countryCode, value[0].isoCode);\r\n        // console.log(\"cityArg\",cityArg)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            cityArg : cityArg,\r\n            city: ''\r\n        }))\r\n    }\r\n\r\n    const selectCurrentCity = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value[0].name\r\n        }))\r\n    }\r\n\r\n    const onPhotoUpload = (event) => { \r\n    \r\n        const {name , value} = event.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : event.target.files[0]\r\n        }))\r\n    }; \r\n\r\n    const handleSelectLanguage = (name, value) => {\r\n      // console.log(name,\"----\",value.map(e => e.value).join(\",\")) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name] : value.map(e => e.value).join(\",\")\r\n        }))\r\n    }\r\n\r\n    const handleAdditional = (e) => {\r\n      // console.log(\"----\",e.target)\r\n        const {name , value} = e.target   \r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSelectAdditionalCat = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        // if(value.length === 0){\r\n        //     return false\r\n        // }\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value.value\r\n            }\r\n        })\r\n\r\n        // var filteredItems = SKILLS.filter(item => (\r\n        //     item.filter === value[0].value\r\n        //   ));\r\n        // // console.log(\"filteredItems\",filteredItems)\r\n        // setState(prevState => ({\r\n        //     ...prevState,\r\n        //     skillArg : filteredItems\r\n        // }))\r\n        \r\n    }\r\n\r\n    const handleSelectAdditional = (name, value) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n      if(name === 'skills'){\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value.map(e => e.value).join(\",\")\r\n            }\r\n        })\r\n      }else{\r\n\r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : value[0].value\r\n            }\r\n        })\r\n\r\n      }\r\n    }\r\n    // On file upload (click the upload button) \r\n    const onFileUpload = (event) => { \r\n    \r\n        const {name , value} = event.target   \r\n        setState({...state,  \r\n            additional_information_attributes: {\r\n                ...state.additional_information_attributes,\r\n                [name] : event.target.files[0]\r\n            }\r\n        })\r\n      // Details of the uploaded file \r\n      // console.log(this.state.selectedFile); \r\n      \r\n    }; \r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        if(id){\r\n          // Update the document title using the browser API\r\n          dispatch(getFreelancer(id)).then((res)=> {\r\n              if(res && res.status === 200) {\r\n                // console.log(\"res\",res.data)\r\n                let data = res.data.user    \r\n                setState(prevState => ({\r\n                    detail: res.data.user,\r\n                    avatar: \"\",\r\n                    email: data.email,\r\n                    first_name: data.first_name,\r\n                    middle_name: data.middle_name,\r\n                    last_name: data.last_name,\r\n                    phone: data.phone,\r\n                    dob: data.dob,\r\n                    gender: data.gender,\r\n                    total_experience: data.total_experience,\r\n                    role_name: data.current_role,\r\n                    additional_information_attributes: {\r\n                        category: data.additional_information.category,\r\n                        skype_id: data.additional_information.skype_id,\r\n                    }\r\n                }))\r\n\r\n                // setEducation(data.education_informations)\r\n                // setExperience(data.experience_informations)\r\n                // setProject(data.project_informations)\r\n              }\r\n          })\r\n        }\r\n    }\r\n\r\n    \r\n    const handleDateChange = (date) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            dob : date\r\n        }))\r\n    }\r\n\r\n\r\n    const addEducation = () => {\r\n        let edu = {\r\n                education_level: \"\", \r\n                degree_title: \"\", \r\n                group: \"\", \r\n                institute_name: \"\", \r\n                result: \"\", \r\n                marks: \"\",\r\n                year_of_passing: \"\", \r\n                duration: \"\",\r\n                description: \"\"\r\n            }\r\n        setEducation([...education, edu])\r\n    }\r\n    const removeEducation = (index) => {\r\n        setEducation(experience.filter(( id, i ) => i !== index));\r\n    }\r\n    const handleEducation = (e, index) => {\r\n        // console.log(index,\"----\",e.target)\r\n        setEducation(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[e.target.name] = e.target.value;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n    }\r\n\r\n    const handleSelectEducation = (name, value, index) => {\r\n      // console.log(name,\"----\",value) \r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n\r\n        let newState = Object.assign(education);\r\n        newState[index][name] = value[0].value\r\n        setEducation(newState); \r\n    }\r\n\r\n    const addExperience = () => {\r\n        let exp = {\r\n                company_name:\"\", \r\n                designation: \"\", \r\n                company_location: \"\",\r\n                employment_period: \"\",\r\n                description: \"\"\r\n            }\r\n        setExperience([...experience, exp])\r\n    }\r\n    const removeExperience = (index) => {\r\n        setExperience(experience.filter(( id, i ) => i !== index));\r\n    }\r\n    const handleExperience = (e, index) => {\r\n        // console.log(index,\"----\",e.target)\r\n        setExperience(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[e.target.name] = e.target.value;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n\r\n    }\r\n    const handleSelectExperience = (name, value, index) => {\r\n      // console.log(name,\"----\",value)\r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n\r\n        let newState = Object.assign(experience);\r\n        newState[index][name] = value[0].value\r\n        setExperience(newState); \r\n    }\r\n\r\n    const addProject = () => {\r\n        let proj = {\r\n                title: \"\", \r\n                start_date: \"\", \r\n                end_date: \"\", \r\n                technologies: \"\", \r\n                summary: \"\",\r\n                project_link: \"\"\r\n            }\r\n\r\n        setProject([...project, proj])\r\n    }\r\n\r\n    const removeProject = (index) => {\r\n        // console.log(\"index\",index)\r\n        setProject(project.filter(( id, i ) => i !== index));\r\n    }\r\n\r\n    const handleProject = (e, index) => {\r\n        setProject(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[e.target.name] = e.target.value;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n\r\n    }\r\n    const handleSelectProject = (name, value, index) => {\r\n        if(value.length === 0){\r\n            return false\r\n        }\r\n\r\n        let newState = Object.assign(project);\r\n        newState[index][name] = value.map(e => e.value).join(\",\")\r\n        setProject(newState);\r\n    }\r\n\r\n    const handleProjectDateChange = (name, date, index) => {\r\n\r\n        setProject(prevState => {\r\n          let obj = prevState.find(( id, i ) => i === index);\r\n          // if(obj !== undefined) {\r\n            obj[name] = date;\r\n          // }\r\n          return [...prevState];\r\n        })\r\n    }\r\n\r\n    const checkEmpty = (dataToCheck) => {\r\n      let stopApicall = false\r\n\r\n      for (var key in dataToCheck) {\r\n          if(dataToCheck && dataToCheck[key].length === 0){\r\n              errors[key] = \"Field can't be blank\"\r\n              setError(errors)\r\n              stopApicall = true\r\n          }\r\n          else{\r\n            errors[key] = \"\"\r\n            setError(errors)\r\n          }\r\n        }\r\n\r\n    return stopApicall\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n      e.preventDefault(); \r\n        if(id){\r\n            handleUpdate();\r\n            return false\r\n        }\r\n        let data = { \r\n                   \r\n                    email: state.email,\r\n                    first_name: state.first_name,\r\n                    middle_name: state.middle_name,\r\n                    last_name: state.last_name,\r\n                    phone: state.phone,\r\n                    dob: state.dob,\r\n                    gender: state.gender,\r\n                    languages: state.languages,\r\n                    total_experience: state.total_experience,\r\n                    role_name: state.role_name,\r\n                    country: state.country,\r\n                    state: state.state,\r\n                    city: state.city,\r\n                    pincode: state.pincode,\r\n                    skip_password_validation: true\r\n            }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        if(state.avatar){\r\n            form_data.append(`user[avatar]`, state.avatar)          \r\n        }\r\n        if(state.role_name !== 'hr'){\r\n            form_data.append(\"user[additional_information_attributes[category]]\",state.additional_information_attributes.category)\r\n        }\r\n\r\n        form_data.append(\"user[additional_information_attributes[skype_id]]\",state.additional_information_attributes.skype_id)\r\n        // console.log(\"form_data\",form_data)\r\n        dispatch(saveFreelancer(form_data)).then((res)=> {\r\n            // console.log(\"res\",res)\r\n            if(res && res.data.status === 200) {\r\n               NotificationManager.success(\"Successfully added\", 'Success');\r\n               props.history.push('/users');\r\n            }else{\r\n               NotificationManager.error(res.data.messages, 'Error');  \r\n            }\r\n        })\r\n    }\r\n    const handleUpdate = () => {\r\n        let data = { \r\n                    email: state.email,\r\n                    first_name: state.first_name,\r\n                    last_name: state.last_name,\r\n                    phone: state.phone,\r\n                    dob: state.dob,\r\n                    gender: state.gender,\r\n                    total_experience: state.total_experience,\r\n                }\r\n        var form_data = new FormData();\r\n        for ( var key in data ) {\r\n            form_data.append(`user[${key}]`, data[key])          \r\n        }\r\n        form_data.append(\"user[additional_information_attributes[id]]\",state.detail.additional_information.id)\r\n        form_data.append(\"user[additional_information_attributes[category]]\",state.additional_information_attributes.category)\r\n        form_data.append(\"user[additional_information_attributes[skype_id]]\",state.additional_information_attributes.skype_id)\r\n        \r\n        dispatch(updateFreelancer(form_data, id)).then((res)=> {\r\n            // console.log(\"res\",res)\r\n            if(res && res.data.status === 200) {\r\n               NotificationManager.success(\"Successfully update\", 'Success');\r\n               props.history.push('/users');\r\n            }else{\r\n               NotificationManager.error(res.data.messages, 'Error');  \r\n            }\r\n        })\r\n    }\r\n\r\n    const gender_options =  [\r\n                            //   { value: '', label: 'Select' },\r\n                              { value: 'Male', label: 'Male' },\r\n                              { value: 'Female', label: 'Female' }\r\n                            ]\r\n    const role_name_options =  [\r\n                            //   { value: '', label: 'Select' },\r\n                              { value: 'hr', label: 'HR' },\r\n                              { value: 'interviewer', label: 'Interviewer' },\r\n                              { value: 'matchmaker', label: 'Match Maker' }\r\n                            ]\r\n    const marital_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Married', label: 'Married' },\r\n                              { value: 'Unmarried', label: 'Unmarried' }\r\n                            ]\r\n    const nationality_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Austria', label: 'Austria' },\r\n                              { value: 'Canada', label: 'Canada' },\r\n                              { value: 'India', label: 'India' },\r\n                              { value: 'United Kingdom', label: 'United Kingdom' },\r\n                              { value: 'United State', label: 'United State' },\r\n                            ]\r\n\r\n    const technology_options = [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Salesforce', label: 'Salesforce' },\r\n                              { value: 'ROR', label: 'ROR' },\r\n                              { value: 'React', label: 'React' },\r\n                              { value: 'IOS', label: 'IOS' },\r\n                              { value: 'NodeJS', label: 'NodeJS' },\r\n                              { value: 'HTML', label: 'HTML' },\r\n                              { value: 'CSS', label: 'CSS' },\r\n                              { value: 'JavaScript', label: 'JavaScript' },\r\n                              { value: 'Rails', label: 'Rails' },\r\n                              { value: 'ERP', label: 'ERP' },\r\n                              { value: 'Postgres', label: 'Postgres' },\r\n                              { value: 'Swift', label: 'Swift' },\r\n                              { value: 'Objective C', label: 'Objective C' },\r\n                              { value: 'Express', label: 'Express' },\r\n                              { value: 'Redux', label: 'Redux' },\r\n                              { value: 'Flux', label: 'Flux' }, \r\n                            ]\r\n\r\n    const education_level_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'Engineer', label: 'Engineer' },\r\n                              { value: 'Master', label: 'Master' },\r\n                              { value: 'Associate', label: 'Associate' },\r\n                              { value: 'Diploma', label: 'Diploma' },\r\n                              { value: 'Graduate', label: 'Graduate' },\r\n                              { value: 'Post Graduate', label: 'Post Graduate' },\r\n                            ]\r\n    const result_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: 'First', label: 'First Class' },\r\n                              { value: 'Second', label: 'Second Class' },\r\n                              { value: 'Third', label: 'Third Class' }\r\n                            ]\r\n    const year_of_passing_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '2001', label: '2001' },\r\n                              { value: '2002', label: '2002' },\r\n                              { value: '2003', label: '2003' },\r\n                              { value: '2004', label: '2004' },\r\n                              { value: '2005', label: '2005' },\r\n                              { value: '2006', label: '2006' },\r\n                              { value: '2007', label: '2007' },\r\n                              { value: '2008', label: '2008' },\r\n                              { value: '2009', label: '2009' },\r\n                              { value: '2010', label: '2010' },\r\n                              { value: '2011', label: '2011' },\r\n                              { value: '2012', label: '2012' },\r\n                              { value: '2013', label: '2013' },\r\n                              { value: '2014', label: '2014' },\r\n                              { value: '2015', label: '2015' },\r\n                              { value: '2016', label: '2016' },\r\n                              { value: '2017', label: '2017' },\r\n                              { value: '2018', label: '2018' },\r\n                              { value: '2019', label: '2019' },\r\n                              { value: '2020', label: '2020' }\r\n                            ]\r\n    const employment_period_year_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '0', label: '0' },\r\n                              { value: '1', label: '1' },\r\n                              { value: '2', label: '2' },\r\n                              { value: '3', label: '3' },\r\n                              { value: '4', label: '4' },\r\n                              { value: '5', label: '5' },\r\n                              { value: '6', label: '6' },\r\n                              { value: '7', label: '7' },\r\n                              { value: '8', label: '8' },\r\n                              { value: '9', label: '9' },\r\n                              { value: '10', label: '10' },\r\n                              { value: '11', label: '11' },\r\n                              { value: '12', label: '12' },\r\n                              { value: '13', label: '13' },\r\n                              { value: '14', label: '14' },\r\n                              { value: '15', label: '15' },\r\n                              { value: '16', label: '16' },\r\n                              { value: '17', label: '17' },\r\n                              { value: '18', label: '18' },\r\n                              { value: '19', label: '19' },\r\n                              { value: '20', label: '20' }\r\n                            ]\r\n    const employment_period_month_options =  [\r\n                              { value: '', label: 'Select' },\r\n                              { value: '0', label: '0' },\r\n                              { value: '1', label: '1' },\r\n                              { value: '2', label: '2' },\r\n                              { value: '3', label: '3' },\r\n                              { value: '4', label: '4' },\r\n                              { value: '5', label: '5' },\r\n                              { value: '6', label: '6' },\r\n                              { value: '7', label: '7' },\r\n                              { value: '8', label: '8' },\r\n                              { value: '9', label: '9' },\r\n                              { value: '10', label: '10' },\r\n                              { value: '11', label: '11' },\r\n                              { value: '12', label: '12' }\r\n                            ]\r\n    // console.log(\"education======\",education)\r\n    // console.log(\"experience'======\",experience)\r\n    // console.log(\"project======\",project)\r\n    const loader = useSelector(state => (state.applicationIsLoading), shallowEqual)\r\n    return(\r\n\r\n        <div>\r\n        {/* Start Page Title Area */}\r\n        <div className=\"page-title-area\">\r\n            <div className=\"container\">\r\n                <div className=\"page-title-content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h2>{id ? \"Edit User\" : \"Add New User\"}</h2>                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* End Page Title Area */}\r\n\r\n\r\n\r\n\r\n        <section className=\"candidates-resume-area mt-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"candidates-resume-content\">\r\n                            <form className=\"resume-info\" onSubmit={handleSave}>\r\n                                <h3><i class=\"bx bxs-user\"></i> Personal Details</h3>\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"choose-img\">\r\n                                                    <p>Upload (Profile)</p>\r\n                                                    <input type=\"file\" id=\"avatar\" name=\"avatar\" accept=\"image/*\" onChange={onPhotoUpload}/>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Role<span class=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"role_name\" \r\n                                                        options={role_name_options}\r\n                                                        onChange={(value) => handleSelect('role_name', value)} \r\n                                                        value={state.role_name}\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> First Name<span class=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"first_name\"\r\n                                                        value={state.first_name}\r\n                                                        onChange={handleChange} \r\n                                                        required\r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.first_name && \"Enter First Name \"}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/*\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> Middle Name</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"middle_name\"\r\n                                                        value={state.middle_name}\r\n                                                        onChange={handleChange} \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"choose-img\">\r\n                                                    <p>Upload (Resume)<span class=\"text-danger\">*</span></p>\r\n                                                    <input type=\"file\" id=\"attachment\" name=\"attachment\" onChange={onFileUpload} required/>\r\n                                                    <p>Maximum file size: 2 MB</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Title<span class=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"title\"\r\n                                                        value={state.additional_information_attributes.title}\r\n                                                        onChange={handleAdditional} \r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>*/}\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> Last Name<span class=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"last_name\"\r\n                                                        value={state.last_name}\r\n                                                        onChange={handleChange} \r\n                                                        required\r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.last_name && \"Enter Last Name \"}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Email<span class=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"email\" \r\n                                                        name=\"email\"\r\n                                                        value={state.email}\r\n                                                        onChange={handleChange} \r\n                                                        required\r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.email && \"Enter email address\"}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label> Phone<span class=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"phone\"\r\n                                                        value={state.phone}\r\n                                                        onChange={handleChange}\r\n                                                        required \r\n                                                    />\r\n                                                    <span className=\"error text-danger\">{errors.phone && \"Enter phone number \"}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Date Of Birth</label>\r\n                                                    <div className=\"input-group date\" id=\"datetimepicker\">\r\n                                                        <DatePicker\r\n                                                        selected={state.dob !== '' ? new Date(state.dob) : ''}\r\n                                                        onChange={handleDateChange}\r\n                                                        className=\"form-control mn_input post-job-boxes\"\r\n                                                        dateFormat=\"yyyy-MM-dd\"\r\n                                                        // maxDate={new Date('2003-01-01')}\r\n                                                        showMonthDropdown\r\n                                                        showYearDropdown\r\n                                                        dropdownMode=\"select\"\r\n                                                        \r\n                                                        />\r\n                                                        <span className=\"input-group-addon\"></span>\r\n                                                        <i className=\"bx bx-calendar\"></i>\r\n                                                    </div>  \r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Gender<span class=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"gender\" \r\n                                                        options={gender_options}\r\n                                                        onChange={(value) => handleSelect('gender', value)} \r\n                                                        value={state.gender}\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Total Experience<span class=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"total_experience\"\r\n                                                        value={state.total_experience}\r\n                                                        onChange={handleChange} \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            {state.role_name !== 'hr' &&\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Category<span class=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"category\" \r\n                                                        options={CATEGORY}\r\n                                                        onChange={(value) => handleSelectAdditionalCat('category', value)} \r\n                                                        value={state.additional_information_attributes.category}\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            }\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label><i class=\"bx bxl-linkedin-square\"></i> Skype ID</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"skype_id\"\r\n                                                        value={state.additional_information_attributes.skype_id}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            {/*\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Language<span class=\"text-danger\">*</span></label>\r\n                                                \r\n                                                    <Select \r\n                                                        name=\"languages\"\r\n                                                        multi\r\n                                                        options={LANGUAGES}\r\n                                                        onChange={(value) => handleSelectLanguage('languages', value)} \r\n                                                        value={state.languages}\r\n                                                        labelField=\"label\"\r\n                                                        valueField=\"value\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Country<span class=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"country\"\r\n                                                        options={csc.getAllCountries()}\r\n                                                        onChange={(value) => selectCurrentCountry('country', value)} \r\n                                                        value={state.country}\r\n                                                        labelField=\"name\"\r\n                                                        valueField=\"name\"\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>State</label>\r\n                                                    <Select \r\n                                                        name=\"state\"\r\n                                                        options={state.stateArg}\r\n                                                        onChange={(value) => selectCurrentState('state', value)} \r\n                                                        value={state.state}\r\n                                                        labelField=\"name\"\r\n                                                        valueField=\"name\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>City</label>\r\n                                                    <Select \r\n                                                        name=\"city\"\r\n                                                        options={state.cityArg}\r\n                                                        onChange={(value) => selectCurrentCity('city', value)} \r\n                                                        value={state.city}\r\n                                                        labelField=\"name\"\r\n                                                        valueField=\"name\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Pincode</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"pincode\"\r\n                                                        value={state.pincode}\r\n                                                        onChange={handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Address Details</label>\r\n                                                    <textarea \r\n                                                        className=\"form-control\" \r\n                                                        rows=\"4\"\r\n                                                        name=\"address\" \r\n                                                        onChange={handleChange}\r\n                                                        value={state.address}\r\n                                                    >\r\n                                                    </textarea>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/*\r\n                                <h3><i class=\"bx bxs-graduation\"></i> Career And Application Information</h3>\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Current Salary - CTC (INR)<span class=\"text-danger\">*</span></label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"number\" \r\n                                                        name=\"presented_salary\"\r\n                                                        value={state.additional_information_attributes.presented_salary}\r\n                                                        onChange={handleAdditional} \r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Expected Salary - CTC (INR)</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"number\" \r\n                                                        name=\"expected_salary\"\r\n                                                        value={state.additional_information_attributes.expected_salary}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            \r\n                                            \r\n                                            \r\n\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Skills<span class=\"text-danger\">*</span></label>\r\n                                                    <Select \r\n                                                        name=\"skills\" \r\n                                                        options={state.skillArg}\r\n                                                        onChange={(value) => handleSelectAdditional('skills', value)} \r\n                                                        value={state.additional_information_attributes.skills}\r\n                                                        required\r\n                                                        multi\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label><i class=\"bx bxl-github\"></i> Github Link</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"github_link\"\r\n                                                        value={state.additional_information_attributes.github_link}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label><i class=\"bx bxl-linkedin-square\"></i> Linkedin Link</label>\r\n                                                    <input \r\n                                                        className=\"form-control\" \r\n                                                        type=\"text\" \r\n                                                        name=\"linkedin_link\"\r\n                                                        value={state.additional_information_attributes.linkedin_link}\r\n                                                        onChange={handleAdditional}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            \r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                <h3><i class=\"bx bxs-bar-chart-square\"></i> Experience Level<span class=\"text-danger\">*</span></h3>\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                      <div className=\"row\">\r\n                                                <div className=\"col-lg-4 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                    <label className=\"single-check\">\r\n                                                        Fresher\r\n                                                        <input \r\n                                                            type=\"radio\" \r\n                                                            checked={state.additional_information_attributes.job_level === \"Fresher\"} \r\n                                                            name=\"job_level\" \r\n                                                            value=\"Fresher\" required/>\r\n                                                        <span className=\"checkmark\"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"col-lg-4 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                    <label className=\"single-check\">\r\n                                                        Intermediate\r\n                                                        <input \r\n                                                            type=\"radio\" \r\n                                                            checked={state.additional_information_attributes.job_level === \"Intermediate\"} \r\n                                                            name=\"job_level\" \r\n                                                            value=\"Intermediate\" required/>\r\n                                                        <span className=\"checkmark\"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"col-lg-4 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                    <label className=\"single-check\">\r\n                                                        Expert\r\n                                                        <input \r\n                                                            type=\"radio\" \r\n                                                            checked={state.additional_information_attributes.job_level === \"Expert\"} \r\n                                                            name=\"job_level\" \r\n                                                            value=\"Expert\" required/>\r\n                                                        <span className=\"checkmark\"></span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3><i class=\"bx bxs-briefcase\"></i> Job Type<span class=\"text-danger\">*</span></h3>\r\n\r\n                                <div className=\"card mb-3\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Full Time \r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Full Time\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Full Time\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Part Time   \r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Part Time\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Part Time\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Contract\r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Contract\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Contract\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"col-lg-3 col-sm-6 col-md-3\" onChange={handleAdditional}>\r\n                                                <label className=\"single-check\">\r\n                                                    Office\r\n                                                    <input \r\n                                                        type=\"radio\" \r\n                                                        checked={state.additional_information_attributes.job_nature === \"Office\"} \r\n                                                        name=\"job_nature\" \r\n                                                        value=\"Office\" required/>\r\n                                                    <span className=\"checkmark\"></span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n\r\n\r\n\r\n                                \r\n                                <h3><i class=\"bx bxs-graduation\"></i> Education</h3>\r\n                                            \r\n                                    \r\n                                    {education.map((item, i) => {\r\n                                        return (\r\n                                        <React.Fragment>\r\n\r\n                                            <div className=\"card mt-4\">\r\n                                                \r\n                                                    {\r\n                                                        i > 0 &&\r\n                                                        <div class=\"card-header\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-lg-12 col-md-12\">\r\n                                                                    <a className=\"default-btn btn-danger float-right remove-record-btn\" onClick={() => removeEducation(i)}>\r\n                                                                    <i className=\"bx bx-trash\"></i> Remove Education\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    }\r\n                                                \r\n\r\n\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Level of Education<span class=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"education_level\" \r\n                                                                    options={education_level_options}\r\n                                                                    onChange={(value) => handleSelectEducation('education_level', value, i)} \r\n                                                                    value={education[i].education_level}\r\n                                                                    required\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Exam / Degree Title<span class=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"degree_title\" \r\n                                                                    options={DEGREE}\r\n                                                                    onChange={(value) => handleSelectEducation('degree_title', value, i)} \r\n                                                                    value={education[i].degree_title}\r\n                                                                    required\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Institute Name<span class=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    className=\"form-control\" \r\n                                                                    type=\"text\" \r\n                                                                    name=\"institute_name\" \r\n                                                                    onChange={(e) => handleEducation(e,i)}\r\n                                                                    required\r\n                                                                    value={education[i].institute_name}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Result<span class=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"result\" \r\n                                                                    options={result_options}\r\n                                                                    onChange={(value) => handleSelectEducation('result', value, i)} \r\n                                                                    value={education[i].result}\r\n                                                                    required\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Marks(%)<span class=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    className=\"form-control\" \r\n                                                                    type=\"number\" \r\n                                                                    name=\"marks\" \r\n                                                                    onChange={(e) => handleEducation(e,i)}\r\n                                                                    required\r\n                                                                    value={education[i].marks}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Year of Passing</label>\r\n                                                                <Select \r\n                                                                    name=\"year_of_passing\" \r\n                                                                    options={year_of_passing_options}\r\n                                                                    onChange={(value) => handleSelectEducation('year_of_passing', value, i)} \r\n                                                                    value={education[i].year_of_passing}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Duration (Years)</label>\r\n                                                                <input\r\n                                                                    className=\"form-control\" \r\n                                                                    type=\"number\" \r\n                                                                    name=\"duration\" \r\n                                                                    onChange={(e) => handleEducation(e,i)}\r\n                                                                    value={education[i].duration}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                        )\r\n                                    })}\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12\">\r\n                                        <a className=\"default-btn float-right mt-3 add-new-btn\" onClick={addEducation}>\r\n                                        <i className=\"bx bx-plus\"></i> Add Education\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3><i class=\"bx bxs-badge\"></i> Experience</h3>\r\n\r\n                               \r\n                                    \r\n                                    {experience.map((item, i) => {\r\n                                        return (\r\n                                        <React.Fragment>\r\n\r\n\r\n                                            <div className=\"card mt-4\">\r\n                                                {\r\n                                                    i > 0 &&\r\n                                                <div class=\"card-header\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-12 col-md-12\">\r\n                                                            <a className=\"default-btn btn-danger float-right remove-record-btn\" onClick={() => removeExperience(i)}>\r\n                                                            <i className=\"bx bx-trash\"></i> Remove Experience\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>    \r\n                                                </div>\r\n                                                }\r\n\r\n\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Company Name<span class=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"company_name\" \r\n                                                                    onChange={(e) => handleExperience(e,i)} \r\n                                                                    required\r\n                                                                    value={experience[i].company_name}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Designation<span class=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"designation\" \r\n                                                                    onChange={(e) => handleExperience(e,i)} \r\n                                                                    required\r\n                                                                    value={experience[i].designation}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Company Location<span class=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"company_location\" \r\n                                                                    onChange={(e) => handleExperience(e,i)} \r\n                                                                    required\r\n                                                                    value={experience[i].company_location}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Employment Period Year</label>\r\n                                                                <Select \r\n                                                                    name=\"employment_period_year\" \r\n                                                                    options={employment_period_year_options}\r\n                                                                    onChange={(value) => handleSelectExperience('employment_period_year', value, i)} \r\n                                                                    value={experience[i].employment_period_year}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                        <div className=\"col-lg-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Month</label>\r\n                                                                <Select \r\n                                                                    name=\"employment_period_month\" \r\n                                                                    options={employment_period_month_options}\r\n                                                                    onChange={(value) => handleSelectExperience('employment_period_month', value, i)} \r\n                                                                    value={experience[i].employment_period_month}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-12\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Description</label>\r\n                                                                <textarea \r\n                                                                    className=\"form-control\" \r\n                                                                    rows=\"4\"\r\n                                                                    name=\"description\" \r\n                                                                    onChange={(e) => handleExperience(e,i)}\r\n                                                                    value={experience[i].description}\r\n                                                                >\r\n                                                                </textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        \r\n                                        </React.Fragment>\r\n                                        )\r\n                                    })}\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12\">\r\n                                        <a className=\"default-btn float-right mt-3 add-new-btn\" onClick={addExperience}>\r\n                                        <i className=\"bx bx-plus\"></i> Add Experience\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <h3><i class=\"bx bxs-briefcase\"></i> Project</h3>\r\n\r\n                               \r\n                                    \r\n                                    {project.map((item, i) => {\r\n                                        return (\r\n                                        <React.Fragment>\r\n\r\n                                            <div className=\"card mt-4\">\r\n                                                    {\r\n                                                        i > 0 &&\r\n                                                    <div class=\"card-header\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-lg-12 col-md-12\">\r\n                                                                <a className=\"default-btn btn-danger float-right remove-record-btn\" onClick={() => removeProject(i)}>\r\n                                                                <i className=\"bx bx-trash\"></i> Remove Project\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>    \r\n                                                    }\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row\">\r\n\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Title<span class=\"text-danger\">*</span></label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"title\" \r\n                                                                    onChange={(e) => handleProject(e,i)} \r\n                                                                    required\r\n                                                                    value={project[i].title}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>URL</label>\r\n                                                                <input \r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"project_link\" \r\n                                                                    onChange={(e) => handleProject(e,i)} \r\n                                                                    value={project[i].project_link}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Technologies<span class=\"text-danger\">*</span></label>\r\n                                                                <Select \r\n                                                                    name=\"technologies\" \r\n                                                                    options={technology_options}\r\n                                                                    onChange={(value) => handleSelectProject('technologies', value, i)} \r\n                                                                    value={project[i].technologies}\r\n                                                                    required\r\n                                                                    multi\r\n                                                                    \r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Start Date</label>\r\n                                                                <div className=\"input-group date\" id=\"datetimepicker\">\r\n                                                                    <DatePicker\r\n                                                                    selected={project[i].start_date !== '' ? new Date(project[i].start_date) : ''}\r\n                                                                    onChange={(date) => handleProjectDateChange('start_date', date, i)}\r\n                                                                    className=\"form-control mn_input post-job-boxes\"\r\n                                                                    dateFormat=\"yyyy-MM-dd\"\r\n                                                                    showMonthDropdown\r\n                                                                    showYearDropdown\r\n                                                                    dropdownMode=\"select\"\r\n                                                                    />\r\n                                                                    <span className=\"input-group-addon\"></span>\r\n                                                                    <i className=\"bx bx-calendar\"></i>\r\n                                                                </div>  \r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-3 col-md-3\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>End Date</label>\r\n                                                                <div className=\"input-group date\" id=\"datetimepicker\">\r\n                                                                    <DatePicker\r\n                                                                    selected={project[i].end_date !== '' ? new Date(project[i].end_date) : ''}\r\n                                                                    onChange={(date) => handleProjectDateChange('end_date', date, i)}\r\n                                                                    className=\"form-control mn_input post-job-boxes\"\r\n                                                                    dateFormat=\"yyyy-MM-dd\"\r\n                                                                    showMonthDropdown\r\n                                                                    showYearDropdown\r\n                                                                    dropdownMode=\"select\"\r\n                                                                    />\r\n                                                                    <span className=\"input-group-addon\"></span>\r\n                                                                    <i className=\"bx bx-calendar\"></i>\r\n                                                                </div>  \r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                        <div className=\"col-lg-12\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Summary</label>\r\n                                                                <textarea \r\n                                                                    className=\"form-control\" \r\n                                                                    rows=\"4\"\r\n                                                                    name=\"summary\" \r\n                                                                    onChange={(e) => handleProject(e,i)}\r\n                                                                    value={project[i].summary}\r\n                                                                >\r\n                                                                </textarea>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                                    \r\n                                        </React.Fragment>\r\n                                        )\r\n                                    })}\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"col-lg-12 col-md-12\">\r\n                                    <a className=\"default-btn float-right mt-3 add-new-btn\" onClick={addProject}>\r\n                                    <i className=\"bx bx-plus\"></i> Add Project\r\n                                    </a>\r\n                                    </div>\r\n                                </div>*/}\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 text-center\">\r\n                                       <button className=\"default-btn\" disabled={loader}>Save </button>\r\n                                       {/* <button className=\"default-btn btn-two ml-2\" onClick={clearState}>Reset </button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    \r\n        </div>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default withRouter(SaveUser);","C:\\Users\\HP\\Documents\\oaktreecrew\\src\\actions\\interviewerActions.js",[],"C:\\Users\\HP\\Documents\\oaktreecrew\\src\\containers\\Profile\\Profile.js",["347","348"],{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":170,"column":11,"nodeType":"355","messageId":"356","endLine":170,"endColumn":21},{"ruleId":"353","severity":1,"message":"354","line":207,"column":11,"nodeType":"355","messageId":"356","endLine":207,"endColumn":21},{"ruleId":"353","severity":1,"message":"354","line":341,"column":11,"nodeType":"355","messageId":"356","endLine":341,"endColumn":21},{"ruleId":"357","severity":1,"message":"358","line":93,"column":45,"nodeType":"359","endLine":93,"endColumn":78},{"ruleId":"360","severity":1,"message":"361","line":94,"column":48,"nodeType":"359","endLine":94,"endColumn":176},{"ruleId":"357","severity":1,"message":"358","line":152,"column":41,"nodeType":"359","endLine":152,"endColumn":77},{"ruleId":"357","severity":1,"message":"358","line":62,"column":29,"nodeType":"359","endLine":62,"endColumn":58},{"ruleId":"362","severity":1,"message":"363","line":63,"column":33,"nodeType":"359","endLine":63,"endColumn":63},{"ruleId":"357","severity":1,"message":"358","line":70,"column":37,"nodeType":"359","endLine":70,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":75,"column":37,"nodeType":"359","endLine":75,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":80,"column":37,"nodeType":"359","endLine":80,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":85,"column":37,"nodeType":"359","endLine":85,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":123,"column":37,"nodeType":"359","endLine":123,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":126,"column":37,"nodeType":"359","endLine":126,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":129,"column":37,"nodeType":"359","endLine":129,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":132,"column":37,"nodeType":"359","endLine":132,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":135,"column":37,"nodeType":"359","endLine":135,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":138,"column":37,"nodeType":"359","endLine":138,"endColumn":49},{"ruleId":"357","severity":1,"message":"358","line":172,"column":31,"nodeType":"359","endLine":172,"endColumn":64},{"ruleId":"364","severity":1,"message":"365","line":137,"column":8,"nodeType":"366","endLine":137,"endColumn":10,"suggestions":"367"},{"ruleId":"368","severity":1,"message":"369","line":308,"column":11,"nodeType":"370","messageId":"371","endLine":308,"endColumn":31},{"ruleId":"362","severity":1,"message":"363","line":715,"column":37,"nodeType":"359","endLine":715,"endColumn":107},{"ruleId":"372","severity":1,"message":"373","line":721,"column":98,"nodeType":"374","messageId":"375","endLine":721,"endColumn":100},{"ruleId":"372","severity":1,"message":"373","line":721,"column":126,"nodeType":"374","messageId":"375","endLine":721,"endColumn":128},{"ruleId":"376","severity":1,"message":"377","line":730,"column":35,"nodeType":"359","endLine":730,"endColumn":150},{"ruleId":"376","severity":1,"message":"377","line":891,"column":25,"nodeType":"359","endLine":891,"endColumn":116},{"ruleId":"376","severity":1,"message":"377","line":896,"column":25,"nodeType":"359","endLine":896,"endColumn":118},{"ruleId":"357","severity":1,"message":"358","line":969,"column":25,"nodeType":"359","endLine":969,"endColumn":37},{"ruleId":"357","severity":1,"message":"358","line":973,"column":25,"nodeType":"359","endLine":973,"endColumn":37},{"ruleId":"368","severity":1,"message":"378","line":1,"column":38,"nodeType":"370","messageId":"371","endLine":1,"endColumn":46},{"ruleId":"368","severity":1,"message":"379","line":9,"column":8,"nodeType":"370","messageId":"371","endLine":9,"endColumn":19},{"ruleId":"368","severity":1,"message":"380","line":10,"column":8,"nodeType":"370","messageId":"371","endLine":10,"endColumn":19},{"ruleId":"368","severity":1,"message":"381","line":11,"column":8,"nodeType":"370","messageId":"371","endLine":11,"endColumn":19},{"ruleId":"368","severity":1,"message":"382","line":12,"column":8,"nodeType":"370","messageId":"371","endLine":12,"endColumn":19},{"ruleId":"368","severity":1,"message":"383","line":13,"column":8,"nodeType":"370","messageId":"371","endLine":13,"endColumn":19},{"ruleId":"368","severity":1,"message":"384","line":14,"column":8,"nodeType":"370","messageId":"371","endLine":14,"endColumn":19},{"ruleId":"368","severity":1,"message":"385","line":15,"column":8,"nodeType":"370","messageId":"371","endLine":15,"endColumn":19},{"ruleId":"364","severity":1,"message":"365","line":72,"column":8,"nodeType":"366","endLine":72,"endColumn":10,"suggestions":"386"},{"ruleId":"368","severity":1,"message":"387","line":94,"column":11,"nodeType":"370","messageId":"371","endLine":94,"endColumn":27},{"ruleId":"362","severity":1,"message":"363","line":120,"column":27,"nodeType":"359","endLine":120,"endColumn":98},{"ruleId":"368","severity":1,"message":"388","line":193,"column":23,"nodeType":"370","messageId":"371","endLine":193,"endColumn":28},{"ruleId":"368","severity":1,"message":"388","line":271,"column":23,"nodeType":"370","messageId":"371","endLine":271,"endColumn":28},{"ruleId":"357","severity":1,"message":"389","line":1172,"column":69,"nodeType":"359","endLine":1172,"endColumn":172},{"ruleId":"357","severity":1,"message":"389","line":1314,"column":41,"nodeType":"359","endLine":1314,"endColumn":120},{"ruleId":"357","severity":1,"message":"389","line":1335,"column":61,"nodeType":"359","endLine":1335,"endColumn":165},{"ruleId":"357","severity":1,"message":"389","line":1435,"column":41,"nodeType":"359","endLine":1435,"endColumn":121},{"ruleId":"357","severity":1,"message":"389","line":1455,"column":65,"nodeType":"359","endLine":1455,"endColumn":166},{"ruleId":"357","severity":1,"message":"389","line":1569,"column":41,"nodeType":"359","endLine":1569,"endColumn":118},{"ruleId":"364","severity":1,"message":"365","line":19,"column":8,"nodeType":"366","endLine":19,"endColumn":10,"suggestions":"390"},{"ruleId":"362","severity":1,"message":"363","line":55,"column":25,"nodeType":"359","endLine":55,"endColumn":125},{"ruleId":"376","severity":1,"message":"377","line":70,"column":23,"nodeType":"359","endLine":70,"endColumn":138},{"ruleId":"376","severity":1,"message":"377","line":172,"column":25,"nodeType":"359","endLine":172,"endColumn":116},{"ruleId":"376","severity":1,"message":"377","line":177,"column":25,"nodeType":"359","endLine":177,"endColumn":118},{"ruleId":"357","severity":1,"message":"358","line":250,"column":25,"nodeType":"359","endLine":250,"endColumn":37},{"ruleId":"357","severity":1,"message":"358","line":254,"column":25,"nodeType":"359","endLine":254,"endColumn":37},{"ruleId":"360","severity":1,"message":"361","line":354,"column":118,"nodeType":"359","endLine":354,"endColumn":252},{"ruleId":"357","severity":1,"message":"358","line":407,"column":106,"nodeType":"359","endLine":407,"endColumn":189},{"ruleId":"357","severity":1,"message":"358","line":413,"column":69,"nodeType":"359","endLine":413,"endColumn":154},{"ruleId":"360","severity":1,"message":"361","line":467,"column":118,"nodeType":"359","endLine":467,"endColumn":252},{"ruleId":"357","severity":1,"message":"358","line":518,"column":116,"nodeType":"359","endLine":518,"endColumn":199},{"ruleId":"357","severity":1,"message":"358","line":521,"column":85,"nodeType":"359","endLine":521,"endColumn":170},{"ruleId":"357","severity":1,"message":"358","line":629,"column":116,"nodeType":"359","endLine":629,"endColumn":209},{"ruleId":"360","severity":1,"message":"361","line":682,"column":118,"nodeType":"359","endLine":682,"endColumn":252},{"ruleId":"360","severity":1,"message":"361","line":772,"column":118,"nodeType":"359","endLine":772,"endColumn":252},{"ruleId":"357","severity":1,"message":"358","line":83,"column":39,"nodeType":"359","endLine":83,"endColumn":51},{"ruleId":"357","severity":1,"message":"358","line":92,"column":39,"nodeType":"359","endLine":92,"endColumn":51},{"ruleId":"357","severity":1,"message":"358","line":101,"column":39,"nodeType":"359","endLine":101,"endColumn":51},{"ruleId":"357","severity":1,"message":"358","line":110,"column":39,"nodeType":"359","endLine":110,"endColumn":51},{"ruleId":"357","severity":1,"message":"358","line":119,"column":39,"nodeType":"359","endLine":119,"endColumn":51},{"ruleId":"368","severity":1,"message":"391","line":1,"column":27,"nodeType":"370","messageId":"371","endLine":1,"endColumn":36},{"ruleId":"368","severity":1,"message":"378","line":1,"column":38,"nodeType":"370","messageId":"371","endLine":1,"endColumn":46},{"ruleId":"368","severity":1,"message":"392","line":3,"column":22,"nodeType":"370","messageId":"371","endLine":3,"endColumn":26},{"ruleId":"357","severity":1,"message":"358","line":147,"column":64,"nodeType":"359","endLine":147,"endColumn":76},{"ruleId":"357","severity":1,"message":"358","line":147,"column":103,"nodeType":"359","endLine":147,"endColumn":115},{"ruleId":"368","severity":1,"message":"393","line":3,"column":8,"nodeType":"370","messageId":"371","endLine":3,"endColumn":14},{"ruleId":"394","severity":1,"message":"395","line":32,"column":54,"nodeType":"396","messageId":"397","endLine":32,"endColumn":56},{"ruleId":"394","severity":1,"message":"395","line":11,"column":39,"nodeType":"396","messageId":"397","endLine":11,"endColumn":41},{"ruleId":"394","severity":1,"message":"395","line":31,"column":48,"nodeType":"396","messageId":"397","endLine":31,"endColumn":50},{"ruleId":"357","severity":1,"message":"358","line":262,"column":81,"nodeType":"359","endLine":262,"endColumn":118},{"ruleId":"360","severity":1,"message":"361","line":464,"column":158,"nodeType":"359","endLine":464,"endColumn":292},{"ruleId":"357","severity":1,"message":"358","line":501,"column":125,"nodeType":"359","endLine":501,"endColumn":165},{"ruleId":"357","severity":1,"message":"389","line":504,"column":125,"nodeType":"359","endLine":504,"endColumn":202},{"ruleId":"360","severity":1,"message":"361","line":564,"column":158,"nodeType":"359","endLine":564,"endColumn":292},{"ruleId":"357","severity":1,"message":"358","line":601,"column":125,"nodeType":"359","endLine":601,"endColumn":206},{"ruleId":"357","severity":1,"message":"389","line":604,"column":125,"nodeType":"359","endLine":604,"endColumn":202},{"ruleId":"360","severity":1,"message":"361","line":664,"column":158,"nodeType":"359","endLine":664,"endColumn":292},{"ruleId":"357","severity":1,"message":"358","line":701,"column":125,"nodeType":"359","endLine":701,"endColumn":165},{"ruleId":"357","severity":1,"message":"389","line":704,"column":125,"nodeType":"359","endLine":704,"endColumn":202},{"ruleId":"360","severity":1,"message":"361","line":764,"column":158,"nodeType":"359","endLine":764,"endColumn":292},{"ruleId":"357","severity":1,"message":"358","line":801,"column":125,"nodeType":"359","endLine":801,"endColumn":165},{"ruleId":"357","severity":1,"message":"389","line":804,"column":125,"nodeType":"359","endLine":804,"endColumn":202},{"ruleId":"360","severity":1,"message":"361","line":920,"column":158,"nodeType":"359","endLine":920,"endColumn":292},{"ruleId":"357","severity":1,"message":"358","line":957,"column":125,"nodeType":"359","endLine":957,"endColumn":165},{"ruleId":"357","severity":1,"message":"389","line":960,"column":125,"nodeType":"359","endLine":960,"endColumn":202},{"ruleId":"368","severity":1,"message":"398","line":11,"column":10,"nodeType":"370","messageId":"371","endLine":11,"endColumn":15},{"ruleId":"368","severity":1,"message":"399","line":46,"column":12,"nodeType":"370","messageId":"371","endLine":46,"endColumn":17},{"ruleId":"368","severity":1,"message":"400","line":48,"column":11,"nodeType":"370","messageId":"371","endLine":48,"endColumn":21},{"ruleId":"368","severity":1,"message":"401","line":60,"column":11,"nodeType":"370","messageId":"371","endLine":60,"endColumn":22},{"ruleId":"368","severity":1,"message":"402","line":64,"column":11,"nodeType":"370","messageId":"371","endLine":64,"endColumn":23},{"ruleId":"368","severity":1,"message":"403","line":73,"column":11,"nodeType":"370","messageId":"371","endLine":73,"endColumn":27},{"ruleId":"357","severity":1,"message":"389","line":209,"column":68,"nodeType":"359","endLine":209,"endColumn":71},{"ruleId":"360","severity":1,"message":"361","line":209,"column":71,"nodeType":"359","endLine":209,"endColumn":205},{"ruleId":"357","severity":1,"message":"389","line":220,"column":68,"nodeType":"359","endLine":220,"endColumn":71},{"ruleId":"357","severity":1,"message":"358","line":240,"column":85,"nodeType":"359","endLine":240,"endColumn":170},{"ruleId":"357","severity":1,"message":"389","line":293,"column":64,"nodeType":"359","endLine":293,"endColumn":67},{"ruleId":"360","severity":1,"message":"361","line":293,"column":67,"nodeType":"359","endLine":293,"endColumn":201},{"ruleId":"357","severity":1,"message":"389","line":304,"column":64,"nodeType":"359","endLine":304,"endColumn":67},{"ruleId":"357","severity":1,"message":"389","line":315,"column":64,"nodeType":"359","endLine":315,"endColumn":67},{"ruleId":"357","severity":1,"message":"358","line":335,"column":81,"nodeType":"359","endLine":335,"endColumn":166},{"ruleId":"357","severity":1,"message":"389","line":389,"column":64,"nodeType":"359","endLine":389,"endColumn":67},{"ruleId":"360","severity":1,"message":"361","line":389,"column":67,"nodeType":"359","endLine":389,"endColumn":201},{"ruleId":"357","severity":1,"message":"389","line":400,"column":64,"nodeType":"359","endLine":400,"endColumn":67},{"ruleId":"357","severity":1,"message":"389","line":411,"column":64,"nodeType":"359","endLine":411,"endColumn":67},{"ruleId":"357","severity":1,"message":"358","line":431,"column":81,"nodeType":"359","endLine":431,"endColumn":166},{"ruleId":"368","severity":1,"message":"404","line":12,"column":8,"nodeType":"370","messageId":"371","endLine":12,"endColumn":17},{"ruleId":"368","severity":1,"message":"405","line":14,"column":8,"nodeType":"370","messageId":"371","endLine":14,"endColumn":14},{"ruleId":"368","severity":1,"message":"406","line":15,"column":8,"nodeType":"370","messageId":"371","endLine":15,"endColumn":14},{"ruleId":"368","severity":1,"message":"407","line":78,"column":11,"nodeType":"370","messageId":"371","endLine":78,"endColumn":21},{"ruleId":"368","severity":1,"message":"408","line":120,"column":11,"nodeType":"370","messageId":"371","endLine":120,"endColumn":31},{"ruleId":"368","severity":1,"message":"409","line":144,"column":11,"nodeType":"370","messageId":"371","endLine":144,"endColumn":29},{"ruleId":"368","severity":1,"message":"410","line":163,"column":11,"nodeType":"370","messageId":"371","endLine":163,"endColumn":28},{"ruleId":"368","severity":1,"message":"388","line":176,"column":23,"nodeType":"370","messageId":"371","endLine":176,"endColumn":28},{"ruleId":"368","severity":1,"message":"369","line":183,"column":11,"nodeType":"370","messageId":"371","endLine":183,"endColumn":31},{"ruleId":"368","severity":1,"message":"411","line":228,"column":11,"nodeType":"370","messageId":"371","endLine":228,"endColumn":33},{"ruleId":"368","severity":1,"message":"412","line":252,"column":11,"nodeType":"370","messageId":"371","endLine":252,"endColumn":23},{"ruleId":"368","severity":1,"message":"388","line":254,"column":23,"nodeType":"370","messageId":"371","endLine":254,"endColumn":28},{"ruleId":"364","severity":1,"message":"365","line":270,"column":8,"nodeType":"366","endLine":270,"endColumn":10,"suggestions":"413"},{"ruleId":"368","severity":1,"message":"414","line":314,"column":11,"nodeType":"370","messageId":"371","endLine":314,"endColumn":23},{"ruleId":"368","severity":1,"message":"415","line":328,"column":11,"nodeType":"370","messageId":"371","endLine":328,"endColumn":26},{"ruleId":"368","severity":1,"message":"416","line":331,"column":11,"nodeType":"370","messageId":"371","endLine":331,"endColumn":26},{"ruleId":"368","severity":1,"message":"417","line":342,"column":11,"nodeType":"370","messageId":"371","endLine":342,"endColumn":32},{"ruleId":"368","severity":1,"message":"418","line":353,"column":11,"nodeType":"370","messageId":"371","endLine":353,"endColumn":24},{"ruleId":"368","severity":1,"message":"419","line":363,"column":11,"nodeType":"370","messageId":"371","endLine":363,"endColumn":27},{"ruleId":"368","severity":1,"message":"420","line":366,"column":11,"nodeType":"370","messageId":"371","endLine":366,"endColumn":27},{"ruleId":"368","severity":1,"message":"421","line":377,"column":11,"nodeType":"370","messageId":"371","endLine":377,"endColumn":33},{"ruleId":"368","severity":1,"message":"422","line":388,"column":11,"nodeType":"370","messageId":"371","endLine":388,"endColumn":21},{"ruleId":"368","severity":1,"message":"423","line":401,"column":11,"nodeType":"370","messageId":"371","endLine":401,"endColumn":24},{"ruleId":"368","severity":1,"message":"424","line":406,"column":11,"nodeType":"370","messageId":"371","endLine":406,"endColumn":24},{"ruleId":"368","severity":1,"message":"425","line":416,"column":11,"nodeType":"370","messageId":"371","endLine":416,"endColumn":30},{"ruleId":"368","severity":1,"message":"426","line":426,"column":11,"nodeType":"370","messageId":"371","endLine":426,"endColumn":34},{"ruleId":"368","severity":1,"message":"427","line":542,"column":11,"nodeType":"370","messageId":"371","endLine":542,"endColumn":26},{"ruleId":"368","severity":1,"message":"428","line":547,"column":11,"nodeType":"370","messageId":"371","endLine":547,"endColumn":30},{"ruleId":"368","severity":1,"message":"429","line":556,"column":11,"nodeType":"370","messageId":"371","endLine":556,"endColumn":29},{"ruleId":"368","severity":1,"message":"430","line":576,"column":11,"nodeType":"370","messageId":"371","endLine":576,"endColumn":34},{"ruleId":"368","severity":1,"message":"431","line":585,"column":11,"nodeType":"370","messageId":"371","endLine":585,"endColumn":25},{"ruleId":"368","severity":1,"message":"432","line":591,"column":11,"nodeType":"370","messageId":"371","endLine":591,"endColumn":34},{"ruleId":"368","severity":1,"message":"433","line":614,"column":11,"nodeType":"370","messageId":"371","endLine":614,"endColumn":41},{"ruleId":"368","severity":1,"message":"434","line":638,"column":11,"nodeType":"370","messageId":"371","endLine":638,"endColumn":42},{"ruleId":"368","severity":1,"message":"388","line":72,"column":23,"nodeType":"370","messageId":"371","endLine":72,"endColumn":28},{"ruleId":"364","severity":1,"message":"365","line":103,"column":8,"nodeType":"366","endLine":103,"endColumn":10,"suggestions":"435"},"no-native-reassign",["436"],"no-negated-in-lhs",["437"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["438"],"no-unused-vars","'handleSelectLanguage' is assigned a value but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'setState' is defined but never used.","'freelancer2' is defined but never used.","'freelancer3' is defined but never used.","'freelancer4' is defined but never used.","'freelancer5' is defined but never used.","'freelancer6' is defined but never used.","'freelancer7' is defined but never used.","'freelancer8' is defined but never used.",["439"],"'selectFreelancer' is assigned a value but never used.","'value' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["440"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'Select' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'model' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'LANGUAGES' is defined but never used.","'SKILLS' is defined but never used.","'DEGREE' is defined but never used.","'clearState' is assigned a value but never used.","'selectCurrentCountry' is assigned a value but never used.","'selectCurrentState' is assigned a value but never used.","'selectCurrentCity' is assigned a value but never used.","'handleSelectAdditional' is assigned a value but never used.","'onFileUpload' is assigned a value but never used.",["441"],"'addEducation' is assigned a value but never used.","'removeEducation' is assigned a value but never used.","'handleEducation' is assigned a value but never used.","'handleSelectEducation' is assigned a value but never used.","'addExperience' is assigned a value but never used.","'removeExperience' is assigned a value but never used.","'handleExperience' is assigned a value but never used.","'handleSelectExperience' is assigned a value but never used.","'addProject' is assigned a value but never used.","'removeProject' is assigned a value but never used.","'handleProject' is assigned a value but never used.","'handleSelectProject' is assigned a value but never used.","'handleProjectDateChange' is assigned a value but never used.","'marital_options' is assigned a value but never used.","'nationality_options' is assigned a value but never used.","'technology_options' is assigned a value but never used.","'education_level_options' is assigned a value but never used.","'result_options' is assigned a value but never used.","'year_of_passing_options' is assigned a value but never used.","'employment_period_year_options' is assigned a value but never used.","'employment_period_month_options' is assigned a value but never used.",["442"],"no-global-assign","no-unsafe-negation",{"desc":"443","fix":"444"},{"desc":"443","fix":"445"},{"desc":"443","fix":"446"},{"desc":"443","fix":"447"},{"desc":"443","fix":"448"},"Update the dependencies array to be: [fetchData]",{"range":"449","text":"450"},{"range":"451","text":"450"},{"range":"452","text":"450"},{"range":"453","text":"450"},{"range":"454","text":"450"},[3923,3925],"[fetchData]",[2070,2072],[563,565],[8142,8144],[3122,3124]]